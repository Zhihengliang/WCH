
SLAVE.elf:     file format elf32-littleriscv
SLAVE.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00000000

Program Header:
    LOAD off    0x00001000 vaddr 0x00000000 paddr 0x00000000 align 2**12
         filesz 0x00003524 memsz 0x00003524 flags r-x
    LOAD off    0x00005000 vaddr 0x20000000 paddr 0x00003524 align 2**12
         filesz 0x00000080 memsz 0x000000c4 flags rw-
    LOAD off    0x00005800 vaddr 0x20004800 paddr 0x20004800 align 2**12
         filesz 0x00000000 memsz 0x00000800 flags rw-

Sections:
Idx Name           Size      VMA       LMA       File off  Algn  Flags
  0 .init          00000038  00000000  00000000  00001000  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .vector        00000108  00000038  00000038  00001038  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text          000033e4  00000140  00000140  00001140  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .fini          00000000  00003524  00003524  00005080  2**0  CONTENTS, ALLOC, LOAD, CODE
  4 .dalign        00000000  20000000  20000000  00005080  2**0  CONTENTS
  5 .dlalign       00000000  00003524  00003524  00005080  2**0  CONTENTS
  6 .data          00000080  20000000  00003524  00005000  2**2  CONTENTS, ALLOC, LOAD, DATA
  7 .bss           00000044  20000080  000035a4  00005080  2**2  ALLOC
  8 .stack         00000800  20004800  20004800  00005800  2**0  ALLOC
  9 .debug_info    00010c36  00000000  00000000  00005080  2**0  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev  00002aa0  00000000  00000000  00015cb6  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000a90  00000000  00000000  00018758  2**3  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges  00000950  00000000  00000000  000191e8  2**3  CONTENTS, READONLY, DEBUGGING
 13 .debug_line    000096e4  00000000  00000000  00019b38  2**0  CONTENTS, READONLY, DEBUGGING
 14 .debug_str     00003690  00000000  00000000  0002321c  2**0  CONTENTS, READONLY, DEBUGGING
 15 .comment       00000033  00000000  00000000  000268ac  2**0  CONTENTS, READONLY
 16 .debug_frame   00002fc8  00000000  00000000  000268e0  2**2  CONTENTS, READONLY, DEBUGGING
 17 .stab          000000b4  00000000  00000000  000298a8  2**2  CONTENTS, READONLY, DEBUGGING
 18 .stabstr       00000183  00000000  00000000  0002995c  2**0  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000 l    d  .init	00000000 .init
00000038 l    d  .vector	00000000 .vector
00000140 l    d  .text	00000000 .text
00003524 l    d  .fini	00000000 .fini
20000000 l    d  .dalign	00000000 .dalign
00003524 l    d  .dlalign	00000000 .dlalign
20000000 l    d  .data	00000000 .data
20000080 l    d  .bss	00000000 .bss
20004800 l    d  .stack	00000000 .stack
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .stab	00000000 .stab
00000000 l    d  .stabstr	00000000 .stabstr
00000000 l    df *ABS*	00000000 ./Libraries/wch_libraries/Startup/startup_ch32v10x.o
00000038 l       .vector	00000000 _vector_base
00000000 l    df *ABS*	00000000 isr.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 ch32v10x_dma.c
00000000 l    df *ABS*	00000000 ch32v10x_exti.c
00000000 l    df *ABS*	00000000 ch32v10x_gpio.c
00000000 l    df *ABS*	00000000 ch32v10x_misc.c
00000be8 l     F .text	00000032 NVIC_EnableIRQ
00000c1a l     F .text	00000032 NVIC_DisableIRQ
00000c4c l     F .text	0000002a NVIC_SetPriority
00000000 l    df *ABS*	00000000 ch32v10x_rcc.c
20000000 l     O .data	00000010 APBAHBPrescTable
20000070 l     O .data	00000004 ADCPrescTable
00000000 l    df *ABS*	00000000 ch32v10x_tim.c
00000000 l    df *ABS*	00000000 ch32v10x_usart.c
00000000 l    df *ABS*	00000000 SEEKFREE_MT9V03X.c
00000000 l    df *ABS*	00000000 SEEKFREE_UART_7725.c
00000000 l    df *ABS*	00000000 zf_gpio.c
00000000 l    df *ABS*	00000000 zf_nvic.c
00000000 l    df *ABS*	00000000 zf_pit.c
00003410 l     O .text	00000017 __func__.3548
00000000 l    df *ABS*	00000000 zf_uart.c
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 clock_config.c
00001fe2 l     F .text	00000140 SetSysClock
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 nano-vfprintf.c
000021fe l     F .text	00000028 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00002c2e l     F .text	0000006a std
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 close.c
00000000 l    df *ABS*	00000000 fstat.c
00000000 l    df *ABS*	00000000 getpid.c
00000000 l    df *ABS*	00000000 isatty.c
00000000 l    df *ABS*	00000000 kill.c
00000000 l    df *ABS*	00000000 lseek.c
00000000 l    df *ABS*	00000000 read.c
00000000 l    df *ABS*	00000000 sbrk.c
200000a4 l     O .bss	00000004 heap_end.1518
00000000 l    df *ABS*	00000000 _exit.c
00000000 l    df *ABS*	00000000 zf_qtimer.c
00000000 l    df *ABS*	00000000 impure.c
20000010 l     O .data	00000060 impure_data
00000000 l    df *ABS*	00000000 common.c
00000000 l    df *ABS*	00000000 reent.c
0000023e g     F .text	00000014 EXTI2_IRQHandler
000032d0 g     F .text	00000028 _isatty_r
0000336c g     F .text	0000000c _getpid
000032f8 g     F .text	0000002c _lseek_r
20000080 g     O .bss	00000002 slave_encoder_left
0000316a g     F .text	0000002a _kill_r
20000870 g       .data	00000000 __global_pointer$
0000035e g     F .text	00000090 TIM1_CC_IRQHandler
00003214 g     F .text	00000036 __sseek
00002ce8 g     F .text	00000066 __sinit
000028b4 g     F .text	000000c0 __swbuf_r
00000516 g     F .text	00000008 HardFault_Handler
00002ca2 g     F .text	00000046 __sfmoreglue
00003326 g     F .text	00000002 __malloc_unlock
00000c76 g     F .text	000000c4 NVIC_Init
20000098 g     O .bss	00000004 sys_clk
00000506 g     F .text	00000010 NMI_Handler
00000252 g     F .text	00000010 EXTI3_IRQHandler
20000074 g     O .data	00000004 camera_type
00001500 g     F .text	00000046 USART_GetFlagStatus
000032a6 g     F .text	0000002a _fstat_r
00003428 g     O .text	00000010 TIMERN
200000c0 g     O .bss	00000004 errno
20000080 g       .bss	00000000 _sbss
00000800 g       *ABS*	00000000 __stack_size
200000a8 g     O .bss	0000000b temp_buff
20000095 g     O .bss	00000001 ov7725_uart_finish_flag
00002c98 g     F .text	0000000a _cleanup_r
00000aac g     F .text	0000013c GPIO_PinRemapConfig
000001e8 g     F .text	00000010 EXTI0_IRQHandler
000010da g     F .text	00000058 TIM_Cmd
20000082 g     O .bss	00000002 slave_encoder_right
00001ede g     F .text	00000046 uart_putbuff
000030fe g     F .text	00000062 _raise_r
00003360 g     F .text	0000000c _fstat
0000219e g     F .text	0000003a __assert_func
00000038 g       .init	00000000 _einit
00001a9c g     F .text	00000028 sys_recover_irq
00001212 g     F .text	0000002e TIM_ClearITPendingBit
00000f54 g     F .text	00000046 RCC_APB2PeriphClockCmd
00001706 g     F .text	00000036 mt9v03x_vsync
00000292 g     F .text	00000010 ADC1_2_IRQHandler
00003194 g     F .text	00000002 _getpid_r
0000084a g     F .text	0000022a GPIO_Init
000019e2 g     F .text	00000098 nvic_init
00001472 g     F .text	00000060 USART_Cmd
000030d6 g     F .text	00000028 _sbrk_r
00003328 g     F .text	0000002c _read_r
00001648 g     F .text	0000004e USART_ClearITPendingBit
00000f9a g     F .text	00000046 RCC_APB1PeriphClockCmd
00003378 g     F .text	0000000c _isatty
2000007c g     O .data	00000004 _global_impure_ptr
000004c0 g     F .text	00000046 DMA1_Channel4_IRQHandler
20000084 g     O .bss	00000002 slave_position
00002a80 g     F .text	0000000e abort
00001b28 g     F .text	00000184 timer_pit_interrupt_ms
000033a8 g     F .text	00000020 _sbrk
00000740 g     F .text	0000005c DMA_GetFlagStatus
000004b0 g     F .text	00000010 USART3_IRQHandler
0000082a g     F .text	00000020 EXTI_ClearITPendingBit
200000c4 g       .bss	00000000 _ebss
00001546 g     F .text	00000102 USART_GetITStatus
0000176a g     F .text	00000070 ov7725_cof_uart_interrupt
00003438 g     O .text	00000010 UARTN
000021d8 g     F .text	00000026 fprintf
0000062a g     F .text	00000058 TIM4_IRQHandler
00000a74 g     F .text	00000038 GPIO_WriteBit
20000093 g     O .bss	00000001 ov7725_uart_receive_num
000034c4 g     O .text	00000020 __sf_fake_stderr
200000c4 g       .bss	00000000 end
000011a2 g     F .text	00000070 TIM_GetITStatus
00000d3a g     F .text	0000021a RCC_GetClocksFreq
00002226 g     F .text	00000042 __sfputs_r
00001d84 g     F .text	00000104 uart_init
00002f4a g     F .text	0000001a memchr
0000051e g     F .text	00000056 get_sensor_data
00001240 g     F .text	00000232 USART_Init
00002f64 g     F .text	000000a4 _free_r
00000416 g     F .text	00000030 TIM3_IRQHandler
00001b00 g     F .text	00000028 EnableGlobalIRQ
00001cac g     F .text	000000d8 uart_gpio_init
00000306 g     F .text	00000058 TIM1_TRG_COM_IRQHandler
00001810 g     F .text	0000002e ov7725_uart_dma
00000000 g       .init	00000000 _start
00003390 g     F .text	0000000c _lseek
20000094 g     O .bss	00000001 ov7725_uart_receive_flag
00001a7a g     F .text	00000022 close_all_irq
00000282 g     F .text	00000010 EXTI15_10_IRQHandler
00003400 g     O .text	00000010 GPION
00001132 g     F .text	00000070 TIM_ITConfig
0000327e g     F .text	00000028 _close_r
20000000 g       .dalign	00000000 _data_vma
00002974 g     F .text	0000010c __swsetup_r
00000272 g     F .text	00000010 EXTI9_5_IRQHandler
00002d4e g     F .text	0000009c __sfp
00001f24 g     F .text	00000046 board_init
00003196 g     F .text	00000030 __sread
00003324 g     F .text	00000002 __malloc_lock
00002bca g     F .text	00000064 _fflush_r
000007d4 g     F .text	00000056 EXTI_GetITStatus
000034e4 g     O .text	00000020 __sf_fake_stdin
0000173c g     F .text	0000002e mt9v03x_dma
00000140 g     F .text	000000a8 memset
00000682 g     F .text	00000044 main
0000324a g     F .text	00000006 __sclose
00003008 g     F .text	000000ce _malloc_r
00000262 g     F .text	00000010 EXTI4_IRQHandler
00001ac4 g     F .text	0000003c DisableGlobalIRQ
00002122 g     F .text	0000007c SystemInit
00000000 g       .init	00000000 _sinit
00003250 g     F .text	0000002e _write_r
2000008b g     O .bss	00000001 receive_num
200000b4 g     O .bss	0000000c irq_status
00002506 g     F .text	0000010c _printf_common
20000078 g     O .data	00000004 _impure_ptr
000002d6 g     F .text	00000030 TIM1_UP_IRQHandler
20000088 g     O .bss	00000003 receive
00002a8e g     F .text	0000013c __sflush_r
000017da g     F .text	00000036 ov7725_uart_vsync
000003ee g     F .text	00000028 TIM2_IRQHandler
20005000 g       .stack	00000000 _eusrstack
2000008c g     O .bss	00000001 uart_receive_flag
00001696 g     F .text	00000070 mt9v03x_uart_callback
2000008d g     O .bss	00000001 mt9v03x_finish_flag
000002a2 g     F .text	00000034 TIM1_BRK_IRQHandler
00002e56 g     F .text	00000058 __swhatbuf_r
000014d2 g     F .text	0000002e USART_SendData
000001f8 g     F .text	00000046 EXTI1_IRQHandler
00001f6a g     F .text	00000078 _write
20000080 g       .data	00000000 _edata
00000fe0 g     F .text	000000fa TIM_TimeBaseInit
00003524 g       .dlalign	00000000 _data_lma
00000456 g     F .text	0000005a USART2_IRQHandler
000031c6 g     F .text	0000004e __swrite
000021d8 g     F .text	00000026 fiprintf
00002268 g     F .text	0000029e _vfiprintf_r
00002dea g     F .text	0000006c _fwalk_reent
00003384 g     F .text	0000000c _kill
00003504 g     O .text	00000020 __sf_fake_stdout
0000079c g     F .text	00000038 DMA_ClearFlag
0000339c g     F .text	0000000c _read
000006c6  w      .text	00000000 handle_reset
000033c8 g     F .text	00000002 _exit
00000574 g     F .text	000000b6 process_data
00000446 g     F .text	00000010 USART1_IRQHandler
00002eae g     F .text	0000009c __smakebuf_r
00002612 g     F .text	000002a2 _printf_i
200000a0 g     O .bss	00000004 __malloc_sbrk_start
0000183e g     F .text	000001a4 gpio_init
2000009c g     O .bss	00000004 __malloc_free_list
00002268 g     F .text	0000029e _vfprintf_r
00001e88 g     F .text	00000056 uart_putchar
20000090 g     O .bss	00000003 ov7725_uart_receive
00003354 g     F .text	0000000c _close
00003160 g     F .text	0000000a raise



Disassembly of section .init:

00000000 <_sinit>:
_start():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:13

	.section	.init,"ax",@progbits
	.global	_start
	.align	1
_start:
	j	handle_reset
   0:	6c60006f          	j	6c6 <handle_reset>
   4:	00000013          	nop
   8:	00000013          	nop
   c:	00000013          	nop
  10:	00000013          	nop
  14:	00000013          	nop
  18:	00000013          	nop
  1c:	00000013          	nop
  20:	00000013          	nop
  24:	00000013          	nop
  28:	00000013          	nop
  2c:	00000013          	nop
  30:	00000013          	nop
  34:	00100073          	ebreak

Disassembly of section .vector:

00000038 <_vector_base>:
_vector_base():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:31
	.word 0x00100073
    .section    .vector,"ax",@progbits
    .align  1
_vector_base:
    .option norvc;
        j   _start
  38:	fc9ff06f          	j	0 <_sinit>
  3c:	0000                	unimp
  3e:	0000                	unimp
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:33
    .word   0
        j   NMI_Handler                 /* NMI Handler */
  40:	4c60006f          	j	506 <NMI_Handler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:34
        j   HardFault_Handler           /* Hard Fault Handler */
  44:	4d20006f          	j	516 <HardFault_Handler>
	...
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:43
    .word   0
    .word   0
    .word   0
    .word   0
    .word   0
        j   SysTick_Handler            /* SysTick Handler */
  68:	f99ff06f          	j	0 <_sinit>
  6c:	0000                	unimp
  6e:	0000                	unimp
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:45
    .word   0
        j   SW_handler                 /* SW Handler */
  70:	f91ff06f          	j	0 <_sinit>
  74:	0000                	unimp
  76:	0000                	unimp
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:48
    .word   0
    /* External Interrupts */
        j   WWDG_IRQHandler            /* Window Watchdog */
  78:	f89ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:49
        j   PVD_IRQHandler             /* PVD through EXTI Line detect */
  7c:	f85ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:50
        j   TAMPER_IRQHandler          /* TAMPER */
  80:	f81ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:51
        j   RTC_IRQHandler             /* RTC */
  84:	f7dff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:52
        j   FLASH_IRQHandler           /* Flash */
  88:	f79ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:53
        j   RCC_IRQHandler             /* RCC */
  8c:	f75ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:54
        j   EXTI0_IRQHandler           /* EXTI Line 0 */
  90:	1580006f          	j	1e8 <EXTI0_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:55
        j   EXTI1_IRQHandler           /* EXTI Line 1 */
  94:	1640006f          	j	1f8 <EXTI1_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:56
        j   EXTI2_IRQHandler           /* EXTI Line 2 */
  98:	1a60006f          	j	23e <EXTI2_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:57
        j   EXTI3_IRQHandler           /* EXTI Line 3 */
  9c:	1b60006f          	j	252 <EXTI3_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:58
        j   EXTI4_IRQHandler           /* EXTI Line 4 */
  a0:	1c20006f          	j	262 <EXTI4_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:59
        j   DMA1_Channel1_IRQHandler   /* DMA1 Channel 1 */
  a4:	f5dff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:60
        j   DMA1_Channel2_IRQHandler   /* DMA1 Channel 2 */
  a8:	f59ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:61
        j   DMA1_Channel3_IRQHandler   /* DMA1 Channel 3 */
  ac:	f55ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:62
        j   DMA1_Channel4_IRQHandler   /* DMA1 Channel 4 */
  b0:	4100006f          	j	4c0 <DMA1_Channel4_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:63
        j   DMA1_Channel5_IRQHandler   /* DMA1 Channel 5 */
  b4:	f4dff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:64
        j   DMA1_Channel6_IRQHandler   /* DMA1 Channel 6 */
  b8:	f49ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:65
        j   DMA1_Channel7_IRQHandler   /* DMA1 Channel 7 */
  bc:	f45ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:66
        j   ADC1_2_IRQHandler          /* ADC1_2 */
  c0:	1d20006f          	j	292 <ADC1_2_IRQHandler>
	...
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:71
        .word   0
        .word   0
        .word   0
        .word   0
        j   EXTI9_5_IRQHandler         /* EXTI Line 9..5 */
  d4:	19e0006f          	j	272 <EXTI9_5_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:72
        j   TIM1_BRK_IRQHandler        /* TIM1 Break */
  d8:	1ca0006f          	j	2a2 <TIM1_BRK_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:73
        j   TIM1_UP_IRQHandler         /* TIM1 Update */
  dc:	1fa0006f          	j	2d6 <TIM1_UP_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:74
        j   TIM1_TRG_COM_IRQHandler    /* TIM1 Trigger and Commutation */
  e0:	2260006f          	j	306 <TIM1_TRG_COM_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:75
        j   TIM1_CC_IRQHandler         /* TIM1 Capture Compare */
  e4:	27a0006f          	j	35e <TIM1_CC_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:76
        j   TIM2_IRQHandler            /* TIM2 */
  e8:	3060006f          	j	3ee <TIM2_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:77
        j   TIM3_IRQHandler            /* TIM3 */
  ec:	32a0006f          	j	416 <TIM3_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:78
        j   TIM4_IRQHandler            /* TIM4 */
  f0:	53a0006f          	j	62a <TIM4_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:79
        j   I2C1_EV_IRQHandler         /* I2C1 Event */
  f4:	f0dff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:80
        j   I2C1_ER_IRQHandler         /* I2C1 Error */
  f8:	f09ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:81
        j   I2C2_EV_IRQHandler         /* I2C2 Event */
  fc:	f05ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:82
        j   I2C2_ER_IRQHandler         /* I2C2 Error */
 100:	f01ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:83
        j   SPI1_IRQHandler            /* SPI1 */
 104:	efdff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:84
        j   SPI2_IRQHandler            /* SPI2 */
 108:	ef9ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:85
        j   USART1_IRQHandler          /* USART1 */
 10c:	33a0006f          	j	446 <USART1_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:86
        j   USART2_IRQHandler          /* USART2 */
 110:	3460006f          	j	456 <USART2_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:87
        j   USART3_IRQHandler          /* USART3 */
 114:	39c0006f          	j	4b0 <USART3_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:88
        j   EXTI15_10_IRQHandler       /* EXTI Line 15..10 */
 118:	16a0006f          	j	282 <EXTI15_10_IRQHandler>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:89
        j   RTCAlarm_IRQHandler        /* RTC Alarm through EXTI Line */
 11c:	ee5ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:90
        j   USBWakeUp_IRQHandler       /* USB Wakeup from suspend */
 120:	ee1ff06f          	j	0 <_sinit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:91
        j   USBHD_IRQHandler           /* USBHD */
 124:	eddff06f          	j	0 <_sinit>
	...

Disassembly of section .text:

00000140 <memset>:
memset():
     140:	433d                	li	t1,15
     142:	872a                	mv	a4,a0
     144:	02c37363          	bgeu	t1,a2,16a <memset+0x2a>
     148:	00f77793          	andi	a5,a4,15
     14c:	efbd                	bnez	a5,1ca <memset+0x8a>
     14e:	e5ad                	bnez	a1,1b8 <memset+0x78>
     150:	ff067693          	andi	a3,a2,-16
     154:	8a3d                	andi	a2,a2,15
     156:	96ba                	add	a3,a3,a4
     158:	c30c                	sw	a1,0(a4)
     15a:	c34c                	sw	a1,4(a4)
     15c:	c70c                	sw	a1,8(a4)
     15e:	c74c                	sw	a1,12(a4)
     160:	0741                	addi	a4,a4,16
     162:	fed76be3          	bltu	a4,a3,158 <memset+0x18>
     166:	e211                	bnez	a2,16a <memset+0x2a>
     168:	8082                	ret
     16a:	40c306b3          	sub	a3,t1,a2
     16e:	068a                	slli	a3,a3,0x2
     170:	00000297          	auipc	t0,0x0
     174:	9696                	add	a3,a3,t0
     176:	00a68067          	jr	10(a3)
     17a:	00b70723          	sb	a1,14(a4)
     17e:	00b706a3          	sb	a1,13(a4)
     182:	00b70623          	sb	a1,12(a4)
     186:	00b705a3          	sb	a1,11(a4)
     18a:	00b70523          	sb	a1,10(a4)
     18e:	00b704a3          	sb	a1,9(a4)
     192:	00b70423          	sb	a1,8(a4)
     196:	00b703a3          	sb	a1,7(a4)
     19a:	00b70323          	sb	a1,6(a4)
     19e:	00b702a3          	sb	a1,5(a4)
     1a2:	00b70223          	sb	a1,4(a4)
     1a6:	00b701a3          	sb	a1,3(a4)
     1aa:	00b70123          	sb	a1,2(a4)
     1ae:	00b700a3          	sb	a1,1(a4)
     1b2:	00b70023          	sb	a1,0(a4)
     1b6:	8082                	ret
     1b8:	0ff5f593          	andi	a1,a1,255
     1bc:	00859693          	slli	a3,a1,0x8
     1c0:	8dd5                	or	a1,a1,a3
     1c2:	01059693          	slli	a3,a1,0x10
     1c6:	8dd5                	or	a1,a1,a3
     1c8:	b761                	j	150 <memset+0x10>
     1ca:	00279693          	slli	a3,a5,0x2
     1ce:	00000297          	auipc	t0,0x0
     1d2:	9696                	add	a3,a3,t0
     1d4:	8286                	mv	t0,ra
     1d6:	fa8680e7          	jalr	-88(a3)
     1da:	8096                	mv	ra,t0
     1dc:	17c1                	addi	a5,a5,-16
     1de:	8f1d                	sub	a4,a4,a5
     1e0:	963e                	add	a2,a2,a5
     1e2:	f8c374e3          	bgeu	t1,a2,16a <memset+0x2a>
     1e6:	b7a5                	j	14e <memset+0xe>

000001e8 <EXTI0_IRQHandler>:
EXTI0_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:63
//void RTCAlarm_IRQHandler(void) __attribute__((interrupt("WCH-Interrupt-fast")));
//void USBWakeUp_IRQHandler(void) __attribute__((interrupt("WCH-Interrupt-fast")));
//void USBHD_IRQHandler(void) __attribute__((interrupt("WCH-Interrupt-fast")));

void EXTI0_IRQHandler(void)
{
     1e8:	1141                	addi	sp,sp,-16
     1ea:	c622                	sw	s0,12(sp)
     1ec:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:66


}
     1ee:	0001                	nop
     1f0:	4432                	lw	s0,12(sp)
     1f2:	0141                	addi	sp,sp,16
     1f4:	30200073          	mret

000001f8 <EXTI1_IRQHandler>:
EXTI1_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:69

void EXTI1_IRQHandler(void)
{
     1f8:	1141                	addi	sp,sp,-16
     1fa:	c622                	sw	s0,12(sp)
     1fc:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:70
    if(SET == EXTI_GetITStatus(EXTI_Line1))
     1fe:	4509                	li	a0,2
     200:	2bd1                	jal	7d4 <EXTI_GetITStatus>
     202:	872a                	mv	a4,a0
     204:	4785                	li	a5,1
     206:	02f71763          	bne	a4,a5,234 <EXTI1_IRQHandler+0x3c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:72
    {
        if(camera_type == CAMERA_BIN_UART)
     20a:	200007b7          	lui	a5,0x20000
     20e:	0747a703          	lw	a4,116(a5) # 20000074 <camera_type>
     212:	4789                	li	a5,2
     214:	00f71563          	bne	a4,a5,21e <EXTI1_IRQHandler+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:73
            ov7725_uart_vsync();
     218:	5c2010ef          	jal	ra,17da <ov7725_uart_vsync>
     21c:	a811                	j	230 <EXTI1_IRQHandler+0x38>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:74
        else if(camera_type == CAMERA_GRAYSCALE)
     21e:	200007b7          	lui	a5,0x20000
     222:	0747a703          	lw	a4,116(a5) # 20000074 <camera_type>
     226:	4785                	li	a5,1
     228:	00f71463          	bne	a4,a5,230 <EXTI1_IRQHandler+0x38>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:75
            mt9v03x_vsync();
     22c:	4da010ef          	jal	ra,1706 <mt9v03x_vsync>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:76
        EXTI_ClearITPendingBit(EXTI_Line1);
     230:	4509                	li	a0,2
     232:	2be5                	jal	82a <EXTI_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:79
    }

}
     234:	0001                	nop
     236:	4432                	lw	s0,12(sp)
     238:	0141                	addi	sp,sp,16
     23a:	30200073          	mret

0000023e <EXTI2_IRQHandler>:
EXTI2_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:82

void EXTI2_IRQHandler(void)
{
     23e:	1141                	addi	sp,sp,-16
     240:	c622                	sw	s0,12(sp)
     242:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:83
    EXTI_ClearITPendingBit(EXTI_Line2);
     244:	4511                	li	a0,4
     246:	23d5                	jal	82a <EXTI_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:84
}
     248:	0001                	nop
     24a:	4432                	lw	s0,12(sp)
     24c:	0141                	addi	sp,sp,16
     24e:	30200073          	mret

00000252 <EXTI3_IRQHandler>:
EXTI3_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:87

void EXTI3_IRQHandler(void)
{
     252:	1141                	addi	sp,sp,-16
     254:	c622                	sw	s0,12(sp)
     256:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:90


}
     258:	0001                	nop
     25a:	4432                	lw	s0,12(sp)
     25c:	0141                	addi	sp,sp,16
     25e:	30200073          	mret

00000262 <EXTI4_IRQHandler>:
EXTI4_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:93

void EXTI4_IRQHandler(void)
{
     262:	1141                	addi	sp,sp,-16
     264:	c622                	sw	s0,12(sp)
     266:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:96


}
     268:	0001                	nop
     26a:	4432                	lw	s0,12(sp)
     26c:	0141                	addi	sp,sp,16
     26e:	30200073          	mret

00000272 <EXTI9_5_IRQHandler>:
EXTI9_5_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:99

void EXTI9_5_IRQHandler(void)
{
     272:	1141                	addi	sp,sp,-16
     274:	c622                	sw	s0,12(sp)
     276:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:102


}
     278:	0001                	nop
     27a:	4432                	lw	s0,12(sp)
     27c:	0141                	addi	sp,sp,16
     27e:	30200073          	mret

00000282 <EXTI15_10_IRQHandler>:
EXTI15_10_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:105

void EXTI15_10_IRQHandler(void)
{
     282:	1141                	addi	sp,sp,-16
     284:	c622                	sw	s0,12(sp)
     286:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:107

}
     288:	0001                	nop
     28a:	4432                	lw	s0,12(sp)
     28c:	0141                	addi	sp,sp,16
     28e:	30200073          	mret

00000292 <ADC1_2_IRQHandler>:
ADC1_2_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:110

void ADC1_2_IRQHandler(void)
{
     292:	1141                	addi	sp,sp,-16
     294:	c622                	sw	s0,12(sp)
     296:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:113


}
     298:	0001                	nop
     29a:	4432                	lw	s0,12(sp)
     29c:	0141                	addi	sp,sp,16
     29e:	30200073          	mret

000002a2 <TIM1_BRK_IRQHandler>:
TIM1_BRK_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:116

void TIM1_BRK_IRQHandler(void)
{
     2a2:	1141                	addi	sp,sp,-16
     2a4:	c622                	sw	s0,12(sp)
     2a6:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:117
    if(TIM_GetITStatus(TIM1, TIM_IT_Break) != RESET)
     2a8:	08000593          	li	a1,128
     2ac:	400137b7          	lui	a5,0x40013
     2b0:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     2b4:	6ef000ef          	jal	ra,11a2 <TIM_GetITStatus>
     2b8:	87aa                	mv	a5,a0
     2ba:	cb89                	beqz	a5,2cc <TIM1_BRK_IRQHandler+0x2a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:119
    {
        TIM_ClearITPendingBit(TIM1, TIM_IT_Break);
     2bc:	08000593          	li	a1,128
     2c0:	400137b7          	lui	a5,0x40013
     2c4:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     2c8:	74b000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:122

    }
}
     2cc:	0001                	nop
     2ce:	4432                	lw	s0,12(sp)
     2d0:	0141                	addi	sp,sp,16
     2d2:	30200073          	mret

000002d6 <TIM1_UP_IRQHandler>:
TIM1_UP_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:125

void TIM1_UP_IRQHandler(void)
{
     2d6:	1141                	addi	sp,sp,-16
     2d8:	c622                	sw	s0,12(sp)
     2da:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:126
    if(TIM_GetITStatus(TIM1, TIM_IT_Update) != RESET)
     2dc:	4585                	li	a1,1
     2de:	400137b7          	lui	a5,0x40013
     2e2:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     2e6:	6bd000ef          	jal	ra,11a2 <TIM_GetITStatus>
     2ea:	87aa                	mv	a5,a0
     2ec:	cb81                	beqz	a5,2fc <TIM1_UP_IRQHandler+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:128
    {
        TIM_ClearITPendingBit(TIM1, TIM_IT_Update);
     2ee:	4585                	li	a1,1
     2f0:	400137b7          	lui	a5,0x40013
     2f4:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     2f8:	71b000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:131

    }
}
     2fc:	0001                	nop
     2fe:	4432                	lw	s0,12(sp)
     300:	0141                	addi	sp,sp,16
     302:	30200073          	mret

00000306 <TIM1_TRG_COM_IRQHandler>:
TIM1_TRG_COM_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:134

void TIM1_TRG_COM_IRQHandler(void)
{
     306:	1141                	addi	sp,sp,-16
     308:	c622                	sw	s0,12(sp)
     30a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:135
    if(TIM_GetITStatus(TIM1, TIM_IT_Trigger) != RESET)
     30c:	04000593          	li	a1,64
     310:	400137b7          	lui	a5,0x40013
     314:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     318:	68b000ef          	jal	ra,11a2 <TIM_GetITStatus>
     31c:	87aa                	mv	a5,a0
     31e:	cb89                	beqz	a5,330 <TIM1_TRG_COM_IRQHandler+0x2a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:137
    {
        TIM_ClearITPendingBit(TIM1, TIM_IT_Trigger);
     320:	04000593          	li	a1,64
     324:	400137b7          	lui	a5,0x40013
     328:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     32c:	6e7000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:140

    }
    if(TIM_GetITStatus(TIM1, TIM_IT_COM) != RESET)
     330:	02000593          	li	a1,32
     334:	400137b7          	lui	a5,0x40013
     338:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     33c:	667000ef          	jal	ra,11a2 <TIM_GetITStatus>
     340:	87aa                	mv	a5,a0
     342:	cb89                	beqz	a5,354 <TIM1_TRG_COM_IRQHandler+0x4e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:142
    {
        TIM_ClearITPendingBit(TIM1, TIM_IT_COM);
     344:	02000593          	li	a1,32
     348:	400137b7          	lui	a5,0x40013
     34c:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     350:	6c3000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:145

    }
}
     354:	0001                	nop
     356:	4432                	lw	s0,12(sp)
     358:	0141                	addi	sp,sp,16
     35a:	30200073          	mret

0000035e <TIM1_CC_IRQHandler>:
TIM1_CC_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:148

void TIM1_CC_IRQHandler(void)
{
     35e:	1141                	addi	sp,sp,-16
     360:	c622                	sw	s0,12(sp)
     362:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:149
    if(TIM_GetITStatus(TIM1, TIM_IT_CC1) != RESET)
     364:	4589                	li	a1,2
     366:	400137b7          	lui	a5,0x40013
     36a:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     36e:	635000ef          	jal	ra,11a2 <TIM_GetITStatus>
     372:	87aa                	mv	a5,a0
     374:	cb81                	beqz	a5,384 <TIM1_CC_IRQHandler+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:151
    {
        TIM_ClearITPendingBit(TIM1, TIM_IT_CC1);
     376:	4589                	li	a1,2
     378:	400137b7          	lui	a5,0x40013
     37c:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     380:	693000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:154

    }
    if(TIM_GetITStatus(TIM1, TIM_IT_CC2) != RESET)
     384:	4591                	li	a1,4
     386:	400137b7          	lui	a5,0x40013
     38a:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     38e:	615000ef          	jal	ra,11a2 <TIM_GetITStatus>
     392:	87aa                	mv	a5,a0
     394:	cb81                	beqz	a5,3a4 <TIM1_CC_IRQHandler+0x46>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:156
    {
        TIM_ClearITPendingBit(TIM1, TIM_IT_CC2);
     396:	4591                	li	a1,4
     398:	400137b7          	lui	a5,0x40013
     39c:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     3a0:	673000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:159

    }
    if(TIM_GetITStatus(TIM1, TIM_IT_CC3) != RESET)
     3a4:	45a1                	li	a1,8
     3a6:	400137b7          	lui	a5,0x40013
     3aa:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     3ae:	5f5000ef          	jal	ra,11a2 <TIM_GetITStatus>
     3b2:	87aa                	mv	a5,a0
     3b4:	cb81                	beqz	a5,3c4 <TIM1_CC_IRQHandler+0x66>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:161
    {
        TIM_ClearITPendingBit(TIM1, TIM_IT_CC3);
     3b6:	45a1                	li	a1,8
     3b8:	400137b7          	lui	a5,0x40013
     3bc:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     3c0:	653000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:164

    }
    if(TIM_GetITStatus(TIM1, TIM_IT_CC4) != RESET)
     3c4:	45c1                	li	a1,16
     3c6:	400137b7          	lui	a5,0x40013
     3ca:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     3ce:	5d5000ef          	jal	ra,11a2 <TIM_GetITStatus>
     3d2:	87aa                	mv	a5,a0
     3d4:	cb81                	beqz	a5,3e4 <TIM1_CC_IRQHandler+0x86>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:166
    {
        TIM_ClearITPendingBit(TIM1, TIM_IT_CC4);
     3d6:	45c1                	li	a1,16
     3d8:	400137b7          	lui	a5,0x40013
     3dc:	c0078513          	addi	a0,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
     3e0:	633000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:169

    }
}
     3e4:	0001                	nop
     3e6:	4432                	lw	s0,12(sp)
     3e8:	0141                	addi	sp,sp,16
     3ea:	30200073          	mret

000003ee <TIM2_IRQHandler>:
TIM2_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:172

void TIM2_IRQHandler(void)
{
     3ee:	1141                	addi	sp,sp,-16
     3f0:	c622                	sw	s0,12(sp)
     3f2:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:174

    if(TIM_GetITStatus(TIM2, TIM_IT_Update) != RESET)
     3f4:	4585                	li	a1,1
     3f6:	40000537          	lui	a0,0x40000
     3fa:	5a9000ef          	jal	ra,11a2 <TIM_GetITStatus>
     3fe:	87aa                	mv	a5,a0
     400:	c791                	beqz	a5,40c <TIM2_IRQHandler+0x1e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:176
    {
        TIM_ClearITPendingBit(TIM2, TIM_IT_Update );
     402:	4585                	li	a1,1
     404:	40000537          	lui	a0,0x40000
     408:	60b000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:182
        //ccd_collect();//CCD数据采集
        //gpio_toggle(B5);
        //GPIO_PIN_RESET(B5);
        //GPIO_PIN_SET(B5);
    }
}
     40c:	0001                	nop
     40e:	4432                	lw	s0,12(sp)
     410:	0141                	addi	sp,sp,16
     412:	30200073          	mret

00000416 <TIM3_IRQHandler>:
TIM3_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:185

void TIM3_IRQHandler(void)
{
     416:	1141                	addi	sp,sp,-16
     418:	c622                	sw	s0,12(sp)
     41a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:186
    if(TIM_GetITStatus(TIM3, TIM_IT_Update) != RESET)
     41c:	4585                	li	a1,1
     41e:	400007b7          	lui	a5,0x40000
     422:	40078513          	addi	a0,a5,1024 # 40000400 <_eusrstack+0x1fffb400>
     426:	57d000ef          	jal	ra,11a2 <TIM_GetITStatus>
     42a:	87aa                	mv	a5,a0
     42c:	cb81                	beqz	a5,43c <TIM3_IRQHandler+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:188
    {
        TIM_ClearITPendingBit(TIM3, TIM_IT_Update );
     42e:	4585                	li	a1,1
     430:	400007b7          	lui	a5,0x40000
     434:	40078513          	addi	a0,a5,1024 # 40000400 <_eusrstack+0x1fffb400>
     438:	5db000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:191

    }
}
     43c:	0001                	nop
     43e:	4432                	lw	s0,12(sp)
     440:	0141                	addi	sp,sp,16
     442:	30200073          	mret

00000446 <USART1_IRQHandler>:
USART1_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:203
//
//    }
//}

void USART1_IRQHandler(void)
{
     446:	1141                	addi	sp,sp,-16
     448:	c622                	sw	s0,12(sp)
     44a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:205

}
     44c:	0001                	nop
     44e:	4432                	lw	s0,12(sp)
     450:	0141                	addi	sp,sp,16
     452:	30200073          	mret

00000456 <USART2_IRQHandler>:
USART2_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:208

void USART2_IRQHandler(void)
{
     456:	1141                	addi	sp,sp,-16
     458:	c622                	sw	s0,12(sp)
     45a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:209
    if(USART_GetITStatus(USART2, USART_IT_RXNE) != RESET)
     45c:	52500593          	li	a1,1317
     460:	400047b7          	lui	a5,0x40004
     464:	40078513          	addi	a0,a5,1024 # 40004400 <_eusrstack+0x1ffff400>
     468:	0de010ef          	jal	ra,1546 <USART_GetITStatus>
     46c:	87aa                	mv	a5,a0
     46e:	cf85                	beqz	a5,4a6 <USART2_IRQHandler+0x50>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:211
    {
        USART_ClearITPendingBit(USART2, USART_IT_RXNE);
     470:	52500593          	li	a1,1317
     474:	400047b7          	lui	a5,0x40004
     478:	40078513          	addi	a0,a5,1024 # 40004400 <_eusrstack+0x1ffff400>
     47c:	1cc010ef          	jal	ra,1648 <USART_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:212
        if(camera_type == CAMERA_BIN_UART)
     480:	200007b7          	lui	a5,0x20000
     484:	0747a703          	lw	a4,116(a5) # 20000074 <camera_type>
     488:	4789                	li	a5,2
     48a:	00f71563          	bne	a4,a5,494 <USART2_IRQHandler+0x3e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:213
            ov7725_cof_uart_interrupt();
     48e:	2dc010ef          	jal	ra,176a <ov7725_cof_uart_interrupt>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:217
        else if(camera_type == CAMERA_GRAYSCALE)
            mt9v03x_uart_callback();
    }
}
     492:	a811                	j	4a6 <USART2_IRQHandler+0x50>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:214
        else if(camera_type == CAMERA_GRAYSCALE)
     494:	200007b7          	lui	a5,0x20000
     498:	0747a703          	lw	a4,116(a5) # 20000074 <camera_type>
     49c:	4785                	li	a5,1
     49e:	00f71463          	bne	a4,a5,4a6 <USART2_IRQHandler+0x50>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:215
            mt9v03x_uart_callback();
     4a2:	1f4010ef          	jal	ra,1696 <mt9v03x_uart_callback>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:217
}
     4a6:	0001                	nop
     4a8:	4432                	lw	s0,12(sp)
     4aa:	0141                	addi	sp,sp,16
     4ac:	30200073          	mret

000004b0 <USART3_IRQHandler>:
USART3_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:220

void USART3_IRQHandler(void)
{
     4b0:	1141                	addi	sp,sp,-16
     4b2:	c622                	sw	s0,12(sp)
     4b4:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:222

}
     4b6:	0001                	nop
     4b8:	4432                	lw	s0,12(sp)
     4ba:	0141                	addi	sp,sp,16
     4bc:	30200073          	mret

000004c0 <DMA1_Channel4_IRQHandler>:
DMA1_Channel4_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:225

void DMA1_Channel4_IRQHandler(void)
{
     4c0:	1141                	addi	sp,sp,-16
     4c2:	c622                	sw	s0,12(sp)
     4c4:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:226
    if(SET == DMA_GetFlagStatus(DMA1_FLAG_TC4))
     4c6:	6509                	lui	a0,0x2
     4c8:	2ca5                	jal	740 <DMA_GetFlagStatus>
     4ca:	872a                	mv	a4,a0
     4cc:	4785                	li	a5,1
     4ce:	02f71763          	bne	a4,a5,4fc <DMA1_Channel4_IRQHandler+0x3c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:228
    {
        DMA_ClearFlag(DMA1_FLAG_TC4);
     4d2:	6509                	lui	a0,0x2
     4d4:	24e1                	jal	79c <DMA_ClearFlag>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:229
        if(camera_type == CAMERA_BIN_UART)
     4d6:	200007b7          	lui	a5,0x20000
     4da:	0747a703          	lw	a4,116(a5) # 20000074 <camera_type>
     4de:	4789                	li	a5,2
     4e0:	00f71563          	bne	a4,a5,4ea <DMA1_Channel4_IRQHandler+0x2a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:230
            ov7725_uart_dma();
     4e4:	32c010ef          	jal	ra,1810 <ov7725_uart_dma>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:234
        else if(camera_type == CAMERA_GRAYSCALE)
            mt9v03x_dma();
    }
}
     4e8:	a811                	j	4fc <DMA1_Channel4_IRQHandler+0x3c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:231
        else if(camera_type == CAMERA_GRAYSCALE)
     4ea:	200007b7          	lui	a5,0x20000
     4ee:	0747a703          	lw	a4,116(a5) # 20000074 <camera_type>
     4f2:	4785                	li	a5,1
     4f4:	00f71463          	bne	a4,a5,4fc <DMA1_Channel4_IRQHandler+0x3c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:232
            mt9v03x_dma();
     4f8:	244010ef          	jal	ra,173c <mt9v03x_dma>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:234
}
     4fc:	0001                	nop
     4fe:	4432                	lw	s0,12(sp)
     500:	0141                	addi	sp,sp,16
     502:	30200073          	mret

00000506 <NMI_Handler>:
NMI_Handler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:243
* Description    : This function handles NMI exception.
* Input          : None
* Return         : None
*******************************************************************************/
void NMI_Handler(void)
{
     506:	1141                	addi	sp,sp,-16
     508:	c622                	sw	s0,12(sp)
     50a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:245

}
     50c:	0001                	nop
     50e:	4432                	lw	s0,12(sp)
     510:	0141                	addi	sp,sp,16
     512:	30200073          	mret

00000516 <HardFault_Handler>:
HardFault_Handler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:254
* Description    : This function handles Hard Fault exception.
* Input          : None
* Return         : None
*******************************************************************************/
void HardFault_Handler(void)
{
     516:	1141                	addi	sp,sp,-16
     518:	c622                	sw	s0,12(sp)
     51a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/isr.c:256 (discriminator 1)

  while (1)
     51c:	a001                	j	51c <HardFault_Handler+0x6>

0000051e <get_sensor_data>:
get_sensor_data():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:41
//  @return     void
//  @since      v1.0
//  Sample usage:
//-------------------------------------------------------------------------------------------------------------------
void get_sensor_data(void)
{
     51e:	1141                	addi	sp,sp,-16
     520:	c622                	sw	s0,12(sp)
     522:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:43
    //这里仅仅是提供一个模拟数据
    slave_encoder_left++;
     524:	81019783          	lh	a5,-2032(gp) # 20000080 <_edata>
     528:	07c2                	slli	a5,a5,0x10
     52a:	83c1                	srli	a5,a5,0x10
     52c:	0785                	addi	a5,a5,1
     52e:	07c2                	slli	a5,a5,0x10
     530:	83c1                	srli	a5,a5,0x10
     532:	01079713          	slli	a4,a5,0x10
     536:	8741                	srai	a4,a4,0x10
     538:	80e19823          	sh	a4,-2032(gp) # 20000080 <_edata>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:44
    slave_encoder_right--;
     53c:	81219783          	lh	a5,-2030(gp) # 20000082 <slave_encoder_right>
     540:	07c2                	slli	a5,a5,0x10
     542:	83c1                	srli	a5,a5,0x10
     544:	17fd                	addi	a5,a5,-1
     546:	07c2                	slli	a5,a5,0x10
     548:	83c1                	srli	a5,a5,0x10
     54a:	01079713          	slli	a4,a5,0x10
     54e:	8741                	srai	a4,a4,0x10
     550:	80e19923          	sh	a4,-2030(gp) # 20000082 <slave_encoder_right>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:45
    slave_position += 10;
     554:	81419783          	lh	a5,-2028(gp) # 20000084 <slave_position>
     558:	07c2                	slli	a5,a5,0x10
     55a:	83c1                	srli	a5,a5,0x10
     55c:	07a9                	addi	a5,a5,10
     55e:	07c2                	slli	a5,a5,0x10
     560:	83c1                	srli	a5,a5,0x10
     562:	01079713          	slli	a4,a5,0x10
     566:	8741                	srai	a4,a4,0x10
     568:	80e19a23          	sh	a4,-2028(gp) # 20000084 <slave_position>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:46
}
     56c:	0001                	nop
     56e:	4432                	lw	s0,12(sp)
     570:	0141                	addi	sp,sp,16
     572:	8082                	ret

00000574 <process_data>:
process_data():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:56
//  @return     void
//  @since      v1.0
//  Sample usage:
//-------------------------------------------------------------------------------------------------------------------
void process_data(void)
{
     574:	1141                	addi	sp,sp,-16
     576:	c622                	sw	s0,12(sp)
     578:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:57
    temp_buff[0] = 0xD8;                         //帧头
     57a:	fd800713          	li	a4,-40
     57e:	82e18c23          	sb	a4,-1992(gp) # 200000a8 <temp_buff>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:58
    temp_buff[1] = 0xB0;                         //功能字
     582:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     586:	fb000713          	li	a4,-80
     58a:	00e780a3          	sb	a4,1(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:59
    temp_buff[2] = slave_encoder_left>>8;        //数据高8位
     58e:	81019783          	lh	a5,-2032(gp) # 20000080 <_edata>
     592:	87a1                	srai	a5,a5,0x8
     594:	07c2                	slli	a5,a5,0x10
     596:	87c1                	srai	a5,a5,0x10
     598:	0ff7f713          	andi	a4,a5,255
     59c:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     5a0:	00e78123          	sb	a4,2(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:60
    temp_buff[3] = slave_encoder_left&0xFF;      //数据低8位
     5a4:	81019783          	lh	a5,-2032(gp) # 20000080 <_edata>
     5a8:	0ff7f713          	andi	a4,a5,255
     5ac:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     5b0:	00e781a3          	sb	a4,3(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:62

    temp_buff[4] = 0xB1;                         //功能字
     5b4:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     5b8:	fb100713          	li	a4,-79
     5bc:	00e78223          	sb	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:63
    temp_buff[5] = slave_encoder_right>>8;       //数据高8位
     5c0:	81219783          	lh	a5,-2030(gp) # 20000082 <slave_encoder_right>
     5c4:	87a1                	srai	a5,a5,0x8
     5c6:	07c2                	slli	a5,a5,0x10
     5c8:	87c1                	srai	a5,a5,0x10
     5ca:	0ff7f713          	andi	a4,a5,255
     5ce:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     5d2:	00e782a3          	sb	a4,5(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:64
    temp_buff[6] = slave_encoder_right&0xFF;     //数据低8位
     5d6:	81219783          	lh	a5,-2030(gp) # 20000082 <slave_encoder_right>
     5da:	0ff7f713          	andi	a4,a5,255
     5de:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     5e2:	00e78323          	sb	a4,6(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:66

    temp_buff[7] = 0xB2;                         //功能字
     5e6:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     5ea:	fb200713          	li	a4,-78
     5ee:	00e783a3          	sb	a4,7(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:67
    temp_buff[8] = slave_position>>8;            //数据高8位
     5f2:	81419783          	lh	a5,-2028(gp) # 20000084 <slave_position>
     5f6:	87a1                	srai	a5,a5,0x8
     5f8:	07c2                	slli	a5,a5,0x10
     5fa:	87c1                	srai	a5,a5,0x10
     5fc:	0ff7f713          	andi	a4,a5,255
     600:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     604:	00e78423          	sb	a4,8(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:68
    temp_buff[9] = slave_position&0xFF;          //数据低8位
     608:	81419783          	lh	a5,-2028(gp) # 20000084 <slave_position>
     60c:	0ff7f713          	andi	a4,a5,255
     610:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     614:	00e784a3          	sb	a4,9(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:70

    temp_buff[10] = 0xEE;                        //帧尾
     618:	83818793          	addi	a5,gp,-1992 # 200000a8 <temp_buff>
     61c:	5739                	li	a4,-18
     61e:	00e78523          	sb	a4,10(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:71
}
     622:	0001                	nop
     624:	4432                	lw	s0,12(sp)
     626:	0141                	addi	sp,sp,16
     628:	8082                	ret

0000062a <TIM4_IRQHandler>:
TIM4_IRQHandler():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:82
//  @since      v1.0
//  Sample usage:
//-------------------------------------------------------------------------------------------------------------------
void TIM4_IRQHandler(void) __attribute__((interrupt("WCH-Interrupt-fast")));
void TIM4_IRQHandler(void)
{
     62a:	1141                	addi	sp,sp,-16
     62c:	c622                	sw	s0,12(sp)
     62e:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:83
    if(TIM_GetITStatus(TIM4, TIM_IT_Update) != RESET)
     630:	4585                	li	a1,1
     632:	400017b7          	lui	a5,0x40001
     636:	80078513          	addi	a0,a5,-2048 # 40000800 <_eusrstack+0x1fffb800>
     63a:	369000ef          	jal	ra,11a2 <TIM_GetITStatus>
     63e:	87aa                	mv	a5,a0
     640:	cf85                	beqz	a5,678 <TIM4_IRQHandler+0x4e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:85
    {
        TIM_ClearITPendingBit(TIM4, TIM_IT_Update);
     642:	4585                	li	a1,1
     644:	400017b7          	lui	a5,0x40001
     648:	80078513          	addi	a0,a5,-2048 # 40000800 <_eusrstack+0x1fffb800>
     64c:	3c7000ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:86
        GPIO_PIN_SET(A0);                           //A0引脚拉高
     650:	678d                	lui	a5,0x3
     652:	4007a783          	lw	a5,1024(a5) # 3400 <GPION>
     656:	873e                	mv	a4,a5
     658:	4785                	li	a5,1
     65a:	cb1c                	sw	a5,16(a4)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:88

        get_sensor_data();                          //获取传感器数据。
     65c:	35c9                	jal	51e <get_sensor_data>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:89
        process_data();                             //根据协议处理数据，并存入temp_buff中。
     65e:	3f19                	jal	574 <process_data>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:90
        uart_putbuff(UART_3, temp_buff, LINE_LEN);  //通过串口3将数据发送出去。
     660:	462d                	li	a2,11
     662:	83818593          	addi	a1,gp,-1992 # 200000a8 <temp_buff>
     666:	4509                	li	a0,2
     668:	077010ef          	jal	ra,1ede <uart_putbuff>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:92

        GPIO_PIN_RESET(A0);                         //A0引脚拉低
     66c:	678d                	lui	a5,0x3
     66e:	4007a783          	lw	a5,1024(a5) # 3400 <GPION>
     672:	873e                	mv	a4,a5
     674:	4785                	li	a5,1
     676:	cb5c                	sw	a5,20(a4)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:94
    }
}
     678:	0001                	nop
     67a:	4432                	lw	s0,12(sp)
     67c:	0141                	addi	sp,sp,16
     67e:	30200073          	mret

00000682 <main>:
main():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:97

int main(void)
{
     682:	1141                	addi	sp,sp,-16
     684:	c606                	sw	ra,12(sp)
     686:	c422                	sw	s0,8(sp)
     688:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:98
    DisableGlobalIRQ();
     68a:	43a010ef          	jal	ra,1ac4 <DisableGlobalIRQ>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:99
    board_init();           //务必保留，本函数用于初始化MPU 时钟 调试串口
     68e:	097010ef          	jal	ra,1f24 <board_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:101

    gpio_init(A0, GPO, 0, GPIO_PIN_CONFIG);                 //同步引脚初始化
     692:	31000693          	li	a3,784
     696:	4601                	li	a2,0
     698:	4585                	li	a1,1
     69a:	4501                	li	a0,0
     69c:	1a2010ef          	jal	ra,183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:102
    uart_init(UART_3, 460800, UART3_TX_B10, UART3_RX_B11);  //串口3初始化，波特率460800
     6a0:	02100693          	li	a3,33
     6a4:	02000613          	li	a2,32
     6a8:	000717b7          	lui	a5,0x71
     6ac:	80078593          	addi	a1,a5,-2048 # 70800 <_data_lma+0x6d2dc>
     6b0:	4509                	li	a0,2
     6b2:	6d2010ef          	jal	ra,1d84 <uart_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:103
    timer_pit_interrupt_ms(TIMER_4, 5);                     //定时器4初始化
     6b6:	4595                	li	a1,5
     6b8:	450d                	li	a0,3
     6ba:	46e010ef          	jal	ra,1b28 <timer_pit_interrupt_ms>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:105

    EnableGlobalIRQ(0);
     6be:	4501                	li	a0,0
     6c0:	440010ef          	jal	ra,1b00 <EnableGlobalIRQ>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../USER/main.c:106 (discriminator 1)
    while(1)
     6c4:	a001                	j	6c4 <main+0x42>

000006c6 <handle_reset>:
handle_reset():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:147
	.weak	handle_reset
	.align	1
handle_reset:
.option push 
.option	norelax 
	la gp, __global_pointer$
     6c6:	20000197          	auipc	gp,0x20000
     6ca:	1aa18193          	addi	gp,gp,426 # 20000870 <__global_pointer$>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:150
.option	pop 
1:
	la sp, _eusrstack 
     6ce:	20005117          	auipc	sp,0x20005
     6d2:	93210113          	addi	sp,sp,-1742 # 20005000 <_eusrstack>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:153
2:
	/* Load data section from flash to RAM */
	la a0, _data_lma
     6d6:	00003517          	auipc	a0,0x3
     6da:	e4e50513          	addi	a0,a0,-434 # 3524 <_data_lma>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:154
	la a1, _data_vma
     6de:	20000597          	auipc	a1,0x20000
     6e2:	92258593          	addi	a1,a1,-1758 # 20000000 <_data_vma>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:155
	la a2, _edata
     6e6:	81018613          	addi	a2,gp,-2032 # 20000080 <_edata>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:156
	bgeu a1, a2, 2f
     6ea:	00c5fa63          	bgeu	a1,a2,6fe <handle_reset+0x38>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:158
1:
	lw t0, (a0)
     6ee:	00052283          	lw	t0,0(a0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:159
	sw t0, (a1)
     6f2:	0055a023          	sw	t0,0(a1)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:160
	addi a0, a0, 4
     6f6:	0511                	addi	a0,a0,4
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:161
	addi a1, a1, 4
     6f8:	0591                	addi	a1,a1,4
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:162
	bltu a1, a2, 1b
     6fa:	fec5eae3          	bltu	a1,a2,6ee <handle_reset+0x28>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:165
2:
	/* clear bss section */
	la a0, _sbss
     6fe:	81018513          	addi	a0,gp,-2032 # 20000080 <_edata>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:166
	la a1, _ebss
     702:	85418593          	addi	a1,gp,-1964 # 200000c4 <_ebss>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:167
	bgeu a0, a1, 2f
     706:	00b57763          	bgeu	a0,a1,714 <handle_reset+0x4e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:169
1:
	sw zero, (a0)
     70a:	00052023          	sw	zero,0(a0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:170
	addi a0, a0, 4
     70e:	0511                	addi	a0,a0,4
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:171
	bltu a0, a1, 1b
     710:	feb56de3          	bltu	a0,a1,70a <handle_reset+0x44>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:174
2:
	/* enable all interrupt */
  li t0, 0x88
     714:	08800293          	li	t0,136
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:175
  csrs mstatus, t0
     718:	3002a073          	csrs	mstatus,t0
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:176
	la t0, _vector_base
     71c:	00000297          	auipc	t0,0x0
     720:	91c28293          	addi	t0,t0,-1764 # 38 <_einit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:177
  ori t0, t0, 1
     724:	0012e293          	ori	t0,t0,1
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:178
	csrw mtvec, t0
     728:	30529073          	csrw	mtvec,t0
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:180

  jal  SystemInit
     72c:	1f7010ef          	jal	ra,2122 <SystemInit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:181
	la t0, main
     730:	00000297          	auipc	t0,0x0
     734:	f5228293          	addi	t0,t0,-174 # 682 <main>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:182
	csrw mepc, t0
     738:	34129073          	csrw	mepc,t0
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Startup/startup_ch32v10x.S:183
	mret
     73c:	30200073          	mret

00000740 <DMA_GetFlagStatus>:
DMA_GetFlagStatus():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:290
*                      DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
*                      DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
* Return         : The new state of DMAy_FLAG (SET or RESET). 
*********************************************************************************/
FlagStatus DMA_GetFlagStatus(uint32_t DMAy_FLAG)
{
     740:	7179                	addi	sp,sp,-48
     742:	d622                	sw	s0,44(sp)
     744:	1800                	addi	s0,sp,48
     746:	fca42e23          	sw	a0,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:291
  FlagStatus bitstatus = RESET;
     74a:	fe042623          	sw	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:292
  uint32_t tmpreg = 0;
     74e:	fe042423          	sw	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:294
  
  if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
     752:	fdc42703          	lw	a4,-36(s0)
     756:	100007b7          	lui	a5,0x10000
     75a:	8ff9                	and	a5,a5,a4
     75c:	cb89                	beqz	a5,76e <DMA_GetFlagStatus+0x2e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:296
  {
    tmpreg = DMA2->INTFR ;
     75e:	400207b7          	lui	a5,0x40020
     762:	40078793          	addi	a5,a5,1024 # 40020400 <_eusrstack+0x2001b400>
     766:	439c                	lw	a5,0(a5)
     768:	fef42423          	sw	a5,-24(s0)
     76c:	a031                	j	778 <DMA_GetFlagStatus+0x38>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:300
  }
  else
  {
    tmpreg = DMA1->INTFR ;
     76e:	400207b7          	lui	a5,0x40020
     772:	439c                	lw	a5,0(a5)
     774:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:303
  }

  if ((tmpreg & DMAy_FLAG) != (uint32_t)RESET)
     778:	fe842703          	lw	a4,-24(s0)
     77c:	fdc42783          	lw	a5,-36(s0)
     780:	8ff9                	and	a5,a5,a4
     782:	c789                	beqz	a5,78c <DMA_GetFlagStatus+0x4c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:305
  {
    bitstatus = SET;
     784:	4785                	li	a5,1
     786:	fef42623          	sw	a5,-20(s0)
     78a:	a019                	j	790 <DMA_GetFlagStatus+0x50>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:309
  }
  else
  {
    bitstatus = RESET;
     78c:	fe042623          	sw	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:312
  }
  
  return  bitstatus;
     790:	fec42783          	lw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:313
}
     794:	853e                	mv	a0,a5
     796:	5432                	lw	s0,44(sp)
     798:	6145                	addi	sp,sp,48
     79a:	8082                	ret

0000079c <DMA_ClearFlag>:
DMA_ClearFlag():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:371
*                      DMA2_FLAG_HT5: DMA2 Channel5 half transfer flag.
*                      DMA2_FLAG_TE5: DMA2 Channel5 transfer error flag.
* Return         : None 
*********************************************************************************/
void DMA_ClearFlag(uint32_t DMAy_FLAG)
{
     79c:	1101                	addi	sp,sp,-32
     79e:	ce22                	sw	s0,28(sp)
     7a0:	1000                	addi	s0,sp,32
     7a2:	fea42623          	sw	a0,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:372
  if ((DMAy_FLAG & FLAG_Mask) != (uint32_t)RESET)
     7a6:	fec42703          	lw	a4,-20(s0)
     7aa:	100007b7          	lui	a5,0x10000
     7ae:	8ff9                	and	a5,a5,a4
     7b0:	cb89                	beqz	a5,7c2 <DMA_ClearFlag+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:374
  {
    DMA2->INTFCR = DMAy_FLAG;
     7b2:	400207b7          	lui	a5,0x40020
     7b6:	40078793          	addi	a5,a5,1024 # 40020400 <_eusrstack+0x2001b400>
     7ba:	fec42703          	lw	a4,-20(s0)
     7be:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:380
  }
  else
  {
    DMA1->INTFCR = DMAy_FLAG;
  }
}
     7c0:	a031                	j	7cc <DMA_ClearFlag+0x30>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:378
    DMA1->INTFCR = DMAy_FLAG;
     7c2:	400207b7          	lui	a5,0x40020
     7c6:	fec42703          	lw	a4,-20(s0)
     7ca:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_dma.c:380
}
     7cc:	0001                	nop
     7ce:	4472                	lw	s0,28(sp)
     7d0:	6105                	addi	sp,sp,32
     7d2:	8082                	ret

000007d4 <EXTI_GetITStatus>:
EXTI_GetITStatus():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:131
* Description    : Checks whether the specified EXTI line is asserted or not.
* Input          : EXTI_Line: specifies the EXTI lines to be enabled or disabled.
* Return         : The new state of EXTI_Line (SET or RESET).
*********************************************************************************/	
ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
{
     7d4:	7179                	addi	sp,sp,-48
     7d6:	d622                	sw	s0,44(sp)
     7d8:	1800                	addi	s0,sp,48
     7da:	fca42e23          	sw	a0,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:132
  ITStatus bitstatus = RESET;
     7de:	fe042623          	sw	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:133
  uint32_t enablestatus = 0;
     7e2:	fe042423          	sw	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:135
  
  enablestatus =  EXTI->INTENR & EXTI_Line;
     7e6:	400107b7          	lui	a5,0x40010
     7ea:	40078793          	addi	a5,a5,1024 # 40010400 <_eusrstack+0x2000b400>
     7ee:	439c                	lw	a5,0(a5)
     7f0:	fdc42703          	lw	a4,-36(s0)
     7f4:	8ff9                	and	a5,a5,a4
     7f6:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:136
  if (((EXTI->INTFR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
     7fa:	400107b7          	lui	a5,0x40010
     7fe:	40078793          	addi	a5,a5,1024 # 40010400 <_eusrstack+0x2000b400>
     802:	4bd8                	lw	a4,20(a5)
     804:	fdc42783          	lw	a5,-36(s0)
     808:	8ff9                	and	a5,a5,a4
     80a:	cb81                	beqz	a5,81a <__stack_size+0x1a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:136 (discriminator 1)
     80c:	fe842783          	lw	a5,-24(s0)
     810:	c789                	beqz	a5,81a <__stack_size+0x1a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:138
  {
    bitstatus = SET;
     812:	4785                	li	a5,1
     814:	fef42623          	sw	a5,-20(s0)
     818:	a019                	j	81e <__stack_size+0x1e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:142
  }
  else
  {
    bitstatus = RESET;
     81a:	fe042623          	sw	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:144
  }
  return bitstatus;
     81e:	fec42783          	lw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:145
}
     822:	853e                	mv	a0,a5
     824:	5432                	lw	s0,44(sp)
     826:	6145                	addi	sp,sp,48
     828:	8082                	ret

0000082a <EXTI_ClearITPendingBit>:
EXTI_ClearITPendingBit():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:154
* Description    : Clears the EXTI's line pending bits.
* Input          : EXTI_Line: specifies the EXTI lines to be enabled or disabled.
* Return         : None
*********************************************************************************/
void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
{  
     82a:	1101                	addi	sp,sp,-32
     82c:	ce22                	sw	s0,28(sp)
     82e:	1000                	addi	s0,sp,32
     830:	fea42623          	sw	a0,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:155
  EXTI->INTFR = EXTI_Line;
     834:	400107b7          	lui	a5,0x40010
     838:	40078793          	addi	a5,a5,1024 # 40010400 <_eusrstack+0x2000b400>
     83c:	fec42703          	lw	a4,-20(s0)
     840:	cbd8                	sw	a4,20(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_exti.c:156
}
     842:	0001                	nop
     844:	4472                	lw	s0,28(sp)
     846:	6105                	addi	sp,sp,32
     848:	8082                	ret

0000084a <GPIO_Init>:
GPIO_Init():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:88
* Input          : GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
*      contains the configuration information for the specified GPIO peripheral.
* Return         : None
*******************************************************************************/
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
     84a:	7139                	addi	sp,sp,-64
     84c:	de22                	sw	s0,60(sp)
     84e:	0080                	addi	s0,sp,64
     850:	fca42623          	sw	a0,-52(s0)
     854:	fcb42423          	sw	a1,-56(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:89
  uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
     858:	fe042623          	sw	zero,-20(s0)
     85c:	fe042023          	sw	zero,-32(s0)
     860:	fe042423          	sw	zero,-24(s0)
     864:	fc042e23          	sw	zero,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:90
  uint32_t tmpreg = 0x00, pinmask = 0x00;
     868:	fe042223          	sw	zero,-28(s0)
     86c:	fc042c23          	sw	zero,-40(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:92

  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
     870:	fc842783          	lw	a5,-56(s0)
     874:	479c                	lw	a5,8(a5)
     876:	8bbd                	andi	a5,a5,15
     878:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:94
	
  if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
     87c:	fc842783          	lw	a5,-56(s0)
     880:	479c                	lw	a5,8(a5)
     882:	8bc1                	andi	a5,a5,16
     884:	cb89                	beqz	a5,896 <GPIO_Init+0x4c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:96
  { 
    currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
     886:	fc842783          	lw	a5,-56(s0)
     88a:	43dc                	lw	a5,4(a5)
     88c:	fec42703          	lw	a4,-20(s0)
     890:	8fd9                	or	a5,a5,a4
     892:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:99
  }

  if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
     896:	fc842783          	lw	a5,-56(s0)
     89a:	0007d783          	lhu	a5,0(a5)
     89e:	0ff7f793          	andi	a5,a5,255
     8a2:	cff1                	beqz	a5,97e <GPIO_Init+0x134>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:101
  {
    tmpreg = GPIOx->CFGLR;
     8a4:	fcc42783          	lw	a5,-52(s0)
     8a8:	439c                	lw	a5,0(a5)
     8aa:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:103
		
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
     8ae:	fe042423          	sw	zero,-24(s0)
     8b2:	a865                	j	96a <GPIO_Init+0x120>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:105
    {
      pos = ((uint32_t)0x01) << pinpos;
     8b4:	fe842783          	lw	a5,-24(s0)
     8b8:	4705                	li	a4,1
     8ba:	00f717b3          	sll	a5,a4,a5
     8be:	fcf42e23          	sw	a5,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:106
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
     8c2:	fc842783          	lw	a5,-56(s0)
     8c6:	0007d783          	lhu	a5,0(a5)
     8ca:	873e                	mv	a4,a5
     8cc:	fdc42783          	lw	a5,-36(s0)
     8d0:	8ff9                	and	a5,a5,a4
     8d2:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:108
			
      if (currentpin == pos)
     8d6:	fe042703          	lw	a4,-32(s0)
     8da:	fdc42783          	lw	a5,-36(s0)
     8de:	08f71163          	bne	a4,a5,960 <GPIO_Init+0x116>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:110
      {
        pos = pinpos << 2;
     8e2:	fe842783          	lw	a5,-24(s0)
     8e6:	078a                	slli	a5,a5,0x2
     8e8:	fcf42e23          	sw	a5,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:111
        pinmask = ((uint32_t)0x0F) << pos;
     8ec:	fdc42783          	lw	a5,-36(s0)
     8f0:	473d                	li	a4,15
     8f2:	00f717b3          	sll	a5,a4,a5
     8f6:	fcf42c23          	sw	a5,-40(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:112
        tmpreg &= ~pinmask;
     8fa:	fd842783          	lw	a5,-40(s0)
     8fe:	fff7c793          	not	a5,a5
     902:	fe442703          	lw	a4,-28(s0)
     906:	8ff9                	and	a5,a5,a4
     908:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:113
        tmpreg |= (currentmode << pos);
     90c:	fdc42783          	lw	a5,-36(s0)
     910:	fec42703          	lw	a4,-20(s0)
     914:	00f717b3          	sll	a5,a4,a5
     918:	fe442703          	lw	a4,-28(s0)
     91c:	8fd9                	or	a5,a5,a4
     91e:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:115

        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
     922:	fc842783          	lw	a5,-56(s0)
     926:	4798                	lw	a4,8(a5)
     928:	02800793          	li	a5,40
     92c:	00f71b63          	bne	a4,a5,942 <GPIO_Init+0xf8>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:117
        {
          GPIOx->BCR = (((uint32_t)0x01) << pinpos);
     930:	fe842783          	lw	a5,-24(s0)
     934:	4705                	li	a4,1
     936:	00f71733          	sll	a4,a4,a5
     93a:	fcc42783          	lw	a5,-52(s0)
     93e:	cbd8                	sw	a4,20(a5)
     940:	a005                	j	960 <GPIO_Init+0x116>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:121
        }
        else
        {
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
     942:	fc842783          	lw	a5,-56(s0)
     946:	4798                	lw	a4,8(a5)
     948:	04800793          	li	a5,72
     94c:	00f71a63          	bne	a4,a5,960 <GPIO_Init+0x116>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:123
          {
            GPIOx->BSHR = (((uint32_t)0x01) << pinpos);
     950:	fe842783          	lw	a5,-24(s0)
     954:	4705                	li	a4,1
     956:	00f71733          	sll	a4,a4,a5
     95a:	fcc42783          	lw	a5,-52(s0)
     95e:	cb98                	sw	a4,16(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:103 (discriminator 2)
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
     960:	fe842783          	lw	a5,-24(s0)
     964:	0785                	addi	a5,a5,1
     966:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:103 (discriminator 1)
     96a:	fe842703          	lw	a4,-24(s0)
     96e:	479d                	li	a5,7
     970:	f4e7f2e3          	bgeu	a5,a4,8b4 <GPIO_Init+0x6a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:128
          }
        }
      }
    }
    GPIOx->CFGLR = tmpreg;
     974:	fcc42783          	lw	a5,-52(s0)
     978:	fe442703          	lw	a4,-28(s0)
     97c:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:131
  }

  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
     97e:	fc842783          	lw	a5,-56(s0)
     982:	0007d703          	lhu	a4,0(a5)
     986:	0ff00793          	li	a5,255
     98a:	0ee7f163          	bgeu	a5,a4,a6c <GPIO_Init+0x222>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:133
  {
    tmpreg = GPIOx->CFGHR;
     98e:	fcc42783          	lw	a5,-52(s0)
     992:	43dc                	lw	a5,4(a5)
     994:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:135
		
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
     998:	fe042423          	sw	zero,-24(s0)
     99c:	a875                	j	a58 <GPIO_Init+0x20e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:137
    {
      pos = (((uint32_t)0x01) << (pinpos + 0x08));
     99e:	fe842783          	lw	a5,-24(s0)
     9a2:	07a1                	addi	a5,a5,8
     9a4:	4705                	li	a4,1
     9a6:	00f717b3          	sll	a5,a4,a5
     9aa:	fcf42e23          	sw	a5,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:138
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
     9ae:	fc842783          	lw	a5,-56(s0)
     9b2:	0007d783          	lhu	a5,0(a5)
     9b6:	873e                	mv	a4,a5
     9b8:	fdc42783          	lw	a5,-36(s0)
     9bc:	8ff9                	and	a5,a5,a4
     9be:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:140
			
      if (currentpin == pos)
     9c2:	fe042703          	lw	a4,-32(s0)
     9c6:	fdc42783          	lw	a5,-36(s0)
     9ca:	08f71263          	bne	a4,a5,a4e <GPIO_Init+0x204>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:142
      {
        pos = pinpos << 2;
     9ce:	fe842783          	lw	a5,-24(s0)
     9d2:	078a                	slli	a5,a5,0x2
     9d4:	fcf42e23          	sw	a5,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:143
        pinmask = ((uint32_t)0x0F) << pos;
     9d8:	fdc42783          	lw	a5,-36(s0)
     9dc:	473d                	li	a4,15
     9de:	00f717b3          	sll	a5,a4,a5
     9e2:	fcf42c23          	sw	a5,-40(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:144
        tmpreg &= ~pinmask;
     9e6:	fd842783          	lw	a5,-40(s0)
     9ea:	fff7c793          	not	a5,a5
     9ee:	fe442703          	lw	a4,-28(s0)
     9f2:	8ff9                	and	a5,a5,a4
     9f4:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:145
        tmpreg |= (currentmode << pos);
     9f8:	fdc42783          	lw	a5,-36(s0)
     9fc:	fec42703          	lw	a4,-20(s0)
     a00:	00f717b3          	sll	a5,a4,a5
     a04:	fe442703          	lw	a4,-28(s0)
     a08:	8fd9                	or	a5,a5,a4
     a0a:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:147

        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
     a0e:	fc842783          	lw	a5,-56(s0)
     a12:	4798                	lw	a4,8(a5)
     a14:	02800793          	li	a5,40
     a18:	00f71b63          	bne	a4,a5,a2e <GPIO_Init+0x1e4>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:149
        {
          GPIOx->BCR = (((uint32_t)0x01) << (pinpos + 0x08));
     a1c:	fe842783          	lw	a5,-24(s0)
     a20:	07a1                	addi	a5,a5,8
     a22:	4705                	li	a4,1
     a24:	00f71733          	sll	a4,a4,a5
     a28:	fcc42783          	lw	a5,-52(s0)
     a2c:	cbd8                	sw	a4,20(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:152
        }

        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
     a2e:	fc842783          	lw	a5,-56(s0)
     a32:	4798                	lw	a4,8(a5)
     a34:	04800793          	li	a5,72
     a38:	00f71b63          	bne	a4,a5,a4e <GPIO_Init+0x204>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:154
        {
          GPIOx->BSHR = (((uint32_t)0x01) << (pinpos + 0x08));
     a3c:	fe842783          	lw	a5,-24(s0)
     a40:	07a1                	addi	a5,a5,8
     a42:	4705                	li	a4,1
     a44:	00f71733          	sll	a4,a4,a5
     a48:	fcc42783          	lw	a5,-52(s0)
     a4c:	cb98                	sw	a4,16(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:135 (discriminator 2)
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
     a4e:	fe842783          	lw	a5,-24(s0)
     a52:	0785                	addi	a5,a5,1
     a54:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:135 (discriminator 1)
     a58:	fe842703          	lw	a4,-24(s0)
     a5c:	479d                	li	a5,7
     a5e:	f4e7f0e3          	bgeu	a5,a4,99e <GPIO_Init+0x154>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:158
        }
      }
    }
    GPIOx->CFGHR = tmpreg;
     a62:	fcc42783          	lw	a5,-52(s0)
     a66:	fe442703          	lw	a4,-28(s0)
     a6a:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:160
  }
}
     a6c:	0001                	nop
     a6e:	5472                	lw	s0,60(sp)
     a70:	6121                	addi	sp,sp,64
     a72:	8082                	ret

00000a74 <GPIO_WriteBit>:
GPIO_WriteBit():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:282
*                    Bit_SetL: to clear the port pin.
*                    Bit_SetH: to set the port pin.                  
* Return         : None
*******************************************************************************/
void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
{
     a74:	1101                	addi	sp,sp,-32
     a76:	ce22                	sw	s0,28(sp)
     a78:	1000                	addi	s0,sp,32
     a7a:	fea42623          	sw	a0,-20(s0)
     a7e:	87ae                	mv	a5,a1
     a80:	fec42223          	sw	a2,-28(s0)
     a84:	fef41523          	sh	a5,-22(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:283
  if (BitVal != Bit_RESET)
     a88:	fe442783          	lw	a5,-28(s0)
     a8c:	c799                	beqz	a5,a9a <GPIO_WriteBit+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:285
  {
    GPIOx->BSHR = GPIO_Pin;
     a8e:	fea45703          	lhu	a4,-22(s0)
     a92:	fec42783          	lw	a5,-20(s0)
     a96:	cb98                	sw	a4,16(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:291
  }
  else
  {
    GPIOx->BCR = GPIO_Pin;
  }
}
     a98:	a031                	j	aa4 <GPIO_WriteBit+0x30>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:289
    GPIOx->BCR = GPIO_Pin;
     a9a:	fea45703          	lhu	a4,-22(s0)
     a9e:	fec42783          	lw	a5,-20(s0)
     aa2:	cbd8                	sw	a4,20(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:291
}
     aa4:	0001                	nop
     aa6:	4472                	lw	s0,28(sp)
     aa8:	6105                	addi	sp,sp,32
     aaa:	8082                	ret

00000aac <GPIO_PinRemapConfig>:
GPIO_PinRemapConfig():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:402
*      only for High density Value line devices)     
*                  NewState: ENABLE or DISABLE.             
* Return         : None
*******************************************************************************/
void GPIO_PinRemapConfig(uint32_t GPIO_Remap, FunctionalState NewState)
{
     aac:	7179                	addi	sp,sp,-48
     aae:	d622                	sw	s0,44(sp)
     ab0:	1800                	addi	s0,sp,48
     ab2:	fca42e23          	sw	a0,-36(s0)
     ab6:	fcb42c23          	sw	a1,-40(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:403
  uint32_t tmp = 0x00, tmp1 = 0x00, tmpreg = 0x00, tmpmask = 0x00;
     aba:	fe042423          	sw	zero,-24(s0)
     abe:	fe042223          	sw	zero,-28(s0)
     ac2:	fe042623          	sw	zero,-20(s0)
     ac6:	fe042023          	sw	zero,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:405

  if((GPIO_Remap & 0x80000000) == 0x80000000)
     aca:	fdc42783          	lw	a5,-36(s0)
     ace:	0007d863          	bgez	a5,ade <GPIO_PinRemapConfig+0x32>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:407
  {
    tmpreg = AFIO->PCFR2;
     ad2:	400107b7          	lui	a5,0x40010
     ad6:	4fdc                	lw	a5,28(a5)
     ad8:	fef42623          	sw	a5,-20(s0)
     adc:	a031                	j	ae8 <GPIO_PinRemapConfig+0x3c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:411
  }
  else
  {
    tmpreg = AFIO->PCFR1;
     ade:	400107b7          	lui	a5,0x40010
     ae2:	43dc                	lw	a5,4(a5)
     ae4:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:414
  }

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
     ae8:	fdc42783          	lw	a5,-36(s0)
     aec:	83c1                	srli	a5,a5,0x10
     aee:	8bbd                	andi	a5,a5,15
     af0:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:415
  tmp = GPIO_Remap & LSB_MASK;
     af4:	fdc42703          	lw	a4,-36(s0)
     af8:	67c1                	lui	a5,0x10
     afa:	17fd                	addi	a5,a5,-1
     afc:	8ff9                	and	a5,a5,a4
     afe:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:417

  if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
     b02:	fdc42703          	lw	a4,-36(s0)
     b06:	003007b7          	lui	a5,0x300
     b0a:	8f7d                	and	a4,a4,a5
     b0c:	003007b7          	lui	a5,0x300
     b10:	02f71563          	bne	a4,a5,b3a <GPIO_PinRemapConfig+0x8e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:419
  {
    tmpreg &= DBGAFR_SWJCFG_MASK;
     b14:	fec42703          	lw	a4,-20(s0)
     b18:	f10007b7          	lui	a5,0xf1000
     b1c:	17fd                	addi	a5,a5,-1
     b1e:	8ff9                	and	a5,a5,a4
     b20:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:420
    AFIO->PCFR1 &= DBGAFR_SWJCFG_MASK;
     b24:	400107b7          	lui	a5,0x40010
     b28:	43d4                	lw	a3,4(a5)
     b2a:	400107b7          	lui	a5,0x40010
     b2e:	f1000737          	lui	a4,0xf1000
     b32:	177d                	addi	a4,a4,-1
     b34:	8f75                	and	a4,a4,a3
     b36:	c3d8                	sw	a4,4(a5)
     b38:	a0ad                	j	ba2 <GPIO_PinRemapConfig+0xf6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:422
  }
  else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
     b3a:	fdc42703          	lw	a4,-36(s0)
     b3e:	001007b7          	lui	a5,0x100
     b42:	8ff9                	and	a5,a5,a4
     b44:	cb8d                	beqz	a5,b76 <GPIO_PinRemapConfig+0xca>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:424
  {
    tmp1 = ((uint32_t)0x03) << tmpmask;
     b46:	fe042783          	lw	a5,-32(s0)
     b4a:	470d                	li	a4,3
     b4c:	00f717b3          	sll	a5,a4,a5
     b50:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:425
    tmpreg &= ~tmp1;
     b54:	fe442783          	lw	a5,-28(s0)
     b58:	fff7c793          	not	a5,a5
     b5c:	fec42703          	lw	a4,-20(s0)
     b60:	8ff9                	and	a5,a5,a4
     b62:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:426
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
     b66:	fec42703          	lw	a4,-20(s0)
     b6a:	0f0007b7          	lui	a5,0xf000
     b6e:	8fd9                	or	a5,a5,a4
     b70:	fef42623          	sw	a5,-20(s0)
     b74:	a03d                	j	ba2 <GPIO_PinRemapConfig+0xf6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:430
  }
  else
  {
    tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
     b76:	fdc42783          	lw	a5,-36(s0)
     b7a:	83d5                	srli	a5,a5,0x15
     b7c:	0792                	slli	a5,a5,0x4
     b7e:	fe842703          	lw	a4,-24(s0)
     b82:	00f717b3          	sll	a5,a4,a5
     b86:	fff7c793          	not	a5,a5
     b8a:	fec42703          	lw	a4,-20(s0)
     b8e:	8ff9                	and	a5,a5,a4
     b90:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:431
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
     b94:	fec42703          	lw	a4,-20(s0)
     b98:	0f0007b7          	lui	a5,0xf000
     b9c:	8fd9                	or	a5,a5,a4
     b9e:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:434
  }

  if (NewState != DISABLE)
     ba2:	fd842783          	lw	a5,-40(s0)
     ba6:	cf91                	beqz	a5,bc2 <GPIO_PinRemapConfig+0x116>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:436
  {
    tmpreg |= (tmp << ((GPIO_Remap >> 0x15)*0x10));
     ba8:	fdc42783          	lw	a5,-36(s0)
     bac:	83d5                	srli	a5,a5,0x15
     bae:	0792                	slli	a5,a5,0x4
     bb0:	fe842703          	lw	a4,-24(s0)
     bb4:	00f717b3          	sll	a5,a4,a5
     bb8:	fec42703          	lw	a4,-20(s0)
     bbc:	8fd9                	or	a5,a5,a4
     bbe:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:439
  }

  if((GPIO_Remap & 0x80000000) == 0x80000000)
     bc2:	fdc42783          	lw	a5,-36(s0)
     bc6:	0007d863          	bgez	a5,bd6 <GPIO_PinRemapConfig+0x12a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:441
  {
    AFIO->PCFR2 = tmpreg;
     bca:	400107b7          	lui	a5,0x40010
     bce:	fec42703          	lw	a4,-20(s0)
     bd2:	cfd8                	sw	a4,28(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:447
  }
  else
  {
    AFIO->PCFR1 = tmpreg;
  }  
}
     bd4:	a031                	j	be0 <GPIO_PinRemapConfig+0x134>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:445
    AFIO->PCFR1 = tmpreg;
     bd6:	400107b7          	lui	a5,0x40010
     bda:	fec42703          	lw	a4,-20(s0)
     bde:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_gpio.c:447
}
     be0:	0001                	nop
     be2:	5432                	lw	s0,44(sp)
     be4:	6145                	addi	sp,sp,48
     be6:	8082                	ret

00000be8 <NVIC_EnableIRQ>:
NVIC_EnableIRQ():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:126
* Function Name  : NVIC_EnableIRQ
* Description    : Enable Interrupt
* Input          : IRQn: Interrupt Numbers
* Return         : None
*******************************************************************************/
RV_STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn){
     be8:	1101                	addi	sp,sp,-32
     bea:	ce22                	sw	s0,28(sp)
     bec:	1000                	addi	s0,sp,32
     bee:	fea42623          	sw	a0,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:127
  NVIC->IENR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
     bf2:	fec42783          	lw	a5,-20(s0)
     bf6:	8bfd                	andi	a5,a5,31
     bf8:	4705                	li	a4,1
     bfa:	00f716b3          	sll	a3,a4,a5
     bfe:	e000e737          	lui	a4,0xe000e
     c02:	fec42783          	lw	a5,-20(s0)
     c06:	8395                	srli	a5,a5,0x5
     c08:	04078793          	addi	a5,a5,64 # 40010040 <_eusrstack+0x2000b040>
     c0c:	078a                	slli	a5,a5,0x2
     c0e:	97ba                	add	a5,a5,a4
     c10:	c394                	sw	a3,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:128
}
     c12:	0001                	nop
     c14:	4472                	lw	s0,28(sp)
     c16:	6105                	addi	sp,sp,32
     c18:	8082                	ret

00000c1a <NVIC_DisableIRQ>:
NVIC_DisableIRQ():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:137
* Description    : Disable Interrupt
* Input          : IRQn: Interrupt Numbers
* Return         : None
*******************************************************************************/
RV_STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
     c1a:	1101                	addi	sp,sp,-32
     c1c:	ce22                	sw	s0,28(sp)
     c1e:	1000                	addi	s0,sp,32
     c20:	fea42623          	sw	a0,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:138
  NVIC->IRER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));
     c24:	fec42783          	lw	a5,-20(s0)
     c28:	8bfd                	andi	a5,a5,31
     c2a:	4705                	li	a4,1
     c2c:	00f716b3          	sll	a3,a4,a5
     c30:	e000e737          	lui	a4,0xe000e
     c34:	fec42783          	lw	a5,-20(s0)
     c38:	8395                	srli	a5,a5,0x5
     c3a:	06078793          	addi	a5,a5,96
     c3e:	078a                	slli	a5,a5,0x2
     c40:	97ba                	add	a5,a5,a4
     c42:	c394                	sw	a3,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:139
}
     c44:	0001                	nop
     c46:	4472                	lw	s0,28(sp)
     c48:	6105                	addi	sp,sp,32
     c4a:	8082                	ret

00000c4c <NVIC_SetPriority>:
NVIC_SetPriority():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:208
*                  priority: bit7:pre-emption priority
*                            bit6-bit4: subpriority
* Return         : None
*******************************************************************************/
RV_STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint8_t priority)
{
     c4c:	1101                	addi	sp,sp,-32
     c4e:	ce22                	sw	s0,28(sp)
     c50:	1000                	addi	s0,sp,32
     c52:	fea42623          	sw	a0,-20(s0)
     c56:	87ae                	mv	a5,a1
     c58:	fef405a3          	sb	a5,-21(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:209
  NVIC->IPRIOR[(uint32_t)(IRQn)] = priority;
     c5c:	e000e737          	lui	a4,0xe000e
     c60:	fec42783          	lw	a5,-20(s0)
     c64:	97ba                	add	a5,a5,a4
     c66:	feb44703          	lbu	a4,-21(s0)
     c6a:	40e78023          	sb	a4,1024(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Core/core_riscv.h:210
}
     c6e:	0001                	nop
     c70:	4472                	lw	s0,28(sp)
     c72:	6105                	addi	sp,sp,32
     c74:	8082                	ret

00000c76 <NVIC_Init>:
NVIC_Init():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:44
* Input          : NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains the
*                                   configuration information for the specified NVIC peripheral.                 
* Return         : None
*******************************************************************************************/
void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
{
     c76:	1101                	addi	sp,sp,-32
     c78:	ce06                	sw	ra,28(sp)
     c7a:	cc22                	sw	s0,24(sp)
     c7c:	1000                	addi	s0,sp,32
     c7e:	fea42623          	sw	a0,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:47
	//uint8_t tmppre = 0;

	if((PFIC->CFGR&(1<<1)) != 0)                    //中断嵌套标志位：1为关闭
     c82:	e000e7b7          	lui	a5,0xe000e
     c86:	47bc                	lw	a5,72(a5)
     c88:	8b89                	andi	a5,a5,2
     c8a:	c38d                	beqz	a5,cac <NVIC_Init+0x36>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:49
	{
		NVIC_SetPriority( NVIC_InitStruct->NVIC_IRQChannel, NVIC_InitStruct->NVIC_IRQChannelSubPriority<<4);
     c8c:	fec42783          	lw	a5,-20(s0)
     c90:	0007c783          	lbu	a5,0(a5) # e000e000 <_eusrstack+0xc0009000>
     c94:	873e                	mv	a4,a5
     c96:	fec42783          	lw	a5,-20(s0)
     c9a:	0027c783          	lbu	a5,2(a5)
     c9e:	0792                	slli	a5,a5,0x4
     ca0:	0ff7f793          	andi	a5,a5,255
     ca4:	85be                	mv	a1,a5
     ca6:	853a                	mv	a0,a4
     ca8:	3755                	jal	c4c <NVIC_SetPriority>
     caa:	a095                	j	d0e <NVIC_Init+0x98>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:51
	}
	else if((PFIC->CFGR&(1<<1)) == 0)               //中断嵌套标志位：0为打开
     cac:	e000e7b7          	lui	a5,0xe000e
     cb0:	47bc                	lw	a5,72(a5)
     cb2:	8b89                	andi	a5,a5,2
     cb4:	efa9                	bnez	a5,d0e <NVIC_Init+0x98>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:53
	{
        if(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority == 1)
     cb6:	fec42783          	lw	a5,-20(s0)
     cba:	0017c703          	lbu	a4,1(a5) # e000e001 <_eusrstack+0xc0009001>
     cbe:	4785                	li	a5,1
     cc0:	02f71863          	bne	a4,a5,cf0 <NVIC_Init+0x7a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:55
        {
            NVIC_SetPriority( NVIC_InitStruct->NVIC_IRQChannel, (1<<7)|(NVIC_InitStruct->NVIC_IRQChannelSubPriority<<4));
     cc4:	fec42783          	lw	a5,-20(s0)
     cc8:	0007c783          	lbu	a5,0(a5)
     ccc:	873e                	mv	a4,a5
     cce:	fec42783          	lw	a5,-20(s0)
     cd2:	0027c783          	lbu	a5,2(a5)
     cd6:	0792                	slli	a5,a5,0x4
     cd8:	07e2                	slli	a5,a5,0x18
     cda:	87e1                	srai	a5,a5,0x18
     cdc:	f807e793          	ori	a5,a5,-128
     ce0:	07e2                	slli	a5,a5,0x18
     ce2:	87e1                	srai	a5,a5,0x18
     ce4:	0ff7f793          	andi	a5,a5,255
     ce8:	85be                	mv	a1,a5
     cea:	853a                	mv	a0,a4
     cec:	3785                	jal	c4c <NVIC_SetPriority>
     cee:	a005                	j	d0e <NVIC_Init+0x98>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:59
        }
        else
        {
            NVIC_SetPriority( NVIC_InitStruct->NVIC_IRQChannel, (0<<7)|(NVIC_InitStruct->NVIC_IRQChannelSubPriority<<4));
     cf0:	fec42783          	lw	a5,-20(s0)
     cf4:	0007c783          	lbu	a5,0(a5)
     cf8:	873e                	mv	a4,a5
     cfa:	fec42783          	lw	a5,-20(s0)
     cfe:	0027c783          	lbu	a5,2(a5)
     d02:	0792                	slli	a5,a5,0x4
     d04:	0ff7f793          	andi	a5,a5,255
     d08:	85be                	mv	a1,a5
     d0a:	853a                	mv	a0,a4
     d0c:	3781                	jal	c4c <NVIC_SetPriority>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:93
//	else if(NVIC_Priority_Group == NVIC_PriorityGroup_4)
//	{
//		NVIC_SetPriority( NVIC_InitStruct->NVIC_IRQChannel, NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority<<4);
//	}

  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
     d0e:	fec42783          	lw	a5,-20(s0)
     d12:	43dc                	lw	a5,4(a5)
     d14:	cb81                	beqz	a5,d24 <NVIC_Init+0xae>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:95
  {
  	NVIC_EnableIRQ(NVIC_InitStruct->NVIC_IRQChannel);
     d16:	fec42783          	lw	a5,-20(s0)
     d1a:	0007c783          	lbu	a5,0(a5)
     d1e:	853e                	mv	a0,a5
     d20:	35e1                	jal	be8 <NVIC_EnableIRQ>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:101
  }
  else
  {
  	NVIC_DisableIRQ(NVIC_InitStruct->NVIC_IRQChannel);
  }
}
     d22:	a039                	j	d30 <NVIC_Init+0xba>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:99
  	NVIC_DisableIRQ(NVIC_InitStruct->NVIC_IRQChannel);
     d24:	fec42783          	lw	a5,-20(s0)
     d28:	0007c783          	lbu	a5,0(a5)
     d2c:	853e                	mv	a0,a5
     d2e:	35f5                	jal	c1a <NVIC_DisableIRQ>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_misc.c:101
}
     d30:	0001                	nop
     d32:	40f2                	lw	ra,28(sp)
     d34:	4462                	lw	s0,24(sp)
     d36:	6105                	addi	sp,sp,32
     d38:	8082                	ret

00000d3a <RCC_GetClocksFreq>:
RCC_GetClocksFreq():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:469
* Input          : The result of this function could be not correct when using
*      fractional value for HSE crystal.
* Return         : None
********************************************************************************/
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
     d3a:	7179                	addi	sp,sp,-48
     d3c:	d622                	sw	s0,44(sp)
     d3e:	1800                	addi	s0,sp,48
     d40:	fca42e23          	sw	a0,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:470
  uint32_t tmp = 0, pllmull = 0, pllsource = 0, presc = 0;
     d44:	fe042623          	sw	zero,-20(s0)
     d48:	fe042423          	sw	zero,-24(s0)
     d4c:	fe042223          	sw	zero,-28(s0)
     d50:	fe042023          	sw	zero,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:472
  
  tmp = RCC->CFGR0 & CFGR0_SWS_Mask;
     d54:	400217b7          	lui	a5,0x40021
     d58:	43dc                	lw	a5,4(a5)
     d5a:	8bb1                	andi	a5,a5,12
     d5c:	fef42623          	sw	a5,-20(s0)
     d60:	fec42703          	lw	a4,-20(s0)
     d64:	4791                	li	a5,4
     d66:	02f70263          	beq	a4,a5,d8a <RCC_GetClocksFreq+0x50>
     d6a:	fec42703          	lw	a4,-20(s0)
     d6e:	47a1                	li	a5,8
     d70:	02f70563          	beq	a4,a5,d9a <RCC_GetClocksFreq+0x60>
     d74:	fec42783          	lw	a5,-20(s0)
     d78:	e7c5                	bnez	a5,e20 <RCC_GetClocksFreq+0xe6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:477
  
  switch (tmp)
  {
    case 0x00: 
      RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
     d7a:	fdc42783          	lw	a5,-36(s0)
     d7e:	007a1737          	lui	a4,0x7a1
     d82:	20070713          	addi	a4,a4,512 # 7a1200 <_data_lma+0x79dcdc>
     d86:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:478
      break;
     d88:	a065                	j	e30 <RCC_GetClocksFreq+0xf6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:481
		
    case 0x04:
      RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
     d8a:	fdc42783          	lw	a5,-36(s0)
     d8e:	007a1737          	lui	a4,0x7a1
     d92:	20070713          	addi	a4,a4,512 # 7a1200 <_data_lma+0x79dcdc>
     d96:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:482
      break;
     d98:	a861                	j	e30 <RCC_GetClocksFreq+0xf6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:485
		
    case 0x08:
      pllmull = RCC->CFGR0 & CFGR0_PLLMull_Mask;
     d9a:	400217b7          	lui	a5,0x40021
     d9e:	43d8                	lw	a4,4(a5)
     da0:	003c07b7          	lui	a5,0x3c0
     da4:	8ff9                	and	a5,a5,a4
     da6:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:486
      pllsource = RCC->CFGR0 & CFGR0_PLLSRC_Mask;    
     daa:	400217b7          	lui	a5,0x40021
     dae:	43d8                	lw	a4,4(a5)
     db0:	67c1                	lui	a5,0x10
     db2:	8ff9                	and	a5,a5,a4
     db4:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:487
      pllmull = ( pllmull >> 18) + 2;
     db8:	fe842783          	lw	a5,-24(s0)
     dbc:	83c9                	srli	a5,a5,0x12
     dbe:	0789                	addi	a5,a5,2
     dc0:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:489
      
      if (pllsource == 0x00)
     dc4:	fe442783          	lw	a5,-28(s0)
     dc8:	ef89                	bnez	a5,de2 <RCC_GetClocksFreq+0xa8>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:491
      {
        RCC_Clocks->SYSCLK_Frequency = (HSI_VALUE >> 1) * pllmull;
     dca:	fe842703          	lw	a4,-24(s0)
     dce:	003d17b7          	lui	a5,0x3d1
     dd2:	90078793          	addi	a5,a5,-1792 # 3d0900 <_data_lma+0x3cd3dc>
     dd6:	02f70733          	mul	a4,a4,a5
     dda:	fdc42783          	lw	a5,-36(s0)
     dde:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:504
        else
        {
          RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
        }
      } 
      break;
     de0:	a881                	j	e30 <RCC_GetClocksFreq+0xf6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:495
        if ((RCC->CFGR0 & CFGR0_PLLXTPRE_Mask) != (uint32_t)RESET)
     de2:	400217b7          	lui	a5,0x40021
     de6:	43d8                	lw	a4,4(a5)
     de8:	000207b7          	lui	a5,0x20
     dec:	8ff9                	and	a5,a5,a4
     dee:	cf89                	beqz	a5,e08 <RCC_GetClocksFreq+0xce>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:497
          RCC_Clocks->SYSCLK_Frequency = (HSE_VALUE >> 1) * pllmull;
     df0:	fe842703          	lw	a4,-24(s0)
     df4:	003d17b7          	lui	a5,0x3d1
     df8:	90078793          	addi	a5,a5,-1792 # 3d0900 <_data_lma+0x3cd3dc>
     dfc:	02f70733          	mul	a4,a4,a5
     e00:	fdc42783          	lw	a5,-36(s0)
     e04:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:504
      break;
     e06:	a02d                	j	e30 <RCC_GetClocksFreq+0xf6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:501
          RCC_Clocks->SYSCLK_Frequency = HSE_VALUE * pllmull;
     e08:	fe842703          	lw	a4,-24(s0)
     e0c:	007a17b7          	lui	a5,0x7a1
     e10:	20078793          	addi	a5,a5,512 # 7a1200 <_data_lma+0x79dcdc>
     e14:	02f70733          	mul	a4,a4,a5
     e18:	fdc42783          	lw	a5,-36(s0)
     e1c:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:504
      break;
     e1e:	a809                	j	e30 <RCC_GetClocksFreq+0xf6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:507

    default:
      RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
     e20:	fdc42783          	lw	a5,-36(s0)
     e24:	007a1737          	lui	a4,0x7a1
     e28:	20070713          	addi	a4,a4,512 # 7a1200 <_data_lma+0x79dcdc>
     e2c:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:508
      break;
     e2e:	0001                	nop
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:511
  }

  tmp = RCC->CFGR0 & CFGR0_HPRE_Set_Mask;
     e30:	400217b7          	lui	a5,0x40021
     e34:	43dc                	lw	a5,4(a5)
     e36:	0f07f793          	andi	a5,a5,240
     e3a:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:512
  tmp = tmp >> 4;
     e3e:	fec42783          	lw	a5,-20(s0)
     e42:	8391                	srli	a5,a5,0x4
     e44:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:513
  presc = APBAHBPrescTable[tmp];
     e48:	200007b7          	lui	a5,0x20000
     e4c:	00078713          	mv	a4,a5
     e50:	fec42783          	lw	a5,-20(s0)
     e54:	97ba                	add	a5,a5,a4
     e56:	0007c783          	lbu	a5,0(a5) # 20000000 <_data_vma>
     e5a:	0ff7f793          	andi	a5,a5,255
     e5e:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:514
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
     e62:	fdc42783          	lw	a5,-36(s0)
     e66:	4398                	lw	a4,0(a5)
     e68:	fe042783          	lw	a5,-32(s0)
     e6c:	00f75733          	srl	a4,a4,a5
     e70:	fdc42783          	lw	a5,-36(s0)
     e74:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:515
  tmp = RCC->CFGR0 & CFGR0_PPRE1_Set_Mask;
     e76:	400217b7          	lui	a5,0x40021
     e7a:	43dc                	lw	a5,4(a5)
     e7c:	7007f793          	andi	a5,a5,1792
     e80:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:516
  tmp = tmp >> 8;
     e84:	fec42783          	lw	a5,-20(s0)
     e88:	83a1                	srli	a5,a5,0x8
     e8a:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:517
  presc = APBAHBPrescTable[tmp];
     e8e:	200007b7          	lui	a5,0x20000
     e92:	00078713          	mv	a4,a5
     e96:	fec42783          	lw	a5,-20(s0)
     e9a:	97ba                	add	a5,a5,a4
     e9c:	0007c783          	lbu	a5,0(a5) # 20000000 <_data_vma>
     ea0:	0ff7f793          	andi	a5,a5,255
     ea4:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:518
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
     ea8:	fdc42783          	lw	a5,-36(s0)
     eac:	43d8                	lw	a4,4(a5)
     eae:	fe042783          	lw	a5,-32(s0)
     eb2:	00f75733          	srl	a4,a4,a5
     eb6:	fdc42783          	lw	a5,-36(s0)
     eba:	c798                	sw	a4,8(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:519
  tmp = RCC->CFGR0 & CFGR0_PPRE2_Set_Mask;
     ebc:	400217b7          	lui	a5,0x40021
     ec0:	43d8                	lw	a4,4(a5)
     ec2:	6791                	lui	a5,0x4
     ec4:	80078793          	addi	a5,a5,-2048 # 3800 <_data_lma+0x2dc>
     ec8:	8ff9                	and	a5,a5,a4
     eca:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:520
  tmp = tmp >> 11;
     ece:	fec42783          	lw	a5,-20(s0)
     ed2:	83ad                	srli	a5,a5,0xb
     ed4:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:521
  presc = APBAHBPrescTable[tmp];
     ed8:	200007b7          	lui	a5,0x20000
     edc:	00078713          	mv	a4,a5
     ee0:	fec42783          	lw	a5,-20(s0)
     ee4:	97ba                	add	a5,a5,a4
     ee6:	0007c783          	lbu	a5,0(a5) # 20000000 <_data_vma>
     eea:	0ff7f793          	andi	a5,a5,255
     eee:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:522
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
     ef2:	fdc42783          	lw	a5,-36(s0)
     ef6:	43d8                	lw	a4,4(a5)
     ef8:	fe042783          	lw	a5,-32(s0)
     efc:	00f75733          	srl	a4,a4,a5
     f00:	fdc42783          	lw	a5,-36(s0)
     f04:	c7d8                	sw	a4,12(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:523
  tmp = RCC->CFGR0 & CFGR0_ADCPRE_Set_Mask;
     f06:	400217b7          	lui	a5,0x40021
     f0a:	43d8                	lw	a4,4(a5)
     f0c:	67b1                	lui	a5,0xc
     f0e:	8ff9                	and	a5,a5,a4
     f10:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:524
  tmp = tmp >> 14;
     f14:	fec42783          	lw	a5,-20(s0)
     f18:	83b9                	srli	a5,a5,0xe
     f1a:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:525
  presc = ADCPrescTable[tmp];
     f1e:	200007b7          	lui	a5,0x20000
     f22:	07078713          	addi	a4,a5,112 # 20000070 <ADCPrescTable>
     f26:	fec42783          	lw	a5,-20(s0)
     f2a:	97ba                	add	a5,a5,a4
     f2c:	0007c783          	lbu	a5,0(a5)
     f30:	0ff7f793          	andi	a5,a5,255
     f34:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:526
  RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
     f38:	fdc42783          	lw	a5,-36(s0)
     f3c:	47d8                	lw	a4,12(a5)
     f3e:	fe042783          	lw	a5,-32(s0)
     f42:	02f75733          	divu	a4,a4,a5
     f46:	fdc42783          	lw	a5,-36(s0)
     f4a:	cb98                	sw	a4,16(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:527
}
     f4c:	0001                	nop
     f4e:	5432                	lw	s0,44(sp)
     f50:	6145                	addi	sp,sp,48
     f52:	8082                	ret

00000f54 <RCC_APB2PeriphClockCmd>:
RCC_APB2PeriphClockCmd():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:570
*                    RCC_APB2Periph_USART1.
*                  NewState: ENABLE or DISABLE
* Return         : None
*******************************************************************************/	
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
     f54:	1101                	addi	sp,sp,-32
     f56:	ce22                	sw	s0,28(sp)
     f58:	1000                	addi	s0,sp,32
     f5a:	fea42623          	sw	a0,-20(s0)
     f5e:	feb42423          	sw	a1,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:571
  if (NewState != DISABLE)
     f62:	fe842783          	lw	a5,-24(s0)
     f66:	cb99                	beqz	a5,f7c <RCC_APB2PeriphClockCmd+0x28>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:573
  {
    RCC->APB2PCENR |= RCC_APB2Periph;
     f68:	400217b7          	lui	a5,0x40021
     f6c:	4f94                	lw	a3,24(a5)
     f6e:	400217b7          	lui	a5,0x40021
     f72:	fec42703          	lw	a4,-20(s0)
     f76:	8f55                	or	a4,a4,a3
     f78:	cf98                	sw	a4,24(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:579
  }
  else
  {
    RCC->APB2PCENR &= ~RCC_APB2Periph;
  }
}
     f7a:	a821                	j	f92 <RCC_APB2PeriphClockCmd+0x3e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:577
    RCC->APB2PCENR &= ~RCC_APB2Periph;
     f7c:	400217b7          	lui	a5,0x40021
     f80:	4f94                	lw	a3,24(a5)
     f82:	fec42783          	lw	a5,-20(s0)
     f86:	fff7c713          	not	a4,a5
     f8a:	400217b7          	lui	a5,0x40021
     f8e:	8f75                	and	a4,a4,a3
     f90:	cf98                	sw	a4,24(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:579
}
     f92:	0001                	nop
     f94:	4472                	lw	s0,28(sp)
     f96:	6105                	addi	sp,sp,32
     f98:	8082                	ret

00000f9a <RCC_APB1PeriphClockCmd>:
RCC_APB1PeriphClockCmd():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:603
*                    RCC_APB1Periph_DAC.                
*                  NewState: ENABLE or DISABLE.
* Return         : None
*******************************************************************************/	
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
     f9a:	1101                	addi	sp,sp,-32
     f9c:	ce22                	sw	s0,28(sp)
     f9e:	1000                	addi	s0,sp,32
     fa0:	fea42623          	sw	a0,-20(s0)
     fa4:	feb42423          	sw	a1,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:604
  if (NewState != DISABLE)
     fa8:	fe842783          	lw	a5,-24(s0)
     fac:	cb99                	beqz	a5,fc2 <RCC_APB1PeriphClockCmd+0x28>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:606
  {
    RCC->APB1PCENR |= RCC_APB1Periph;
     fae:	400217b7          	lui	a5,0x40021
     fb2:	4fd4                	lw	a3,28(a5)
     fb4:	400217b7          	lui	a5,0x40021
     fb8:	fec42703          	lw	a4,-20(s0)
     fbc:	8f55                	or	a4,a4,a3
     fbe:	cfd8                	sw	a4,28(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:612
  }
  else
  {
    RCC->APB1PCENR &= ~RCC_APB1Periph;
  }
}
     fc0:	a821                	j	fd8 <RCC_APB1PeriphClockCmd+0x3e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:610
    RCC->APB1PCENR &= ~RCC_APB1Periph;
     fc2:	400217b7          	lui	a5,0x40021
     fc6:	4fd4                	lw	a3,28(a5)
     fc8:	fec42783          	lw	a5,-20(s0)
     fcc:	fff7c713          	not	a4,a5
     fd0:	400217b7          	lui	a5,0x40021
     fd4:	8f75                	and	a4,a4,a3
     fd6:	cfd8                	sw	a4,28(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_rcc.c:612
}
     fd8:	0001                	nop
     fda:	4472                	lw	s0,28(sp)
     fdc:	6105                	addi	sp,sp,32
     fde:	8082                	ret

00000fe0 <TIM_TimeBaseInit>:
TIM_TimeBaseInit():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:67
*                  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef
*      structure.
* Return         : None
*******************************************************************************/
void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
{
     fe0:	7179                	addi	sp,sp,-48
     fe2:	d622                	sw	s0,44(sp)
     fe4:	1800                	addi	s0,sp,48
     fe6:	fca42e23          	sw	a0,-36(s0)
     fea:	fcb42c23          	sw	a1,-40(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:68
  uint16_t tmpcr1 = 0;
     fee:	fe041723          	sh	zero,-18(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:70

  tmpcr1 = TIMx->CTLR1;  
     ff2:	fdc42783          	lw	a5,-36(s0)
     ff6:	0007d783          	lhu	a5,0(a5) # 40021000 <_eusrstack+0x2001c000>
     ffa:	fef41723          	sh	a5,-18(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:72

  if((TIMx == TIM1) || (TIMx == TIM2) || (TIMx == TIM3)|| (TIMx == TIM4)) 
     ffe:	fdc42703          	lw	a4,-36(s0)
    1002:	400137b7          	lui	a5,0x40013
    1006:	c0078793          	addi	a5,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
    100a:	02f70863          	beq	a4,a5,103a <TIM_TimeBaseInit+0x5a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:72 (discriminator 1)
    100e:	fdc42703          	lw	a4,-36(s0)
    1012:	400007b7          	lui	a5,0x40000
    1016:	02f70263          	beq	a4,a5,103a <TIM_TimeBaseInit+0x5a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:72 (discriminator 2)
    101a:	fdc42703          	lw	a4,-36(s0)
    101e:	400007b7          	lui	a5,0x40000
    1022:	40078793          	addi	a5,a5,1024 # 40000400 <_eusrstack+0x1fffb400>
    1026:	00f70a63          	beq	a4,a5,103a <TIM_TimeBaseInit+0x5a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:72 (discriminator 3)
    102a:	fdc42703          	lw	a4,-36(s0)
    102e:	400017b7          	lui	a5,0x40001
    1032:	80078793          	addi	a5,a5,-2048 # 40000800 <_eusrstack+0x1fffb800>
    1036:	02f71163          	bne	a4,a5,1058 <TIM_TimeBaseInit+0x78>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:74
  {
    tmpcr1 &= (uint16_t)(~((uint16_t)(TIM_DIR | TIM_CMS)));
    103a:	fee45783          	lhu	a5,-18(s0)
    103e:	f8f7f793          	andi	a5,a5,-113
    1042:	fef41723          	sh	a5,-18(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:75
    tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
    1046:	fd842783          	lw	a5,-40(s0)
    104a:	0027d703          	lhu	a4,2(a5)
    104e:	fee45783          	lhu	a5,-18(s0)
    1052:	8fd9                	or	a5,a5,a4
    1054:	fef41723          	sh	a5,-18(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:78
  }

  tmpcr1 &= (uint16_t)(~((uint16_t)TIM_CTLR1_CKD));
    1058:	fee45783          	lhu	a5,-18(s0)
    105c:	cff7f793          	andi	a5,a5,-769
    1060:	fef41723          	sh	a5,-18(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:79
  tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
    1064:	fd842783          	lw	a5,-40(s0)
    1068:	0067d703          	lhu	a4,6(a5)
    106c:	fee45783          	lhu	a5,-18(s0)
    1070:	8fd9                	or	a5,a5,a4
    1072:	fef41723          	sh	a5,-18(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:81

  TIMx->CTLR1 = tmpcr1;
    1076:	fdc42783          	lw	a5,-36(s0)
    107a:	fee45703          	lhu	a4,-18(s0)
    107e:	00e79023          	sh	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:82
  TIMx->ATRLR = TIM_TimeBaseInitStruct->TIM_Period ;
    1082:	fd842783          	lw	a5,-40(s0)
    1086:	0047d703          	lhu	a4,4(a5)
    108a:	fdc42783          	lw	a5,-36(s0)
    108e:	02e79623          	sh	a4,44(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:83
  TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
    1092:	fd842783          	lw	a5,-40(s0)
    1096:	0007d703          	lhu	a4,0(a5)
    109a:	fdc42783          	lw	a5,-36(s0)
    109e:	02e79423          	sh	a4,40(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:85
    
  if (TIMx == TIM1)  
    10a2:	fdc42703          	lw	a4,-36(s0)
    10a6:	400137b7          	lui	a5,0x40013
    10aa:	c0078793          	addi	a5,a5,-1024 # 40012c00 <_eusrstack+0x2000dc00>
    10ae:	00f71d63          	bne	a4,a5,10c8 <TIM_TimeBaseInit+0xe8>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:87
  {
    TIMx->RPTCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
    10b2:	fd842783          	lw	a5,-40(s0)
    10b6:	0087c783          	lbu	a5,8(a5)
    10ba:	01079713          	slli	a4,a5,0x10
    10be:	8341                	srli	a4,a4,0x10
    10c0:	fdc42783          	lw	a5,-36(s0)
    10c4:	02e79823          	sh	a4,48(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:90
  }

  TIMx->SWEVGR = TIM_PSCReloadMode_Immediate;           
    10c8:	fdc42783          	lw	a5,-36(s0)
    10cc:	4705                	li	a4,1
    10ce:	00e79a23          	sh	a4,20(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:91
}
    10d2:	0001                	nop
    10d4:	5432                	lw	s0,44(sp)
    10d6:	6145                	addi	sp,sp,48
    10d8:	8082                	ret

000010da <TIM_Cmd>:
TIM_Cmd():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:433
* Input          : TIMx: where x can be 1 to 4 to select the TIM peripheral.
*                  NewState: ENABLE or DISABLE.
* Return         : None
*******************************************************************************/
void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
{ 
    10da:	1101                	addi	sp,sp,-32
    10dc:	ce22                	sw	s0,28(sp)
    10de:	1000                	addi	s0,sp,32
    10e0:	fea42623          	sw	a0,-20(s0)
    10e4:	feb42423          	sw	a1,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:434
  if (NewState != DISABLE)
    10e8:	fe842783          	lw	a5,-24(s0)
    10ec:	c38d                	beqz	a5,110e <TIM_Cmd+0x34>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:436
  {
    TIMx->CTLR1 |= TIM_CEN;
    10ee:	fec42783          	lw	a5,-20(s0)
    10f2:	0007d783          	lhu	a5,0(a5)
    10f6:	07c2                	slli	a5,a5,0x10
    10f8:	83c1                	srli	a5,a5,0x10
    10fa:	0017e793          	ori	a5,a5,1
    10fe:	01079713          	slli	a4,a5,0x10
    1102:	8341                	srli	a4,a4,0x10
    1104:	fec42783          	lw	a5,-20(s0)
    1108:	00e79023          	sh	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:442
  }
  else
  {
    TIMx->CTLR1 &= (uint16_t)(~((uint16_t)TIM_CEN));
  }
}
    110c:	a839                	j	112a <TIM_Cmd+0x50>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:440
    TIMx->CTLR1 &= (uint16_t)(~((uint16_t)TIM_CEN));
    110e:	fec42783          	lw	a5,-20(s0)
    1112:	0007d783          	lhu	a5,0(a5)
    1116:	07c2                	slli	a5,a5,0x10
    1118:	83c1                	srli	a5,a5,0x10
    111a:	9bf9                	andi	a5,a5,-2
    111c:	01079713          	slli	a4,a5,0x10
    1120:	8341                	srli	a4,a4,0x10
    1122:	fec42783          	lw	a5,-20(s0)
    1126:	00e79023          	sh	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:442
}
    112a:	0001                	nop
    112c:	4472                	lw	s0,28(sp)
    112e:	6105                	addi	sp,sp,32
    1130:	8082                	ret

00001132 <TIM_ITConfig>:
TIM_ITConfig():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:480
*                    TIM_IT_Break: TIM Break Interrupt source.
*                  NewState: ENABLE or DISABLE.
* Return         : None
*******************************************************************************/
void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
{  
    1132:	1101                	addi	sp,sp,-32
    1134:	ce22                	sw	s0,28(sp)
    1136:	1000                	addi	s0,sp,32
    1138:	fea42623          	sw	a0,-20(s0)
    113c:	87ae                	mv	a5,a1
    113e:	fec42223          	sw	a2,-28(s0)
    1142:	fef41523          	sh	a5,-22(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:481
  if (NewState != DISABLE)
    1146:	fe442783          	lw	a5,-28(s0)
    114a:	c39d                	beqz	a5,1170 <TIM_ITConfig+0x3e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:483
  {
    TIMx->DMAINTENR |= TIM_IT;
    114c:	fec42783          	lw	a5,-20(s0)
    1150:	00c7d783          	lhu	a5,12(a5)
    1154:	01079713          	slli	a4,a5,0x10
    1158:	8341                	srli	a4,a4,0x10
    115a:	fea45783          	lhu	a5,-22(s0)
    115e:	8fd9                	or	a5,a5,a4
    1160:	01079713          	slli	a4,a5,0x10
    1164:	8341                	srli	a4,a4,0x10
    1166:	fec42783          	lw	a5,-20(s0)
    116a:	00e79623          	sh	a4,12(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:489
  }
  else
  {
    TIMx->DMAINTENR &= (uint16_t)~TIM_IT;
  }
}
    116e:	a035                	j	119a <TIM_ITConfig+0x68>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:487
    TIMx->DMAINTENR &= (uint16_t)~TIM_IT;
    1170:	fec42783          	lw	a5,-20(s0)
    1174:	00c7d783          	lhu	a5,12(a5)
    1178:	01079713          	slli	a4,a5,0x10
    117c:	8341                	srli	a4,a4,0x10
    117e:	fea45783          	lhu	a5,-22(s0)
    1182:	fff7c793          	not	a5,a5
    1186:	07c2                	slli	a5,a5,0x10
    1188:	83c1                	srli	a5,a5,0x10
    118a:	8ff9                	and	a5,a5,a4
    118c:	01079713          	slli	a4,a5,0x10
    1190:	8341                	srli	a4,a4,0x10
    1192:	fec42783          	lw	a5,-20(s0)
    1196:	00e79623          	sh	a4,12(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:489
}
    119a:	0001                	nop
    119c:	4472                	lw	s0,28(sp)
    119e:	6105                	addi	sp,sp,32
    11a0:	8082                	ret

000011a2 <TIM_GetITStatus>:
TIM_GetITStatus():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1853
*                    TIM_IT_Trigger: TIM Trigger Interrupt source.
*                    TIM_IT_Break: TIM Break Interrupt source.
* Return         : bitstatus: SET or RESET.
*******************************************************************************/
ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
{
    11a2:	7179                	addi	sp,sp,-48
    11a4:	d622                	sw	s0,44(sp)
    11a6:	1800                	addi	s0,sp,48
    11a8:	fca42e23          	sw	a0,-36(s0)
    11ac:	87ae                	mv	a5,a1
    11ae:	fcf41d23          	sh	a5,-38(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1854
  ITStatus bitstatus = RESET;  
    11b2:	fe042623          	sw	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1855
  uint16_t itstatus = 0x0, itenable = 0x0;
    11b6:	fe041523          	sh	zero,-22(s0)
    11ba:	fe041423          	sh	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1857
   
  itstatus = TIMx->INTFR & TIM_IT;
    11be:	fdc42783          	lw	a5,-36(s0)
    11c2:	0107d783          	lhu	a5,16(a5)
    11c6:	01079713          	slli	a4,a5,0x10
    11ca:	8341                	srli	a4,a4,0x10
    11cc:	fda45783          	lhu	a5,-38(s0)
    11d0:	8ff9                	and	a5,a5,a4
    11d2:	fef41523          	sh	a5,-22(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1859
  
  itenable = TIMx->DMAINTENR & TIM_IT;
    11d6:	fdc42783          	lw	a5,-36(s0)
    11da:	00c7d783          	lhu	a5,12(a5)
    11de:	01079713          	slli	a4,a5,0x10
    11e2:	8341                	srli	a4,a4,0x10
    11e4:	fda45783          	lhu	a5,-38(s0)
    11e8:	8ff9                	and	a5,a5,a4
    11ea:	fef41423          	sh	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1860
  if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
    11ee:	fea45783          	lhu	a5,-22(s0)
    11f2:	cb81                	beqz	a5,1202 <TIM_GetITStatus+0x60>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1860 (discriminator 1)
    11f4:	fe845783          	lhu	a5,-24(s0)
    11f8:	c789                	beqz	a5,1202 <TIM_GetITStatus+0x60>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1862
  {
    bitstatus = SET;
    11fa:	4785                	li	a5,1
    11fc:	fef42623          	sw	a5,-20(s0)
    1200:	a019                	j	1206 <TIM_GetITStatus+0x64>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1866
  }
  else
  {
    bitstatus = RESET;
    1202:	fe042623          	sw	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1869
  }
	
  return bitstatus;
    1206:	fec42783          	lw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1870
}
    120a:	853e                	mv	a0,a5
    120c:	5432                	lw	s0,44(sp)
    120e:	6145                	addi	sp,sp,48
    1210:	8082                	ret

00001212 <TIM_ClearITPendingBit>:
TIM_ClearITPendingBit():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1888
*                    TIM_IT_Trigger: TIM Trigger Interrupt source.
*                    TIM_IT_Break: TIM Break Interrupt source.
* Return         : None
*******************************************************************************/
void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
{
    1212:	1101                	addi	sp,sp,-32
    1214:	ce22                	sw	s0,28(sp)
    1216:	1000                	addi	s0,sp,32
    1218:	fea42623          	sw	a0,-20(s0)
    121c:	87ae                	mv	a5,a1
    121e:	fef41523          	sh	a5,-22(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1889
  TIMx->INTFR = (uint16_t)~TIM_IT;
    1222:	fea45783          	lhu	a5,-22(s0)
    1226:	fff7c793          	not	a5,a5
    122a:	01079713          	slli	a4,a5,0x10
    122e:	8341                	srli	a4,a4,0x10
    1230:	fec42783          	lw	a5,-20(s0)
    1234:	00e79823          	sh	a4,16(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_tim.c:1890
}
    1238:	0001                	nop
    123a:	4472                	lw	s0,28(sp)
    123c:	6105                	addi	sp,sp,32
    123e:	8082                	ret

00001240 <USART_Init>:
USART_Init():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:105
*                  USART_InitStruct: pointer to a USART_InitTypeDef structure
*      that contains the configuration information for the specified USART peripheral. 
* Return         : None
*******************************************************************************/
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
    1240:	715d                	addi	sp,sp,-80
    1242:	c686                	sw	ra,76(sp)
    1244:	c4a2                	sw	s0,72(sp)
    1246:	0880                	addi	s0,sp,80
    1248:	faa42e23          	sw	a0,-68(s0)
    124c:	fab42c23          	sw	a1,-72(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:106
  uint32_t tmpreg = 0x00, apbclock = 0x00;
    1250:	fe042623          	sw	zero,-20(s0)
    1254:	fe042423          	sw	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:107
  uint32_t integerdivider = 0x00;
    1258:	fe042223          	sw	zero,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:108
  uint32_t fractionaldivider = 0x00;
    125c:	fe042023          	sw	zero,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:109
  uint32_t usartxbase = 0;
    1260:	fc042e23          	sw	zero,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:116

  if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
  {
  }

  usartxbase = (uint32_t)USARTx;
    1264:	fbc42783          	lw	a5,-68(s0)
    1268:	fcf42e23          	sw	a5,-36(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:117
  tmpreg = USARTx->CTLR2;
    126c:	fbc42783          	lw	a5,-68(s0)
    1270:	0107d783          	lhu	a5,16(a5)
    1274:	07c2                	slli	a5,a5,0x10
    1276:	83c1                	srli	a5,a5,0x10
    1278:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:118
  tmpreg &= CTLR2_STOP_CLEAR_Mask;
    127c:	fec42703          	lw	a4,-20(s0)
    1280:	67b5                	lui	a5,0xd
    1282:	17fd                	addi	a5,a5,-1
    1284:	8ff9                	and	a5,a5,a4
    1286:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:119
  tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;  
    128a:	fb842783          	lw	a5,-72(s0)
    128e:	0067d783          	lhu	a5,6(a5) # d006 <_data_lma+0x9ae2>
    1292:	873e                	mv	a4,a5
    1294:	fec42783          	lw	a5,-20(s0)
    1298:	8fd9                	or	a5,a5,a4
    129a:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:121
	
  USARTx->CTLR2 = (uint16_t)tmpreg;
    129e:	fec42783          	lw	a5,-20(s0)
    12a2:	01079713          	slli	a4,a5,0x10
    12a6:	8341                	srli	a4,a4,0x10
    12a8:	fbc42783          	lw	a5,-68(s0)
    12ac:	00e79823          	sh	a4,16(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:122
  tmpreg = USARTx->CTLR1;
    12b0:	fbc42783          	lw	a5,-68(s0)
    12b4:	00c7d783          	lhu	a5,12(a5)
    12b8:	07c2                	slli	a5,a5,0x10
    12ba:	83c1                	srli	a5,a5,0x10
    12bc:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:123
  tmpreg &= CTLR1_CLEAR_Mask;
    12c0:	fec42703          	lw	a4,-20(s0)
    12c4:	67bd                	lui	a5,0xf
    12c6:	9f378793          	addi	a5,a5,-1549 # e9f3 <_data_lma+0xb4cf>
    12ca:	8ff9                	and	a5,a5,a4
    12cc:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:124
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
    12d0:	fb842783          	lw	a5,-72(s0)
    12d4:	0047d703          	lhu	a4,4(a5)
    12d8:	fb842783          	lw	a5,-72(s0)
    12dc:	0087d783          	lhu	a5,8(a5)
    12e0:	8fd9                	or	a5,a5,a4
    12e2:	01079713          	slli	a4,a5,0x10
    12e6:	8341                	srli	a4,a4,0x10
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:125
            USART_InitStruct->USART_Mode;
    12e8:	fb842783          	lw	a5,-72(s0)
    12ec:	00a7d783          	lhu	a5,10(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:124
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
    12f0:	8fd9                	or	a5,a5,a4
    12f2:	07c2                	slli	a5,a5,0x10
    12f4:	83c1                	srli	a5,a5,0x10
    12f6:	873e                	mv	a4,a5
    12f8:	fec42783          	lw	a5,-20(s0)
    12fc:	8fd9                	or	a5,a5,a4
    12fe:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:126
  USARTx->CTLR1 = (uint16_t)tmpreg;
    1302:	fec42783          	lw	a5,-20(s0)
    1306:	01079713          	slli	a4,a5,0x10
    130a:	8341                	srli	a4,a4,0x10
    130c:	fbc42783          	lw	a5,-68(s0)
    1310:	00e79623          	sh	a4,12(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:128
 
  tmpreg = USARTx->CTLR3;
    1314:	fbc42783          	lw	a5,-68(s0)
    1318:	0147d783          	lhu	a5,20(a5)
    131c:	07c2                	slli	a5,a5,0x10
    131e:	83c1                	srli	a5,a5,0x10
    1320:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:129
  tmpreg &= CTLR3_CLEAR_Mask;
    1324:	fec42703          	lw	a4,-20(s0)
    1328:	67c1                	lui	a5,0x10
    132a:	cff78793          	addi	a5,a5,-769 # fcff <_data_lma+0xc7db>
    132e:	8ff9                	and	a5,a5,a4
    1330:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:130
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
    1334:	fb842783          	lw	a5,-72(s0)
    1338:	00c7d783          	lhu	a5,12(a5)
    133c:	873e                	mv	a4,a5
    133e:	fec42783          	lw	a5,-20(s0)
    1342:	8fd9                	or	a5,a5,a4
    1344:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:131
  USARTx->CTLR3 = (uint16_t)tmpreg;
    1348:	fec42783          	lw	a5,-20(s0)
    134c:	01079713          	slli	a4,a5,0x10
    1350:	8341                	srli	a4,a4,0x10
    1352:	fbc42783          	lw	a5,-68(s0)
    1356:	00e79a23          	sh	a4,20(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:133

  RCC_GetClocksFreq(&RCC_ClocksStatus);
    135a:	fc840793          	addi	a5,s0,-56
    135e:	853e                	mv	a0,a5
    1360:	3ae9                	jal	d3a <RCC_GetClocksFreq>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:135
	
  if (usartxbase == USART1_BASE)
    1362:	fdc42703          	lw	a4,-36(s0)
    1366:	400147b7          	lui	a5,0x40014
    136a:	80078793          	addi	a5,a5,-2048 # 40013800 <_eusrstack+0x2000e800>
    136e:	00f71763          	bne	a4,a5,137c <USART_Init+0x13c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:137
  {
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
    1372:	fd442783          	lw	a5,-44(s0)
    1376:	fef42423          	sw	a5,-24(s0)
    137a:	a029                	j	1384 <USART_Init+0x144>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:141
  }
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
    137c:	fd042783          	lw	a5,-48(s0)
    1380:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:144
  }
  
  if ((USARTx->CTLR1 & CTLR1_OVER8_Set) != 0)
    1384:	fbc42783          	lw	a5,-68(s0)
    1388:	00c7d783          	lhu	a5,12(a5)
    138c:	07c2                	slli	a5,a5,0x10
    138e:	83c1                	srli	a5,a5,0x10
    1390:	07c2                	slli	a5,a5,0x10
    1392:	87c1                	srai	a5,a5,0x10
    1394:	0207d263          	bgez	a5,13b8 <USART_Init+0x178>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:146
  {
    integerdivider = ((25 * apbclock) / (2 * (USART_InitStruct->USART_BaudRate)));    
    1398:	fe842703          	lw	a4,-24(s0)
    139c:	87ba                	mv	a5,a4
    139e:	0786                	slli	a5,a5,0x1
    13a0:	97ba                	add	a5,a5,a4
    13a2:	078e                	slli	a5,a5,0x3
    13a4:	973e                	add	a4,a4,a5
    13a6:	fb842783          	lw	a5,-72(s0)
    13aa:	439c                	lw	a5,0(a5)
    13ac:	0786                	slli	a5,a5,0x1
    13ae:	02f757b3          	divu	a5,a4,a5
    13b2:	fef42223          	sw	a5,-28(s0)
    13b6:	a005                	j	13d6 <USART_Init+0x196>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:150
  }
  else 
  {
    integerdivider = ((25 * apbclock) / (4 * (USART_InitStruct->USART_BaudRate)));    
    13b8:	fe842703          	lw	a4,-24(s0)
    13bc:	87ba                	mv	a5,a4
    13be:	0786                	slli	a5,a5,0x1
    13c0:	97ba                	add	a5,a5,a4
    13c2:	078e                	slli	a5,a5,0x3
    13c4:	973e                	add	a4,a4,a5
    13c6:	fb842783          	lw	a5,-72(s0)
    13ca:	439c                	lw	a5,0(a5)
    13cc:	078a                	slli	a5,a5,0x2
    13ce:	02f757b3          	divu	a5,a4,a5
    13d2:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:152
  }
  tmpreg = (integerdivider / 100) << 4;
    13d6:	fe442703          	lw	a4,-28(s0)
    13da:	06400793          	li	a5,100
    13de:	02f757b3          	divu	a5,a4,a5
    13e2:	0792                	slli	a5,a5,0x4
    13e4:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:154

  fractionaldivider = integerdivider - (100 * (tmpreg >> 4));
    13e8:	fec42783          	lw	a5,-20(s0)
    13ec:	0047d713          	srli	a4,a5,0x4
    13f0:	06400793          	li	a5,100
    13f4:	02f707b3          	mul	a5,a4,a5
    13f8:	fe442703          	lw	a4,-28(s0)
    13fc:	40f707b3          	sub	a5,a4,a5
    1400:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:156

  if ((USARTx->CTLR1 & CTLR1_OVER8_Set) != 0)
    1404:	fbc42783          	lw	a5,-68(s0)
    1408:	00c7d783          	lhu	a5,12(a5)
    140c:	07c2                	slli	a5,a5,0x10
    140e:	83c1                	srli	a5,a5,0x10
    1410:	07c2                	slli	a5,a5,0x10
    1412:	87c1                	srai	a5,a5,0x10
    1414:	0207d263          	bgez	a5,1438 <USART_Init+0x1f8>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:158
  {
    tmpreg |= ((((fractionaldivider * 8) + 50) / 100)) & ((uint8_t)0x07);
    1418:	fe042783          	lw	a5,-32(s0)
    141c:	078e                	slli	a5,a5,0x3
    141e:	03278713          	addi	a4,a5,50
    1422:	06400793          	li	a5,100
    1426:	02f757b3          	divu	a5,a4,a5
    142a:	8b9d                	andi	a5,a5,7
    142c:	fec42703          	lw	a4,-20(s0)
    1430:	8fd9                	or	a5,a5,a4
    1432:	fef42623          	sw	a5,-20(s0)
    1436:	a005                	j	1456 <USART_Init+0x216>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:162
  }
  else 
  {
    tmpreg |= ((((fractionaldivider * 16) + 50) / 100)) & ((uint8_t)0x0F);
    1438:	fe042783          	lw	a5,-32(s0)
    143c:	0792                	slli	a5,a5,0x4
    143e:	03278713          	addi	a4,a5,50
    1442:	06400793          	li	a5,100
    1446:	02f757b3          	divu	a5,a4,a5
    144a:	8bbd                	andi	a5,a5,15
    144c:	fec42703          	lw	a4,-20(s0)
    1450:	8fd9                	or	a5,a5,a4
    1452:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:165
  }
  
  USARTx->BRR = (uint16_t)tmpreg;
    1456:	fec42783          	lw	a5,-20(s0)
    145a:	01079713          	slli	a4,a5,0x10
    145e:	8341                	srli	a4,a4,0x10
    1460:	fbc42783          	lw	a5,-68(s0)
    1464:	00e79423          	sh	a4,8(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:166
}
    1468:	0001                	nop
    146a:	40b6                	lw	ra,76(sp)
    146c:	4426                	lw	s0,72(sp)
    146e:	6161                	addi	sp,sp,80
    1470:	8082                	ret

00001472 <USART_Cmd>:
USART_Cmd():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:229
* Input          : USARTx: where x can be 1, 2, 3 to select the USART peripheral.
*                  NewState: ENABLE or DISABLE.
* Return         : None
*******************************************************************************/
void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
    1472:	1101                	addi	sp,sp,-32
    1474:	ce22                	sw	s0,28(sp)
    1476:	1000                	addi	s0,sp,32
    1478:	fea42623          	sw	a0,-20(s0)
    147c:	feb42423          	sw	a1,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:230
  if (NewState != DISABLE)
    1480:	fe842783          	lw	a5,-24(s0)
    1484:	c395                	beqz	a5,14a8 <USART_Cmd+0x36>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:232
  {
    USARTx->CTLR1 |= CTLR1_UE_Set;
    1486:	fec42783          	lw	a5,-20(s0)
    148a:	00c7d783          	lhu	a5,12(a5)
    148e:	01079713          	slli	a4,a5,0x10
    1492:	8341                	srli	a4,a4,0x10
    1494:	6789                	lui	a5,0x2
    1496:	8fd9                	or	a5,a5,a4
    1498:	01079713          	slli	a4,a5,0x10
    149c:	8341                	srli	a4,a4,0x10
    149e:	fec42783          	lw	a5,-20(s0)
    14a2:	00e79623          	sh	a4,12(a5) # 200c <SetSysClock+0x2a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:238
  }
  else
  {
    USARTx->CTLR1 &= CTLR1_UE_Reset;
  }
}
    14a6:	a015                	j	14ca <USART_Cmd+0x58>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:236
    USARTx->CTLR1 &= CTLR1_UE_Reset;
    14a8:	fec42783          	lw	a5,-20(s0)
    14ac:	00c7d783          	lhu	a5,12(a5)
    14b0:	01079713          	slli	a4,a5,0x10
    14b4:	8341                	srli	a4,a4,0x10
    14b6:	77f9                	lui	a5,0xffffe
    14b8:	17fd                	addi	a5,a5,-1
    14ba:	8ff9                	and	a5,a5,a4
    14bc:	01079713          	slli	a4,a5,0x10
    14c0:	8341                	srli	a4,a4,0x10
    14c2:	fec42783          	lw	a5,-20(s0)
    14c6:	00e79623          	sh	a4,12(a5) # ffffe00c <_eusrstack+0xdfff900c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:238
}
    14ca:	0001                	nop
    14cc:	4472                	lw	s0,28(sp)
    14ce:	6105                	addi	sp,sp,32
    14d0:	8082                	ret

000014d2 <USART_SendData>:
USART_SendData():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:404
* Input          : USARTx: where x can be 1, 2, 3 to select the USART peripheral.
*                  Data: the data to transmit..
* Return         : None
*******************************************************************************/
void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
{
    14d2:	1101                	addi	sp,sp,-32
    14d4:	ce22                	sw	s0,28(sp)
    14d6:	1000                	addi	s0,sp,32
    14d8:	fea42623          	sw	a0,-20(s0)
    14dc:	87ae                	mv	a5,a1
    14de:	fef41523          	sh	a5,-22(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:405
  USARTx->DATAR = (Data & (uint16_t)0x01FF);
    14e2:	fea45783          	lhu	a5,-22(s0)
    14e6:	1ff7f793          	andi	a5,a5,511
    14ea:	01079713          	slli	a4,a5,0x10
    14ee:	8341                	srli	a4,a4,0x10
    14f0:	fec42783          	lw	a5,-20(s0)
    14f4:	00e79223          	sh	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:406
}
    14f8:	0001                	nop
    14fa:	4472                	lw	s0,28(sp)
    14fc:	6105                	addi	sp,sp,32
    14fe:	8082                	ret

00001500 <USART_GetFlagStatus>:
USART_GetFlagStatus():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:603
*                    USART_FLAG_FE: Framing Error flag.
*                    USART_FLAG_PE: Parity Error flag.
* Return         : bitstatus: SET or RESET.
*******************************************************************************/
FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
    1500:	7179                	addi	sp,sp,-48
    1502:	d622                	sw	s0,44(sp)
    1504:	1800                	addi	s0,sp,48
    1506:	fca42e23          	sw	a0,-36(s0)
    150a:	87ae                	mv	a5,a1
    150c:	fcf41d23          	sh	a5,-38(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:604
  FlagStatus bitstatus = RESET;
    1510:	fe042623          	sw	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:610

  if (USART_FLAG == USART_FLAG_CTS)
  {
  }  
  
  if ((USARTx->STATR & USART_FLAG) != (uint16_t)RESET)
    1514:	fdc42783          	lw	a5,-36(s0)
    1518:	0007d783          	lhu	a5,0(a5)
    151c:	01079713          	slli	a4,a5,0x10
    1520:	8341                	srli	a4,a4,0x10
    1522:	fda45783          	lhu	a5,-38(s0)
    1526:	8ff9                	and	a5,a5,a4
    1528:	07c2                	slli	a5,a5,0x10
    152a:	83c1                	srli	a5,a5,0x10
    152c:	c789                	beqz	a5,1536 <USART_GetFlagStatus+0x36>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:612
  {
    bitstatus = SET;
    152e:	4785                	li	a5,1
    1530:	fef42623          	sw	a5,-20(s0)
    1534:	a019                	j	153a <USART_GetFlagStatus+0x3a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:616
  }
  else
  {
    bitstatus = RESET;
    1536:	fe042623          	sw	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:618
  }
  return bitstatus;
    153a:	fec42783          	lw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:619
}
    153e:	853e                	mv	a0,a5
    1540:	5432                	lw	s0,44(sp)
    1542:	6145                	addi	sp,sp,48
    1544:	8082                	ret

00001546 <USART_GetITStatus>:
USART_GetITStatus():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:660
*                    USART_IT_FE: Framing Error interrupt.
*                    USART_IT_PE: Parity Error interrupt.
* Return         : bitstatus: SET or RESET.
*******************************************************************************/
ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
{
    1546:	7179                	addi	sp,sp,-48
    1548:	d622                	sw	s0,44(sp)
    154a:	1800                	addi	s0,sp,48
    154c:	fca42e23          	sw	a0,-36(s0)
    1550:	87ae                	mv	a5,a1
    1552:	fcf41d23          	sh	a5,-38(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:661
  uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
    1556:	fe042223          	sw	zero,-28(s0)
    155a:	fe042623          	sw	zero,-20(s0)
    155e:	fe042023          	sw	zero,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:662
  ITStatus bitstatus = RESET;
    1562:	fe042423          	sw	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:668

  if (USART_IT == USART_IT_CTS)
  {
  }   
  
  usartreg = (((uint8_t)USART_IT) >> 0x05);
    1566:	fda45783          	lhu	a5,-38(s0)
    156a:	0ff7f793          	andi	a5,a5,255
    156e:	8395                	srli	a5,a5,0x5
    1570:	0ff7f793          	andi	a5,a5,255
    1574:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:669
  itmask = USART_IT & IT_Mask;
    1578:	fda45783          	lhu	a5,-38(s0)
    157c:	8bfd                	andi	a5,a5,31
    157e:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:670
  itmask = (uint32_t)0x01 << itmask;
    1582:	fec42783          	lw	a5,-20(s0)
    1586:	4705                	li	a4,1
    1588:	00f717b3          	sll	a5,a4,a5
    158c:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:672
  
  if (usartreg == 0x01) 
    1590:	fe042703          	lw	a4,-32(s0)
    1594:	4785                	li	a5,1
    1596:	00f71f63          	bne	a4,a5,15b4 <USART_GetITStatus+0x6e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:674
  {
    itmask &= USARTx->CTLR1;
    159a:	fdc42783          	lw	a5,-36(s0)
    159e:	00c7d783          	lhu	a5,12(a5)
    15a2:	07c2                	slli	a5,a5,0x10
    15a4:	83c1                	srli	a5,a5,0x10
    15a6:	873e                	mv	a4,a5
    15a8:	fec42783          	lw	a5,-20(s0)
    15ac:	8ff9                	and	a5,a5,a4
    15ae:	fef42623          	sw	a5,-20(s0)
    15b2:	a83d                	j	15f0 <USART_GetITStatus+0xaa>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:676
  }
  else if (usartreg == 0x02) 
    15b4:	fe042703          	lw	a4,-32(s0)
    15b8:	4789                	li	a5,2
    15ba:	00f71f63          	bne	a4,a5,15d8 <USART_GetITStatus+0x92>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:678
  {
    itmask &= USARTx->CTLR2;
    15be:	fdc42783          	lw	a5,-36(s0)
    15c2:	0107d783          	lhu	a5,16(a5)
    15c6:	07c2                	slli	a5,a5,0x10
    15c8:	83c1                	srli	a5,a5,0x10
    15ca:	873e                	mv	a4,a5
    15cc:	fec42783          	lw	a5,-20(s0)
    15d0:	8ff9                	and	a5,a5,a4
    15d2:	fef42623          	sw	a5,-20(s0)
    15d6:	a829                	j	15f0 <USART_GetITStatus+0xaa>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:682
  }
  else 
  {
    itmask &= USARTx->CTLR3;
    15d8:	fdc42783          	lw	a5,-36(s0)
    15dc:	0147d783          	lhu	a5,20(a5)
    15e0:	07c2                	slli	a5,a5,0x10
    15e2:	83c1                	srli	a5,a5,0x10
    15e4:	873e                	mv	a4,a5
    15e6:	fec42783          	lw	a5,-20(s0)
    15ea:	8ff9                	and	a5,a5,a4
    15ec:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:685
  }
  
  bitpos = USART_IT >> 0x08;
    15f0:	fda45783          	lhu	a5,-38(s0)
    15f4:	83a1                	srli	a5,a5,0x8
    15f6:	07c2                	slli	a5,a5,0x10
    15f8:	83c1                	srli	a5,a5,0x10
    15fa:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:686
  bitpos = (uint32_t)0x01 << bitpos;
    15fe:	fe442783          	lw	a5,-28(s0)
    1602:	4705                	li	a4,1
    1604:	00f717b3          	sll	a5,a4,a5
    1608:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:687
  bitpos &= USARTx->STATR;
    160c:	fdc42783          	lw	a5,-36(s0)
    1610:	0007d783          	lhu	a5,0(a5)
    1614:	07c2                	slli	a5,a5,0x10
    1616:	83c1                	srli	a5,a5,0x10
    1618:	873e                	mv	a4,a5
    161a:	fe442783          	lw	a5,-28(s0)
    161e:	8ff9                	and	a5,a5,a4
    1620:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:689
	
  if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
    1624:	fec42783          	lw	a5,-20(s0)
    1628:	cb81                	beqz	a5,1638 <USART_GetITStatus+0xf2>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:689 (discriminator 1)
    162a:	fe442783          	lw	a5,-28(s0)
    162e:	c789                	beqz	a5,1638 <USART_GetITStatus+0xf2>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:691
  {
    bitstatus = SET;
    1630:	4785                	li	a5,1
    1632:	fef42423          	sw	a5,-24(s0)
    1636:	a019                	j	163c <USART_GetITStatus+0xf6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:695
  }
  else
  {
    bitstatus = RESET;
    1638:	fe042423          	sw	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:698
  }
  
  return bitstatus;  
    163c:	fe842783          	lw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:699
}
    1640:	853e                	mv	a0,a5
    1642:	5432                	lw	s0,44(sp)
    1644:	6145                	addi	sp,sp,48
    1646:	8082                	ret

00001648 <USART_ClearITPendingBit>:
USART_ClearITPendingBit():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:713
*                    USART_IT_TC:   Transmission complete interrupt.
*                    USART_IT_RXNE: Receive Data register not empty interrupt.
* Return         : None
*******************************************************************************/
void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
{
    1648:	7179                	addi	sp,sp,-48
    164a:	d622                	sw	s0,44(sp)
    164c:	1800                	addi	s0,sp,48
    164e:	fca42e23          	sw	a0,-36(s0)
    1652:	87ae                	mv	a5,a1
    1654:	fcf41d23          	sh	a5,-38(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:714
  uint16_t bitpos = 0x00, itmask = 0x00;
    1658:	fe041723          	sh	zero,-18(s0)
    165c:	fe041623          	sh	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:720

  if (USART_IT == USART_IT_CTS)
  {
  }   
  
  bitpos = USART_IT >> 0x08;
    1660:	fda45783          	lhu	a5,-38(s0)
    1664:	83a1                	srli	a5,a5,0x8
    1666:	fef41723          	sh	a5,-18(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:721
  itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
    166a:	fee45783          	lhu	a5,-18(s0)
    166e:	4705                	li	a4,1
    1670:	00f717b3          	sll	a5,a4,a5
    1674:	fef41623          	sh	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:722
  USARTx->STATR = (uint16_t)~itmask;
    1678:	fec45783          	lhu	a5,-20(s0)
    167c:	fff7c793          	not	a5,a5
    1680:	01079713          	slli	a4,a5,0x10
    1684:	8341                	srli	a4,a4,0x10
    1686:	fdc42783          	lw	a5,-36(s0)
    168a:	00e79023          	sh	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/wch_libraries/Peripheral/ch32v10x_usart.c:723
}
    168e:	0001                	nop
    1690:	5432                	lw	s0,44(sp)
    1692:	6145                	addi	sp,sp,48
    1694:	8082                	ret

00001696 <mt9v03x_uart_callback>:
mt9v03x_uart_callback():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:90
//  @since      v1.0
//  Sample usage:
//  @note       
//-------------------------------------------------------------------------------------------------------------------
void mt9v03x_uart_callback(void)
{
    1696:	1141                	addi	sp,sp,-16
    1698:	c622                	sw	s0,12(sp)
    169a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:91
    receive[receive_num] = ((USART_TypeDef*)UARTN[MT9V03X_COF_UART])->DATAR & 0x01FF;;
    169c:	678d                	lui	a5,0x3
    169e:	43878793          	addi	a5,a5,1080 # 3438 <UARTN>
    16a2:	43dc                	lw	a5,4(a5)
    16a4:	0047d783          	lhu	a5,4(a5)
    16a8:	01079713          	slli	a4,a5,0x10
    16ac:	8341                	srli	a4,a4,0x10
    16ae:	81b1c783          	lbu	a5,-2021(gp) # 2000008b <receive_num>
    16b2:	86be                	mv	a3,a5
    16b4:	0ff77713          	andi	a4,a4,255
    16b8:	81818793          	addi	a5,gp,-2024 # 20000088 <receive>
    16bc:	97b6                	add	a5,a5,a3
    16be:	00e78023          	sb	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:92
    receive_num++;
    16c2:	81b1c783          	lbu	a5,-2021(gp) # 2000008b <receive_num>
    16c6:	0785                	addi	a5,a5,1
    16c8:	0ff7f713          	andi	a4,a5,255
    16cc:	80e18da3          	sb	a4,-2021(gp) # 2000008b <receive_num>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:94

    if(1==receive_num && 0XA5!=receive[0])  receive_num = 0;
    16d0:	81b1c703          	lbu	a4,-2021(gp) # 2000008b <receive_num>
    16d4:	4785                	li	a5,1
    16d6:	00f71a63          	bne	a4,a5,16ea <mt9v03x_uart_callback+0x54>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:94 (discriminator 1)
    16da:	8181c703          	lbu	a4,-2024(gp) # 20000088 <receive>
    16de:	0a500793          	li	a5,165
    16e2:	00f70463          	beq	a4,a5,16ea <mt9v03x_uart_callback+0x54>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:94 (discriminator 2)
    16e6:	80018da3          	sb	zero,-2021(gp) # 2000008b <receive_num>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:95
    if(3 == receive_num)
    16ea:	81b1c703          	lbu	a4,-2021(gp) # 2000008b <receive_num>
    16ee:	478d                	li	a5,3
    16f0:	00f71763          	bne	a4,a5,16fe <mt9v03x_uart_callback+0x68>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:97
    {
        receive_num = 0;
    16f4:	80018da3          	sb	zero,-2021(gp) # 2000008b <receive_num>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:98
        uart_receive_flag = 1;
    16f8:	4705                	li	a4,1
    16fa:	80e18e23          	sb	a4,-2020(gp) # 2000008c <uart_receive_flag>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:101
    }
    
}
    16fe:	0001                	nop
    1700:	4432                	lw	s0,12(sp)
    1702:	0141                	addi	sp,sp,16
    1704:	8082                	ret

00001706 <mt9v03x_vsync>:
mt9v03x_vsync():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:376
//  @return     void
//  @since      v1.0
//  Sample usage:               在isr.c里面先创建对应的中断函数，然后调用该函数(之后别忘记清除中断标志位)
//-------------------------------------------------------------------------------------------------------------------
void mt9v03x_vsync(void)
{
    1706:	1141                	addi	sp,sp,-16
    1708:	c622                	sw	s0,12(sp)
    170a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:377
    MT9V03X_DMA_CH->CNTR = MT9V03X_H*MT9V03X_W;             //设置当前DMA传输的剩余数量，向下递减，该寄存器只能在DMA不工作时更改。
    170c:	400207b7          	lui	a5,0x40020
    1710:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    1714:	6709                	lui	a4,0x2
    1716:	4b870713          	addi	a4,a4,1208 # 24b8 <_vfiprintf_r+0x250>
    171a:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:378
    MT9V03X_DMA_CH->CFGR |= DMA_CFGR1_EN;
    171c:	400207b7          	lui	a5,0x40020
    1720:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    1724:	4398                	lw	a4,0(a5)
    1726:	400207b7          	lui	a5,0x40020
    172a:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    172e:	00176713          	ori	a4,a4,1
    1732:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:379
}
    1734:	0001                	nop
    1736:	4432                	lw	s0,12(sp)
    1738:	0141                	addi	sp,sp,16
    173a:	8082                	ret

0000173c <mt9v03x_dma>:
mt9v03x_dma():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:389
//  @return     void
//  @since      v1.0
//  Sample usage:
//-------------------------------------------------------------------------------------------------------------------
void mt9v03x_dma(void)
{
    173c:	1141                	addi	sp,sp,-16
    173e:	c622                	sw	s0,12(sp)
    1740:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:390
    mt9v03x_finish_flag = 1;//一副图像从采集开始到采集结束耗时3.8MS左右(50FPS、188*120分辨率)
    1742:	4705                	li	a4,1
    1744:	80e18ea3          	sb	a4,-2019(gp) # 2000008d <mt9v03x_finish_flag>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:391
    MT9V03X_DMA_CH->CFGR &= (uint16)(~DMA_CFGR1_EN);   //关闭DMA1
    1748:	400207b7          	lui	a5,0x40020
    174c:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    1750:	4394                	lw	a3,0(a5)
    1752:	400207b7          	lui	a5,0x40020
    1756:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    175a:	6741                	lui	a4,0x10
    175c:	1779                	addi	a4,a4,-2
    175e:	8f75                	and	a4,a4,a3
    1760:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_MT9V03X.c:392
}
    1762:	0001                	nop
    1764:	4432                	lw	s0,12(sp)
    1766:	0141                	addi	sp,sp,16
    1768:	8082                	ret

0000176a <ov7725_cof_uart_interrupt>:
ov7725_cof_uart_interrupt():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:81
//  Sample usage:
//  @note       该函数在ISR文件 串口3中断程序被调用
//-------------------------------------------------------------------------------------------------------------------

void ov7725_cof_uart_interrupt(void)
{
    176a:	1141                	addi	sp,sp,-16
    176c:	c622                	sw	s0,12(sp)
    176e:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:83

    ov7725_uart_receive[ov7725_uart_receive_num] = ((USART_TypeDef*)UARTN[OV7725_UART_COF_UART])->DATAR & 0x01FF;
    1770:	678d                	lui	a5,0x3
    1772:	43878793          	addi	a5,a5,1080 # 3438 <UARTN>
    1776:	43dc                	lw	a5,4(a5)
    1778:	0047d783          	lhu	a5,4(a5)
    177c:	01079713          	slli	a4,a5,0x10
    1780:	8341                	srli	a4,a4,0x10
    1782:	8231c783          	lbu	a5,-2013(gp) # 20000093 <ov7725_uart_receive_num>
    1786:	86be                	mv	a3,a5
    1788:	0ff77713          	andi	a4,a4,255
    178c:	82018793          	addi	a5,gp,-2016 # 20000090 <ov7725_uart_receive>
    1790:	97b6                	add	a5,a5,a3
    1792:	00e78023          	sb	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:84
    ov7725_uart_receive_num++;
    1796:	8231c783          	lbu	a5,-2013(gp) # 20000093 <ov7725_uart_receive_num>
    179a:	0785                	addi	a5,a5,1
    179c:	0ff7f713          	andi	a4,a5,255
    17a0:	82e181a3          	sb	a4,-2013(gp) # 20000093 <ov7725_uart_receive_num>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:86

    if(1==ov7725_uart_receive_num && 0XA5!=ov7725_uart_receive[0])  ov7725_uart_receive_num = 0;
    17a4:	8231c703          	lbu	a4,-2013(gp) # 20000093 <ov7725_uart_receive_num>
    17a8:	4785                	li	a5,1
    17aa:	00f71a63          	bne	a4,a5,17be <ov7725_cof_uart_interrupt+0x54>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:86 (discriminator 1)
    17ae:	8201c703          	lbu	a4,-2016(gp) # 20000090 <ov7725_uart_receive>
    17b2:	0a500793          	li	a5,165
    17b6:	00f70463          	beq	a4,a5,17be <ov7725_cof_uart_interrupt+0x54>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:86 (discriminator 2)
    17ba:	820181a3          	sb	zero,-2013(gp) # 20000093 <ov7725_uart_receive_num>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:87
    if(3 == ov7725_uart_receive_num)
    17be:	8231c703          	lbu	a4,-2013(gp) # 20000093 <ov7725_uart_receive_num>
    17c2:	478d                	li	a5,3
    17c4:	00f71763          	bne	a4,a5,17d2 <ov7725_cof_uart_interrupt+0x68>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:89
    {
        ov7725_uart_receive_num = 0;
    17c8:	820181a3          	sb	zero,-2013(gp) # 20000093 <ov7725_uart_receive_num>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:90
        ov7725_uart_receive_flag = 1;
    17cc:	4705                	li	a4,1
    17ce:	82e18223          	sb	a4,-2012(gp) # 20000094 <ov7725_uart_receive_flag>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:92
    }
}
    17d2:	0001                	nop
    17d4:	4432                	lw	s0,12(sp)
    17d6:	0141                	addi	sp,sp,16
    17d8:	8082                	ret

000017da <ov7725_uart_vsync>:
ov7725_uart_vsync():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:103
//  @since      v1.0
//  Sample usage:                   在isr.c里面先创建对应的中断函数，然后调用该函数(之后别忘记清除中断标志位)
//-------------------------------------------------------------------------------------------------------------------

void ov7725_uart_vsync(void)
{
    17da:	1141                	addi	sp,sp,-16
    17dc:	c622                	sw	s0,12(sp)
    17de:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:104
    OV7725_UART_DMA_CH->CNTR = OV7725_UART_SIZE;             //设置当前DMA传输的剩余数量，向下递减，该寄存器只能在DMA不工作时更改。
    17e0:	400207b7          	lui	a5,0x40020
    17e4:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    17e8:	6705                	lui	a4,0x1
    17ea:	96070713          	addi	a4,a4,-1696 # 960 <GPIO_Init+0x116>
    17ee:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:105
    OV7725_UART_DMA_CH->CFGR |= DMA_CFGR1_EN;                //开启DMA1
    17f0:	400207b7          	lui	a5,0x40020
    17f4:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    17f8:	4398                	lw	a4,0(a5)
    17fa:	400207b7          	lui	a5,0x40020
    17fe:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    1802:	00176713          	ori	a4,a4,1
    1806:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:106
}
    1808:	0001                	nop
    180a:	4432                	lw	s0,12(sp)
    180c:	0141                	addi	sp,sp,16
    180e:	8082                	ret

00001810 <ov7725_uart_dma>:
ov7725_uart_dma():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:117
//  @return     void
//  @since      v1.0
//  Sample usage:                   在isr.c里面先创建对应的中断函数，然后调用该函数(之后别忘记清除中断标志位)
//-------------------------------------------------------------------------------------------------------------------
void ov7725_uart_dma(void)
{
    1810:	1141                	addi	sp,sp,-16
    1812:	c622                	sw	s0,12(sp)
    1814:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:118
    ov7725_uart_finish_flag = 1;                             //摄像头数据采集置1
    1816:	4705                	li	a4,1
    1818:	82e182a3          	sb	a4,-2011(gp) # 20000095 <ov7725_uart_finish_flag>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:119
    OV7725_UART_DMA_CH->CFGR &= (uint16)(~DMA_CFGR1_EN);     //关闭DMA1
    181c:	400207b7          	lui	a5,0x40020
    1820:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    1824:	4394                	lw	a3,0(a5)
    1826:	400207b7          	lui	a5,0x40020
    182a:	04478793          	addi	a5,a5,68 # 40020044 <_eusrstack+0x2001b044>
    182e:	6741                	lui	a4,0x10
    1830:	1779                	addi	a4,a4,-2
    1832:	8f75                	and	a4,a4,a3
    1834:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_peripheral/SEEKFREE_UART_7725.c:120
}
    1836:	0001                	nop
    1838:	4432                	lw	s0,12(sp)
    183a:	0141                	addi	sp,sp,16
    183c:	8082                	ret

0000183e <gpio_init>:
gpio_init():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:40
//  @param      pinconf     引脚配置（可设置参数由zf_gpio.h文件内GPIOSPEED_enum与GPIOMODE_enum枚举值确定，多个条件使用 | 相或）
//  @return     void
//  Sample usage:           gpio_init(D0, GPO, 1, GPIO_PIN_CONFIG);//D0初始化为GPIO功能、输出模式、输出高电平、速度100MHZ 推挽输出
//-------------------------------------------------------------------------------------------------------------------
void gpio_init(PIN_enum pin, GPIODIR_enum dir, uint8 dat, uint32 pinconf)
{
    183e:	7179                	addi	sp,sp,-48
    1840:	d606                	sw	ra,44(sp)
    1842:	d422                	sw	s0,40(sp)
    1844:	1800                	addi	s0,sp,48
    1846:	fca42e23          	sw	a0,-36(s0)
    184a:	fcb42c23          	sw	a1,-40(s0)
    184e:	87b2                	mv	a5,a2
    1850:	fcd42823          	sw	a3,-48(s0)
    1854:	fcf40ba3          	sb	a5,-41(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:42
    GPIO_InitTypeDef GPIO_InitStructure;
    uint8 io_group = (pin & 0xE0) >> 5;
    1858:	fdc42783          	lw	a5,-36(s0)
    185c:	8395                	srli	a5,a5,0x5
    185e:	0ff7f793          	andi	a5,a5,255
    1862:	8b9d                	andi	a5,a5,7
    1864:	fef407a3          	sb	a5,-17(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:43
    uint8 io_pin = pin & 0x1F;
    1868:	fdc42783          	lw	a5,-36(s0)
    186c:	0ff7f793          	andi	a5,a5,255
    1870:	8bfd                	andi	a5,a5,31
    1872:	fef40723          	sb	a5,-18(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:46


    if(PIN_NULL == pin) return;
    1876:	fdc42703          	lw	a4,-36(s0)
    187a:	08000793          	li	a5,128
    187e:	14f70d63          	beq	a4,a5,19d8 <gpio_init+0x19a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:48
    //GPIO总线使能
    if(0 == (pin >> 5))      RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
    1882:	fdc42783          	lw	a5,-36(s0)
    1886:	8395                	srli	a5,a5,0x5
    1888:	e791                	bnez	a5,1894 <gpio_init+0x56>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:48 (discriminator 1)
    188a:	4585                	li	a1,1
    188c:	4511                	li	a0,4
    188e:	ec6ff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
    1892:	a861                	j	192a <gpio_init+0xec>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:49
    else if(1 == (pin >> 5)) RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
    1894:	fdc42783          	lw	a5,-36(s0)
    1898:	0057d713          	srli	a4,a5,0x5
    189c:	4785                	li	a5,1
    189e:	00f71763          	bne	a4,a5,18ac <gpio_init+0x6e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:49 (discriminator 1)
    18a2:	4585                	li	a1,1
    18a4:	4521                	li	a0,8
    18a6:	eaeff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
    18aa:	a041                	j	192a <gpio_init+0xec>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:50
    else if(2 == (pin >> 5)) RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
    18ac:	fdc42783          	lw	a5,-36(s0)
    18b0:	0057d713          	srli	a4,a5,0x5
    18b4:	4789                	li	a5,2
    18b6:	00f71763          	bne	a4,a5,18c4 <gpio_init+0x86>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:50 (discriminator 1)
    18ba:	4585                	li	a1,1
    18bc:	4541                	li	a0,16
    18be:	e96ff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
    18c2:	a0a5                	j	192a <gpio_init+0xec>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:51
    else if(3 == (pin >> 5)) RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
    18c4:	fdc42783          	lw	a5,-36(s0)
    18c8:	0057d713          	srli	a4,a5,0x5
    18cc:	478d                	li	a5,3
    18ce:	00f71863          	bne	a4,a5,18de <gpio_init+0xa0>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:51 (discriminator 1)
    18d2:	4585                	li	a1,1
    18d4:	02000513          	li	a0,32
    18d8:	e7cff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
    18dc:	a0b9                	j	192a <gpio_init+0xec>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:52
    else if(4 == (pin >> 5)) RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOE, ENABLE);
    18de:	fdc42783          	lw	a5,-36(s0)
    18e2:	0057d713          	srli	a4,a5,0x5
    18e6:	4791                	li	a5,4
    18e8:	00f71863          	bne	a4,a5,18f8 <gpio_init+0xba>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:52 (discriminator 1)
    18ec:	4585                	li	a1,1
    18ee:	04000513          	li	a0,64
    18f2:	e62ff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
    18f6:	a815                	j	192a <gpio_init+0xec>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:53
    else if(5 == (pin >> 5)) RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF, ENABLE);
    18f8:	fdc42783          	lw	a5,-36(s0)
    18fc:	0057d713          	srli	a4,a5,0x5
    1900:	4795                	li	a5,5
    1902:	00f71863          	bne	a4,a5,1912 <gpio_init+0xd4>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:53 (discriminator 1)
    1906:	4585                	li	a1,1
    1908:	08000513          	li	a0,128
    190c:	e48ff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
    1910:	a829                	j	192a <gpio_init+0xec>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:54
    else if(6 == (pin >> 5)) RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOG, ENABLE);
    1912:	fdc42783          	lw	a5,-36(s0)
    1916:	0057d713          	srli	a4,a5,0x5
    191a:	4799                	li	a5,6
    191c:	00f71763          	bne	a4,a5,192a <gpio_init+0xec>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:54 (discriminator 1)
    1920:	4585                	li	a1,1
    1922:	10000513          	li	a0,256
    1926:	e2eff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:58


    //设置引脚号
    GPIO_InitStructure.GPIO_Pin = (uint16)(1 << io_pin);
    192a:	fee44783          	lbu	a5,-18(s0)
    192e:	4705                	li	a4,1
    1930:	00f717b3          	sll	a5,a4,a5
    1934:	07c2                	slli	a5,a5,0x10
    1936:	83c1                	srli	a5,a5,0x10
    1938:	fef41023          	sh	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:60

    if(GPO == dir)
    193c:	fd842703          	lw	a4,-40(s0)
    1940:	4785                	li	a5,1
    1942:	02f71763          	bne	a4,a5,1970 <gpio_init+0x132>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:63
    {
        //只有输出需要设置速度
        if((uint16)pinconf >> 8 == 0) GPIO_InitStructure.GPIO_Speed = (GPIOSpeed_TypeDef)(GPIO_Speed_50MHz);  //防止没有填写这个参数,默认设置50Mhz
    1946:	fd042783          	lw	a5,-48(s0)
    194a:	07c2                	slli	a5,a5,0x10
    194c:	83c1                	srli	a5,a5,0x10
    194e:	83a1                	srli	a5,a5,0x8
    1950:	07c2                	slli	a5,a5,0x10
    1952:	83c1                	srli	a5,a5,0x10
    1954:	e789                	bnez	a5,195e <gpio_init+0x120>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:63 (discriminator 1)
    1956:	478d                	li	a5,3
    1958:	fef42223          	sw	a5,-28(s0)
    195c:	a811                	j	1970 <gpio_init+0x132>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:64
        else GPIO_InitStructure.GPIO_Speed = (GPIOSpeed_TypeDef)((uint16)pinconf >> 8);                       //已经填写了该参数。根据值来设置
    195e:	fd042783          	lw	a5,-48(s0)
    1962:	07c2                	slli	a5,a5,0x10
    1964:	83c1                	srli	a5,a5,0x10
    1966:	83a1                	srli	a5,a5,0x8
    1968:	07c2                	slli	a5,a5,0x10
    196a:	83c1                	srli	a5,a5,0x10
    196c:	fef42223          	sw	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:68
    }

    //设置模式
    GPIO_InitStructure.GPIO_Mode = (GPIOMode_TypeDef)((uint16)pinconf & 0xff);
    1970:	fd042783          	lw	a5,-48(s0)
    1974:	07c2                	slli	a5,a5,0x10
    1976:	83c1                	srli	a5,a5,0x10
    1978:	0ff7f793          	andi	a5,a5,255
    197c:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:69
    GPIO_Init((GPIO_TypeDef *)(GPION[io_group]), &GPIO_InitStructure);
    1980:	fef44703          	lbu	a4,-17(s0)
    1984:	678d                	lui	a5,0x3
    1986:	070a                	slli	a4,a4,0x2
    1988:	40078793          	addi	a5,a5,1024 # 3400 <GPION>
    198c:	97ba                	add	a5,a5,a4
    198e:	439c                	lw	a5,0(a5)
    1990:	873e                	mv	a4,a5
    1992:	fe040793          	addi	a5,s0,-32
    1996:	85be                	mv	a1,a5
    1998:	853a                	mv	a0,a4
    199a:	eb1fe0ef          	jal	ra,84a <GPIO_Init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:71

    if(GPO == dir)
    199e:	fd842703          	lw	a4,-40(s0)
    19a2:	4785                	li	a5,1
    19a4:	02f71b63          	bne	a4,a5,19da <gpio_init+0x19c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:74
    {
        //只有输出需要设置引脚状态
        GPIO_WriteBit((GPIO_TypeDef *)(GPION[io_group]), (uint16)(1 << io_pin), dat);
    19a8:	fef44703          	lbu	a4,-17(s0)
    19ac:	678d                	lui	a5,0x3
    19ae:	070a                	slli	a4,a4,0x2
    19b0:	40078793          	addi	a5,a5,1024 # 3400 <GPION>
    19b4:	97ba                	add	a5,a5,a4
    19b6:	439c                	lw	a5,0(a5)
    19b8:	86be                	mv	a3,a5
    19ba:	fee44783          	lbu	a5,-18(s0)
    19be:	4705                	li	a4,1
    19c0:	00f717b3          	sll	a5,a4,a5
    19c4:	07c2                	slli	a5,a5,0x10
    19c6:	83c1                	srli	a5,a5,0x10
    19c8:	fd744703          	lbu	a4,-41(s0)
    19cc:	863a                	mv	a2,a4
    19ce:	85be                	mv	a1,a5
    19d0:	8536                	mv	a0,a3
    19d2:	8a2ff0ef          	jal	ra,a74 <GPIO_WriteBit>
    19d6:	a011                	j	19da <gpio_init+0x19c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:46
    if(PIN_NULL == pin) return;
    19d8:	0001                	nop
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_gpio.c:76
    }
}
    19da:	50b2                	lw	ra,44(sp)
    19dc:	5422                	lw	s0,40(sp)
    19de:	6145                	addi	sp,sp,48
    19e0:	8082                	ret

000019e2 <nvic_init>:
nvic_init():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:38
//  @param      status                      使能或者失能
//  @return     void
//  Sample usage:                           nvic_init(EXTI0_IRQn,0, 0, ENABLE); //外部中断0使能,抢占优先级最高，次优先级最高。
//-------------------------------------------------------------------------------------------------------------------
void nvic_init(IRQn_Type irqn,uint8 preemption_priority, uint8 sub_priority,uint8 status)
{
    19e2:	7179                	addi	sp,sp,-48
    19e4:	d606                	sw	ra,44(sp)
    19e6:	d422                	sw	s0,40(sp)
    19e8:	1800                	addi	s0,sp,48
    19ea:	fca42e23          	sw	a0,-36(s0)
    19ee:	87ae                	mv	a5,a1
    19f0:	8736                	mv	a4,a3
    19f2:	fcf40da3          	sb	a5,-37(s0)
    19f6:	87b2                	mv	a5,a2
    19f8:	fcf40d23          	sb	a5,-38(s0)
    19fc:	87ba                	mv	a5,a4
    19fe:	fcf40ca3          	sb	a5,-39(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:41
    NVIC_InitTypeDef NVIC_InitStructure;

    NVIC_InitStructure.NVIC_IRQChannel = irqn;                                  //中断号设置
    1a02:	fdc42783          	lw	a5,-36(s0)
    1a06:	0ff7f793          	andi	a5,a5,255
    1a0a:	fef40423          	sb	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:42
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=preemption_priority;   //抢占优先级值越小，优先级越高
    1a0e:	fdb44783          	lbu	a5,-37(s0)
    1a12:	fef404a3          	sb	a5,-23(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:43
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = sub_priority;               //次优先级值越小，优先级越高
    1a16:	fda44783          	lbu	a5,-38(s0)
    1a1a:	fef40523          	sb	a5,-22(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:44
    NVIC_InitStructure.NVIC_IRQChannelCmd = status;                             //使能
    1a1e:	fd944783          	lbu	a5,-39(s0)
    1a22:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:45
    NVIC_Init(&NVIC_InitStructure);
    1a26:	fe840793          	addi	a5,s0,-24
    1a2a:	853e                	mv	a0,a5
    1a2c:	a4aff0ef          	jal	ra,c76 <NVIC_Init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:48

    //保存状态值
    irq_status.ienr0 |= (PFIC->ISR[0] & 0xFFFFF000);    //[31:12]
    1a30:	e000e7b7          	lui	a5,0xe000e
    1a34:	4398                	lw	a4,0(a5)
    1a36:	77fd                	lui	a5,0xfffff
    1a38:	8f7d                	and	a4,a4,a5
    1a3a:	8441a783          	lw	a5,-1980(gp) # 200000b4 <irq_status>
    1a3e:	8f5d                	or	a4,a4,a5
    1a40:	84e1a223          	sw	a4,-1980(gp) # 200000b4 <irq_status>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:49
    irq_status.ienr1 |= (PFIC->ISR[1] & 0x0FFFFFFF);    //[27:0]
    1a44:	e000e7b7          	lui	a5,0xe000e
    1a48:	43d8                	lw	a4,4(a5)
    1a4a:	100007b7          	lui	a5,0x10000
    1a4e:	17fd                	addi	a5,a5,-1
    1a50:	8f7d                	and	a4,a4,a5
    1a52:	84418793          	addi	a5,gp,-1980 # 200000b4 <irq_status>
    1a56:	43dc                	lw	a5,4(a5)
    1a58:	8f5d                	or	a4,a4,a5
    1a5a:	84418793          	addi	a5,gp,-1980 # 200000b4 <irq_status>
    1a5e:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:50
    if(irq_status.flag == 1)
    1a60:	84418793          	addi	a5,gp,-1980 # 200000b4 <irq_status>
    1a64:	0087c703          	lbu	a4,8(a5) # 10000008 <_data_lma+0xfffcae4>
    1a68:	4785                	li	a5,1
    1a6a:	00f71363          	bne	a4,a5,1a70 <nvic_init+0x8e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:52
    {
        close_all_irq();
    1a6e:	2031                	jal	1a7a <close_all_irq>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:54
    }
}
    1a70:	0001                	nop
    1a72:	50b2                	lw	ra,44(sp)
    1a74:	5422                	lw	s0,40(sp)
    1a76:	6145                	addi	sp,sp,48
    1a78:	8082                	ret

00001a7a <close_all_irq>:
close_all_irq():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:63
//  @return     void
//  @since      v1.0
//  Sample usage:
//-------------------------------------------------------------------------------------------------------------------
void close_all_irq(void)
{
    1a7a:	1141                	addi	sp,sp,-16
    1a7c:	c622                	sw	s0,12(sp)
    1a7e:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:65
    //写1，清空状态
    PFIC->IRER[0] = 0xffffffff;
    1a80:	e000e7b7          	lui	a5,0xe000e
    1a84:	577d                	li	a4,-1
    1a86:	18e7a023          	sw	a4,384(a5) # e000e180 <_eusrstack+0xc0009180>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:66
    PFIC->IRER[1] = 0xffffffff;
    1a8a:	e000e7b7          	lui	a5,0xe000e
    1a8e:	577d                	li	a4,-1
    1a90:	18e7a223          	sw	a4,388(a5) # e000e184 <_eusrstack+0xc0009184>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:67
}
    1a94:	0001                	nop
    1a96:	4432                	lw	s0,12(sp)
    1a98:	0141                	addi	sp,sp,16
    1a9a:	8082                	ret

00001a9c <sys_recover_irq>:
sys_recover_irq():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:77
//  @return     void
//  @since      v1.0
//  Sample usage:
//-------------------------------------------------------------------------------------------------------------------
void sys_recover_irq(void)
{
    1a9c:	1141                	addi	sp,sp,-16
    1a9e:	c622                	sw	s0,12(sp)
    1aa0:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:78
    PFIC->IENR[0] = irq_status.ienr0;
    1aa2:	e000e7b7          	lui	a5,0xe000e
    1aa6:	8441a703          	lw	a4,-1980(gp) # 200000b4 <irq_status>
    1aaa:	10e7a023          	sw	a4,256(a5) # e000e100 <_eusrstack+0xc0009100>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:79
    PFIC->IENR[1] = irq_status.ienr1;
    1aae:	e000e7b7          	lui	a5,0xe000e
    1ab2:	84418713          	addi	a4,gp,-1980 # 200000b4 <irq_status>
    1ab6:	4358                	lw	a4,4(a4)
    1ab8:	10e7a223          	sw	a4,260(a5) # e000e104 <_eusrstack+0xc0009104>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:80
}
    1abc:	0001                	nop
    1abe:	4432                	lw	s0,12(sp)
    1ac0:	0141                	addi	sp,sp,16
    1ac2:	8082                	ret

00001ac4 <DisableGlobalIRQ>:
DisableGlobalIRQ():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:90
//  @return     void
//  @since      v1.0
//  Sample usage:
//-------------------------------------------------------------------------------------------------------------------
uint8 DisableGlobalIRQ(void)
{
    1ac4:	1101                	addi	sp,sp,-32
    1ac6:	ce06                	sw	ra,28(sp)
    1ac8:	cc22                	sw	s0,24(sp)
    1aca:	1000                	addi	s0,sp,32
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:92
    uint8 state;
    irq_status.flag = 1;
    1acc:	84418793          	addi	a5,gp,-1980 # 200000b4 <irq_status>
    1ad0:	4705                	li	a4,1
    1ad2:	00e78423          	sb	a4,8(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:93
    if((irq_status.ienr0 == 0) && (irq_status.ienr1 == 0))   state = 0;  //没有就返回0
    1ad6:	8441a783          	lw	a5,-1980(gp) # 200000b4 <irq_status>
    1ada:	eb81                	bnez	a5,1aea <DisableGlobalIRQ+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:93 (discriminator 1)
    1adc:	84418793          	addi	a5,gp,-1980 # 200000b4 <irq_status>
    1ae0:	43dc                	lw	a5,4(a5)
    1ae2:	e781                	bnez	a5,1aea <DisableGlobalIRQ+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:93 (discriminator 2)
    1ae4:	fe0407a3          	sb	zero,-17(s0)
    1ae8:	a021                	j	1af0 <DisableGlobalIRQ+0x2c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:94
    else state = 1;  //有中断就返回1
    1aea:	4785                	li	a5,1
    1aec:	fef407a3          	sb	a5,-17(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:95
    close_all_irq();
    1af0:	3769                	jal	1a7a <close_all_irq>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:96
    return state;
    1af2:	fef44783          	lbu	a5,-17(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:97
}
    1af6:	853e                	mv	a0,a5
    1af8:	40f2                	lw	ra,28(sp)
    1afa:	4462                	lw	s0,24(sp)
    1afc:	6105                	addi	sp,sp,32
    1afe:	8082                	ret

00001b00 <EnableGlobalIRQ>:
EnableGlobalIRQ():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:107
//  @return     void
//  @since      v1.0
//  Sample usage:
//-------------------------------------------------------------------------------------------------------------------
void EnableGlobalIRQ(uint8 state)
{
    1b00:	1101                	addi	sp,sp,-32
    1b02:	ce06                	sw	ra,28(sp)
    1b04:	cc22                	sw	s0,24(sp)
    1b06:	1000                	addi	s0,sp,32
    1b08:	87aa                	mv	a5,a0
    1b0a:	fef407a3          	sb	a5,-17(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:108
    if(state == 0)
    1b0e:	fef44783          	lbu	a5,-17(s0)
    1b12:	e791                	bnez	a5,1b1e <EnableGlobalIRQ+0x1e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:110
    {
        irq_status.flag = 0;
    1b14:	84418793          	addi	a5,gp,-1980 # 200000b4 <irq_status>
    1b18:	00078423          	sb	zero,8(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:111
        sys_recover_irq();
    1b1c:	3741                	jal	1a9c <sys_recover_irq>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_nvic.c:113
    }
}
    1b1e:	0001                	nop
    1b20:	40f2                	lw	ra,28(sp)
    1b22:	4462                	lw	s0,24(sp)
    1b24:	6105                	addi	sp,sp,32
    1b26:	8082                	ret

00001b28 <timer_pit_interrupt_ms>:
timer_pit_interrupt_ms():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:36
//  @param      ms          定时周期(1-32767)
//  @return     void
//  Sample usage:           timer_pit_interrupt(TIMER_1, 5); 使用定时器1作为5ms一次的周期中断
//-------------------------------------------------------------------------------------------------------------------
void timer_pit_interrupt_ms(TIMERN_enum timern, uint16 ms)
{
    1b28:	7179                	addi	sp,sp,-48
    1b2a:	d606                	sw	ra,44(sp)
    1b2c:	d422                	sw	s0,40(sp)
    1b2e:	1800                	addi	s0,sp,48
    1b30:	fca42e23          	sw	a0,-36(s0)
    1b34:	87ae                	mv	a5,a1
    1b36:	fcf41d23          	sh	a5,-38(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:39
    TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;

    if(TIMER_1 == timern)
    1b3a:	fdc42783          	lw	a5,-36(s0)
    1b3e:	eb81                	bnez	a5,1b4e <timer_pit_interrupt_ms+0x26>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:40
        RCC_APB2PeriphClockCmd(RCC_APB2Periph_TIM1, ENABLE);                //时钟使能
    1b40:	4585                	li	a1,1
    1b42:	6785                	lui	a5,0x1
    1b44:	80078513          	addi	a0,a5,-2048 # 800 <__stack_size>
    1b48:	c0cff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
    1b4c:	a835                	j	1b88 <timer_pit_interrupt_ms+0x60>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:41
    else if(TIMER_2 == timern)
    1b4e:	fdc42703          	lw	a4,-36(s0)
    1b52:	4785                	li	a5,1
    1b54:	00f71763          	bne	a4,a5,1b62 <timer_pit_interrupt_ms+0x3a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:42
        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);                //时钟使能
    1b58:	4585                	li	a1,1
    1b5a:	4505                	li	a0,1
    1b5c:	c3eff0ef          	jal	ra,f9a <RCC_APB1PeriphClockCmd>
    1b60:	a025                	j	1b88 <timer_pit_interrupt_ms+0x60>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:43
    else if(TIMER_3 == timern)
    1b62:	fdc42703          	lw	a4,-36(s0)
    1b66:	4789                	li	a5,2
    1b68:	00f71763          	bne	a4,a5,1b76 <timer_pit_interrupt_ms+0x4e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:44
        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3, ENABLE);                //时钟使能
    1b6c:	4585                	li	a1,1
    1b6e:	4509                	li	a0,2
    1b70:	c2aff0ef          	jal	ra,f9a <RCC_APB1PeriphClockCmd>
    1b74:	a811                	j	1b88 <timer_pit_interrupt_ms+0x60>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:45
    else if(TIMER_4 == timern)
    1b76:	fdc42703          	lw	a4,-36(s0)
    1b7a:	478d                	li	a5,3
    1b7c:	00f71663          	bne	a4,a5,1b88 <timer_pit_interrupt_ms+0x60>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:46
        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4, ENABLE);                //时钟使能
    1b80:	4585                	li	a1,1
    1b82:	4511                	li	a0,4
    1b84:	c16ff0ef          	jal	ra,f9a <RCC_APB1PeriphClockCmd>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:50

    //定时器TIM3初始化,计数器
    //ATRLR寄存器设置为1 ，则计数0和1，一共2次
    assert(ms);
    1b88:	fda45783          	lhu	a5,-38(s0)
    1b8c:	ef89                	bnez	a5,1ba6 <timer_pit_interrupt_ms+0x7e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:50 (discriminator 1)
    1b8e:	678d                	lui	a5,0x3
    1b90:	3cc78693          	addi	a3,a5,972 # 33cc <_exit+0x4>
    1b94:	678d                	lui	a5,0x3
    1b96:	41078613          	addi	a2,a5,1040 # 3410 <__func__.3548>
    1b9a:	03200593          	li	a1,50
    1b9e:	678d                	lui	a5,0x3
    1ba0:	3d078513          	addi	a0,a5,976 # 33d0 <_exit+0x8>
    1ba4:	2bed                	jal	219e <__assert_func>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:53


    TIM_TimeBaseStructure.TIM_Period = sys_clk/2000 - 1;                    //计数44000
    1ba6:	8281a703          	lw	a4,-2008(gp) # 20000098 <sys_clk>
    1baa:	7d000793          	li	a5,2000
    1bae:	02f757b3          	divu	a5,a4,a5
    1bb2:	07c2                	slli	a5,a5,0x10
    1bb4:	83c1                	srli	a5,a5,0x10
    1bb6:	17fd                	addi	a5,a5,-1
    1bb8:	07c2                	slli	a5,a5,0x10
    1bba:	83c1                	srli	a5,a5,0x10
    1bbc:	fef41423          	sh	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:54
    TIM_TimeBaseStructure.TIM_Prescaler = 2*ms - 1;                      //设置为1MHZ计数一次,也就是1us计数一次
    1bc0:	fda45783          	lhu	a5,-38(s0)
    1bc4:	0786                	slli	a5,a5,0x1
    1bc6:	07c2                	slli	a5,a5,0x10
    1bc8:	83c1                	srli	a5,a5,0x10
    1bca:	17fd                	addi	a5,a5,-1
    1bcc:	07c2                	slli	a5,a5,0x10
    1bce:	83c1                	srli	a5,a5,0x10
    1bd0:	fef41223          	sh	a5,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:56

    TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;                 //设置时钟分割:TDTS = Tck_tim
    1bd4:	fe041523          	sh	zero,-22(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:57
    TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;             //TIM向上计数模式
    1bd8:	fe041323          	sh	zero,-26(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:58
    TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;                        //重复计数器设置为0
    1bdc:	fe040623          	sb	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:59
    TIM_TimeBaseInit((TIM_TypeDef *)TIMERN[timern], &TIM_TimeBaseStructure);//根据指定的参数初始化TIMx的时间基数单位
    1be0:	678d                	lui	a5,0x3
    1be2:	fdc42703          	lw	a4,-36(s0)
    1be6:	070a                	slli	a4,a4,0x2
    1be8:	42878793          	addi	a5,a5,1064 # 3428 <TIMERN>
    1bec:	97ba                	add	a5,a5,a4
    1bee:	439c                	lw	a5,0(a5)
    1bf0:	873e                	mv	a4,a5
    1bf2:	fe440793          	addi	a5,s0,-28
    1bf6:	85be                	mv	a1,a5
    1bf8:	853a                	mv	a0,a4
    1bfa:	be6ff0ef          	jal	ra,fe0 <TIM_TimeBaseInit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:61

    TIM_ITConfig((TIM_TypeDef *)TIMERN[timern],TIM_IT_Update,ENABLE );      //使能指定的TIM中断,允许更新中断
    1bfe:	678d                	lui	a5,0x3
    1c00:	fdc42703          	lw	a4,-36(s0)
    1c04:	070a                	slli	a4,a4,0x2
    1c06:	42878793          	addi	a5,a5,1064 # 3428 <TIMERN>
    1c0a:	97ba                	add	a5,a5,a4
    1c0c:	439c                	lw	a5,0(a5)
    1c0e:	4605                	li	a2,1
    1c10:	4585                	li	a1,1
    1c12:	853e                	mv	a0,a5
    1c14:	d1eff0ef          	jal	ra,1132 <TIM_ITConfig>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:62
    TIM_ClearITPendingBit((TIM_TypeDef *)TIMERN[timern], TIM_IT_Update);
    1c18:	678d                	lui	a5,0x3
    1c1a:	fdc42703          	lw	a4,-36(s0)
    1c1e:	070a                	slli	a4,a4,0x2
    1c20:	42878793          	addi	a5,a5,1064 # 3428 <TIMERN>
    1c24:	97ba                	add	a5,a5,a4
    1c26:	439c                	lw	a5,0(a5)
    1c28:	4585                	li	a1,1
    1c2a:	853e                	mv	a0,a5
    1c2c:	de6ff0ef          	jal	ra,1212 <TIM_ClearITPendingBit>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:65

    //中断优先级NVIC设置
    if(TIMER_1 == timern)
    1c30:	fdc42783          	lw	a5,-36(s0)
    1c34:	eb81                	bnez	a5,1c44 <timer_pit_interrupt_ms+0x11c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:66
        nvic_init(TIM1_UP_IRQn, 1, 2, ENABLE);
    1c36:	4685                	li	a3,1
    1c38:	4609                	li	a2,2
    1c3a:	4585                	li	a1,1
    1c3c:	02900513          	li	a0,41
    1c40:	334d                	jal	19e2 <nvic_init>
    1c42:	a0a1                	j	1c8a <timer_pit_interrupt_ms+0x162>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:67
    else if(TIMER_2 == timern)
    1c44:	fdc42703          	lw	a4,-36(s0)
    1c48:	4785                	li	a5,1
    1c4a:	00f71963          	bne	a4,a5,1c5c <timer_pit_interrupt_ms+0x134>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:68
        nvic_init(TIM2_IRQn, 1, 2, ENABLE);
    1c4e:	4685                	li	a3,1
    1c50:	4609                	li	a2,2
    1c52:	4585                	li	a1,1
    1c54:	02c00513          	li	a0,44
    1c58:	3369                	jal	19e2 <nvic_init>
    1c5a:	a805                	j	1c8a <timer_pit_interrupt_ms+0x162>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:69
    else if(TIMER_3 == timern)
    1c5c:	fdc42703          	lw	a4,-36(s0)
    1c60:	4789                	li	a5,2
    1c62:	00f71963          	bne	a4,a5,1c74 <timer_pit_interrupt_ms+0x14c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:70
        nvic_init(TIM3_IRQn, 1, 2, ENABLE);
    1c66:	4685                	li	a3,1
    1c68:	4609                	li	a2,2
    1c6a:	4585                	li	a1,1
    1c6c:	02d00513          	li	a0,45
    1c70:	3b8d                	jal	19e2 <nvic_init>
    1c72:	a821                	j	1c8a <timer_pit_interrupt_ms+0x162>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:71
    else if(TIMER_4 == timern)
    1c74:	fdc42703          	lw	a4,-36(s0)
    1c78:	478d                	li	a5,3
    1c7a:	00f71863          	bne	a4,a5,1c8a <timer_pit_interrupt_ms+0x162>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:72
        nvic_init(TIM4_IRQn, 1, 2, ENABLE);
    1c7e:	4685                	li	a3,1
    1c80:	4609                	li	a2,2
    1c82:	4585                	li	a1,1
    1c84:	02e00513          	li	a0,46
    1c88:	3ba9                	jal	19e2 <nvic_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:74

    TIM_Cmd((TIM_TypeDef *)TIMERN[timern], ENABLE);  //使能TIMx
    1c8a:	678d                	lui	a5,0x3
    1c8c:	fdc42703          	lw	a4,-36(s0)
    1c90:	070a                	slli	a4,a4,0x2
    1c92:	42878793          	addi	a5,a5,1064 # 3428 <TIMERN>
    1c96:	97ba                	add	a5,a5,a4
    1c98:	439c                	lw	a5,0(a5)
    1c9a:	4585                	li	a1,1
    1c9c:	853e                	mv	a0,a5
    1c9e:	c3cff0ef          	jal	ra,10da <TIM_Cmd>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_pit.c:76

}
    1ca2:	0001                	nop
    1ca4:	50b2                	lw	ra,44(sp)
    1ca6:	5422                	lw	s0,40(sp)
    1ca8:	6145                	addi	sp,sp,48
    1caa:	8082                	ret

00001cac <uart_gpio_init>:
uart_gpio_init():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:38
//  @param      rx_pin      串口接收引脚号
//  @return     void
//  Sample usage:           内部使用，用户无需关心
//-------------------------------------------------------------------------------------------------------------------
void uart_gpio_init(UARTPIN_enum tx_pin, UARTPIN_enum rx_pin)
{
    1cac:	1101                	addi	sp,sp,-32
    1cae:	ce06                	sw	ra,28(sp)
    1cb0:	cc22                	sw	s0,24(sp)
    1cb2:	1000                	addi	s0,sp,32
    1cb4:	fea42623          	sw	a0,-20(s0)
    1cb8:	feb42423          	sw	a1,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:39
    if(tx_pin == UART1_TX_A9 && rx_pin == UART1_RX_A10)
    1cbc:	fec42783          	lw	a5,-20(s0)
    1cc0:	e395                	bnez	a5,1ce4 <uart_gpio_init+0x38>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:39 (discriminator 1)
    1cc2:	fe842703          	lw	a4,-24(s0)
    1cc6:	4785                	li	a5,1
    1cc8:	00f71e63          	bne	a4,a5,1ce4 <uart_gpio_init+0x38>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:41
    {
        gpio_init(A9, GPO, 0, SPEED_50MHZ|OUT_AF_PP);
    1ccc:	31800693          	li	a3,792
    1cd0:	4601                	li	a2,0
    1cd2:	4585                	li	a1,1
    1cd4:	4525                	li	a0,9
    1cd6:	36a5                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:42
        gpio_init(A10, GPI, 0, IN_FLOAT);
    1cd8:	4691                	li	a3,4
    1cda:	4601                	li	a2,0
    1cdc:	4581                	li	a1,0
    1cde:	4529                	li	a0,10
    1ce0:	3eb9                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:67
    else if(tx_pin == UART3_TX_C10)
    {
        gpio_init(C10, GPO, 0, SPEED_50MHZ|OUT_AF_PP);
        gpio_init(C11, GPI, 0, IN_FLOAT);
    }
}
    1ce2:	a861                	j	1d7a <uart_gpio_init+0xce>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:44
    else if(tx_pin == UART1_TX_B6)
    1ce4:	fec42703          	lw	a4,-20(s0)
    1ce8:	4789                	li	a5,2
    1cea:	02f71063          	bne	a4,a5,1d0a <uart_gpio_init+0x5e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:46
        gpio_init(B6, GPO, 0, SPEED_50MHZ|OUT_AF_PP);
    1cee:	31800693          	li	a3,792
    1cf2:	4601                	li	a2,0
    1cf4:	4585                	li	a1,1
    1cf6:	02600513          	li	a0,38
    1cfa:	3691                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:47
        gpio_init(B7, GPI, 0, IN_FLOAT);
    1cfc:	4691                	li	a3,4
    1cfe:	4601                	li	a2,0
    1d00:	4581                	li	a1,0
    1d02:	02700513          	li	a0,39
    1d06:	3e25                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:67
}
    1d08:	a88d                	j	1d7a <uart_gpio_init+0xce>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:50
    else if(tx_pin == UART2_TX_A2)
    1d0a:	fec42703          	lw	a4,-20(s0)
    1d0e:	47c1                	li	a5,16
    1d10:	00f71e63          	bne	a4,a5,1d2c <uart_gpio_init+0x80>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:52
        gpio_init(A2, GPO, 0, SPEED_50MHZ|OUT_AF_PP);
    1d14:	31800693          	li	a3,792
    1d18:	4601                	li	a2,0
    1d1a:	4585                	li	a1,1
    1d1c:	4509                	li	a0,2
    1d1e:	3605                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:53
        gpio_init(A3, GPI, 0, IN_FLOAT);
    1d20:	4691                	li	a3,4
    1d22:	4601                	li	a2,0
    1d24:	4581                	li	a1,0
    1d26:	450d                	li	a0,3
    1d28:	3e19                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:67
}
    1d2a:	a881                	j	1d7a <uart_gpio_init+0xce>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:56
    else if(tx_pin == UART3_TX_B10)
    1d2c:	fec42703          	lw	a4,-20(s0)
    1d30:	02000793          	li	a5,32
    1d34:	02f71063          	bne	a4,a5,1d54 <uart_gpio_init+0xa8>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:58
        gpio_init(B10, GPO, 0, SPEED_50MHZ|OUT_AF_PP);
    1d38:	31800693          	li	a3,792
    1d3c:	4601                	li	a2,0
    1d3e:	4585                	li	a1,1
    1d40:	02a00513          	li	a0,42
    1d44:	3ced                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:59
        gpio_init(B11, GPI, 0, IN_FLOAT);
    1d46:	4691                	li	a3,4
    1d48:	4601                	li	a2,0
    1d4a:	4581                	li	a1,0
    1d4c:	02b00513          	li	a0,43
    1d50:	34fd                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:67
}
    1d52:	a025                	j	1d7a <uart_gpio_init+0xce>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:62
    else if(tx_pin == UART3_TX_C10)
    1d54:	fec42703          	lw	a4,-20(s0)
    1d58:	02200793          	li	a5,34
    1d5c:	00f71f63          	bne	a4,a5,1d7a <uart_gpio_init+0xce>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:64
        gpio_init(C10, GPO, 0, SPEED_50MHZ|OUT_AF_PP);
    1d60:	31800693          	li	a3,792
    1d64:	4601                	li	a2,0
    1d66:	4585                	li	a1,1
    1d68:	04a00513          	li	a0,74
    1d6c:	3cc9                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:65
        gpio_init(C11, GPI, 0, IN_FLOAT);
    1d6e:	4691                	li	a3,4
    1d70:	4601                	li	a2,0
    1d72:	4581                	li	a1,0
    1d74:	04b00513          	li	a0,75
    1d78:	34d9                	jal	183e <gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:67
}
    1d7a:	0001                	nop
    1d7c:	40f2                	lw	ra,28(sp)
    1d7e:	4462                	lw	s0,24(sp)
    1d80:	6105                	addi	sp,sp,32
    1d82:	8082                	ret

00001d84 <uart_init>:
uart_init():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:79
//  @param      rx_pin      串口接收引脚号
//  @return     void
//  Sample usage:           uart_init(UART_1, 115200, UART1_TX_A9, UART1_RX_A10); //串口1初始化引脚号,TX为A9,RX为A10
//-------------------------------------------------------------------------------------------------------------------
void uart_init(UARTN_enum uartn, uint32 baud, UARTPIN_enum tx_pin, UARTPIN_enum rx_pin)
{
    1d84:	7179                	addi	sp,sp,-48
    1d86:	d606                	sw	ra,44(sp)
    1d88:	d422                	sw	s0,40(sp)
    1d8a:	1800                	addi	s0,sp,48
    1d8c:	fca42e23          	sw	a0,-36(s0)
    1d90:	fcb42c23          	sw	a1,-40(s0)
    1d94:	fcc42a23          	sw	a2,-44(s0)
    1d98:	fcd42823          	sw	a3,-48(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:83
    USART_InitTypeDef USART_InitStructure;


    RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
    1d9c:	4585                	li	a1,1
    1d9e:	4505                	li	a0,1
    1da0:	9b4ff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:86

    //引脚初始化
    uart_gpio_init(tx_pin, rx_pin);
    1da4:	fd042583          	lw	a1,-48(s0)
    1da8:	fd442503          	lw	a0,-44(s0)
    1dac:	3701                	jal	1cac <uart_gpio_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:88

    if(UART1_TX_B6 == tx_pin && UART1_RX_B7 == rx_pin)                         //引脚重映射
    1dae:	fd442703          	lw	a4,-44(s0)
    1db2:	4789                	li	a5,2
    1db4:	00f71b63          	bne	a4,a5,1dca <uart_init+0x46>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:88 (discriminator 1)
    1db8:	fd042703          	lw	a4,-48(s0)
    1dbc:	478d                	li	a5,3
    1dbe:	00f71663          	bne	a4,a5,1dca <uart_init+0x46>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:89
        GPIO_PinRemapConfig(GPIO_Remap_USART1, ENABLE);
    1dc2:	4585                	li	a1,1
    1dc4:	4511                	li	a0,4
    1dc6:	ce7fe0ef          	jal	ra,aac <GPIO_PinRemapConfig>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:90
    if(UART3_TX_C10 == tx_pin && UART3_RX_C11 == rx_pin)
    1dca:	fd442703          	lw	a4,-44(s0)
    1dce:	02200793          	li	a5,34
    1dd2:	00f71f63          	bne	a4,a5,1df0 <uart_init+0x6c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:90 (discriminator 1)
    1dd6:	fd042703          	lw	a4,-48(s0)
    1dda:	02300793          	li	a5,35
    1dde:	00f71963          	bne	a4,a5,1df0 <uart_init+0x6c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:91
        GPIO_PinRemapConfig(GPIO_PartialRemap_USART3, ENABLE);
    1de2:	4585                	li	a1,1
    1de4:	001407b7          	lui	a5,0x140
    1de8:	01078513          	addi	a0,a5,16 # 140010 <_data_lma+0x13caec>
    1dec:	cc1fe0ef          	jal	ra,aac <GPIO_PinRemapConfig>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:94

    //串口总线使能
    if(UART_1 == uartn) RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
    1df0:	fdc42783          	lw	a5,-36(s0)
    1df4:	e791                	bnez	a5,1e00 <uart_init+0x7c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:94 (discriminator 1)
    1df6:	4585                	li	a1,1
    1df8:	6511                	lui	a0,0x4
    1dfa:	95aff0ef          	jal	ra,f54 <RCC_APB2PeriphClockCmd>
    1dfe:	a035                	j	1e2a <uart_init+0xa6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:95
    else if(UART_2 == uartn) RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
    1e00:	fdc42703          	lw	a4,-36(s0)
    1e04:	4785                	li	a5,1
    1e06:	00f71863          	bne	a4,a5,1e16 <uart_init+0x92>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:95 (discriminator 1)
    1e0a:	4585                	li	a1,1
    1e0c:	00020537          	lui	a0,0x20
    1e10:	98aff0ef          	jal	ra,f9a <RCC_APB1PeriphClockCmd>
    1e14:	a819                	j	1e2a <uart_init+0xa6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:96
    else if(UART_3 == uartn) RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
    1e16:	fdc42703          	lw	a4,-36(s0)
    1e1a:	4789                	li	a5,2
    1e1c:	00f71763          	bne	a4,a5,1e2a <uart_init+0xa6>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:96 (discriminator 1)
    1e20:	4585                	li	a1,1
    1e22:	00040537          	lui	a0,0x40
    1e26:	974ff0ef          	jal	ra,f9a <RCC_APB1PeriphClockCmd>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:99

    //串口参数配置
    USART_InitStructure.USART_BaudRate = baud;
    1e2a:	fd842783          	lw	a5,-40(s0)
    1e2e:	fef42023          	sw	a5,-32(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:100
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
    1e32:	fe041223          	sh	zero,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:101
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
    1e36:	fe041323          	sh	zero,-26(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:102
    USART_InitStructure.USART_Parity = USART_Parity_No;
    1e3a:	fe041423          	sh	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:103
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
    1e3e:	fe041623          	sh	zero,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:104
    USART_InitStructure.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;
    1e42:	47b1                	li	a5,12
    1e44:	fef41523          	sh	a5,-22(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:107

    //使能串口
    USART_Init((USART_TypeDef*)UARTN[uartn], &USART_InitStructure);
    1e48:	678d                	lui	a5,0x3
    1e4a:	fdc42703          	lw	a4,-36(s0)
    1e4e:	070a                	slli	a4,a4,0x2
    1e50:	43878793          	addi	a5,a5,1080 # 3438 <UARTN>
    1e54:	97ba                	add	a5,a5,a4
    1e56:	439c                	lw	a5,0(a5)
    1e58:	873e                	mv	a4,a5
    1e5a:	fe040793          	addi	a5,s0,-32
    1e5e:	85be                	mv	a1,a5
    1e60:	853a                	mv	a0,a4
    1e62:	bdeff0ef          	jal	ra,1240 <USART_Init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:108
    USART_Cmd((USART_TypeDef*)UARTN[uartn], ENABLE);
    1e66:	678d                	lui	a5,0x3
    1e68:	fdc42703          	lw	a4,-36(s0)
    1e6c:	070a                	slli	a4,a4,0x2
    1e6e:	43878793          	addi	a5,a5,1080 # 3438 <UARTN>
    1e72:	97ba                	add	a5,a5,a4
    1e74:	439c                	lw	a5,0(a5)
    1e76:	4585                	li	a1,1
    1e78:	853e                	mv	a0,a5
    1e7a:	df8ff0ef          	jal	ra,1472 <USART_Cmd>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:111


}
    1e7e:	0001                	nop
    1e80:	50b2                	lw	ra,44(sp)
    1e82:	5422                	lw	s0,40(sp)
    1e84:	6145                	addi	sp,sp,48
    1e86:	8082                	ret

00001e88 <uart_putchar>:
uart_putchar():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:122
//  @param      dat         串口数据
//  @return     void
//  Sample usage:           uart_putchar(UART_1, 0x43);        //串口1发送0x43。
//-------------------------------------------------------------------------------------------------------------------
void uart_putchar(UARTN_enum uartn, uint8 dat)
{
    1e88:	1101                	addi	sp,sp,-32
    1e8a:	ce22                	sw	s0,28(sp)
    1e8c:	1000                	addi	s0,sp,32
    1e8e:	fea42623          	sw	a0,-20(s0)
    1e92:	87ae                	mv	a5,a1
    1e94:	fef405a3          	sb	a5,-21(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:123
    while((((USART_TypeDef*)UARTN[uartn])->STATR & USART_FLAG_TXE)==0);
    1e98:	0001                	nop
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:123 (discriminator 1)
    1e9a:	678d                	lui	a5,0x3
    1e9c:	fec42703          	lw	a4,-20(s0)
    1ea0:	070a                	slli	a4,a4,0x2
    1ea2:	43878793          	addi	a5,a5,1080 # 3438 <UARTN>
    1ea6:	97ba                	add	a5,a5,a4
    1ea8:	439c                	lw	a5,0(a5)
    1eaa:	0007d783          	lhu	a5,0(a5)
    1eae:	07c2                	slli	a5,a5,0x10
    1eb0:	83c1                	srli	a5,a5,0x10
    1eb2:	0807f793          	andi	a5,a5,128
    1eb6:	d3f5                	beqz	a5,1e9a <uart_putchar+0x12>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:124
    ((USART_TypeDef*)UARTN[uartn])->DATAR = dat;
    1eb8:	678d                	lui	a5,0x3
    1eba:	fec42703          	lw	a4,-20(s0)
    1ebe:	070a                	slli	a4,a4,0x2
    1ec0:	43878793          	addi	a5,a5,1080 # 3438 <UARTN>
    1ec4:	97ba                	add	a5,a5,a4
    1ec6:	439c                	lw	a5,0(a5)
    1ec8:	873e                	mv	a4,a5
    1eca:	feb44783          	lbu	a5,-21(s0)
    1ece:	07c2                	slli	a5,a5,0x10
    1ed0:	83c1                	srli	a5,a5,0x10
    1ed2:	00f71223          	sh	a5,4(a4) # 10004 <_data_lma+0xcae0>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:125
}
    1ed6:	0001                	nop
    1ed8:	4472                	lw	s0,28(sp)
    1eda:	6105                	addi	sp,sp,32
    1edc:	8082                	ret

00001ede <uart_putbuff>:
uart_putbuff():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:136
//  @param      len         数据长度
//  @return     void
//  Sample usage:           uart_putbuff(UART_1, buff, 10);     //串口1发送10个buff数组。
//-------------------------------------------------------------------------------------------------------------------
void uart_putbuff(UARTN_enum uartn, uint8 *buff, uint32 len)
{
    1ede:	1101                	addi	sp,sp,-32
    1ee0:	ce06                	sw	ra,28(sp)
    1ee2:	cc22                	sw	s0,24(sp)
    1ee4:	1000                	addi	s0,sp,32
    1ee6:	fea42623          	sw	a0,-20(s0)
    1eea:	feb42423          	sw	a1,-24(s0)
    1eee:	fec42223          	sw	a2,-28(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:137
    while(len--)
    1ef2:	a829                	j	1f0c <uart_putbuff+0x2e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:138
        uart_putchar(uartn, *buff++);
    1ef4:	fe842783          	lw	a5,-24(s0)
    1ef8:	00178713          	addi	a4,a5,1
    1efc:	fee42423          	sw	a4,-24(s0)
    1f00:	0007c783          	lbu	a5,0(a5)
    1f04:	85be                	mv	a1,a5
    1f06:	fec42503          	lw	a0,-20(s0)
    1f0a:	3fbd                	jal	1e88 <uart_putchar>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:137
    while(len--)
    1f0c:	fe442783          	lw	a5,-28(s0)
    1f10:	fff78713          	addi	a4,a5,-1
    1f14:	fee42223          	sw	a4,-28(s0)
    1f18:	fff1                	bnez	a5,1ef4 <uart_putbuff+0x16>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/seekfree_libraries/zf_uart.c:139
}
    1f1a:	0001                	nop
    1f1c:	40f2                	lw	ra,28(sp)
    1f1e:	4462                	lw	s0,24(sp)
    1f20:	6105                	addi	sp,sp,32
    1f22:	8082                	ret

00001f24 <board_init>:
board_init():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:9




void board_init(void)
{
    1f24:	1141                	addi	sp,sp,-16
    1f26:	c606                	sw	ra,12(sp)
    1f28:	c422                	sw	s0,8(sp)
    1f2a:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:11
    //获取系统主频
    sys_clk = 8000000 * (((RCC->CFGR0 >> 18)&0x0F) + 2);
    1f2c:	400217b7          	lui	a5,0x40021
    1f30:	43dc                	lw	a5,4(a5)
    1f32:	83c9                	srli	a5,a5,0x12
    1f34:	00f7f713          	andi	a4,a5,15
    1f38:	007a17b7          	lui	a5,0x7a1
    1f3c:	20078793          	addi	a5,a5,512 # 7a1200 <_data_lma+0x79dcdc>
    1f40:	02f70733          	mul	a4,a4,a5
    1f44:	00f427b7          	lui	a5,0xf42
    1f48:	40078793          	addi	a5,a5,1024 # f42400 <_data_lma+0xf3eedc>
    1f4c:	973e                	add	a4,a4,a5
    1f4e:	82e1a423          	sw	a4,-2008(gp) # 20000098 <sys_clk>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:13
    //初始化DEBUG串口
    uart_init(DEBUG_UART, DEBUG_UART_BAUD, DEBUG_UART_TX_PIN, DEBUG_UART_RX_PIN);
    1f52:	4685                	li	a3,1
    1f54:	4601                	li	a2,0
    1f56:	67f1                	lui	a5,0x1c
    1f58:	20078593          	addi	a1,a5,512 # 1c200 <_data_lma+0x18cdc>
    1f5c:	4501                	li	a0,0
    1f5e:	351d                	jal	1d84 <uart_init>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:14
}
    1f60:	0001                	nop
    1f62:	40b2                	lw	ra,12(sp)
    1f64:	4422                	lw	s0,8(sp)
    1f66:	0141                	addi	sp,sp,16
    1f68:	8082                	ret

00001f6a <_write>:
_write():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:25
//  @since      v1.0
//  Sample usage:              重定向printf到DEBUG串口上
//-------------------------------------------------------------------------------------------------------------------
#if (1 == PRINTF_ENABLE)
int _write(int fd, char *buf, int size)
{
    1f6a:	7179                	addi	sp,sp,-48
    1f6c:	d606                	sw	ra,44(sp)
    1f6e:	d422                	sw	s0,40(sp)
    1f70:	1800                	addi	s0,sp,48
    1f72:	fca42e23          	sw	a0,-36(s0)
    1f76:	fcb42c23          	sw	a1,-40(s0)
    1f7a:	fcc42a23          	sw	a2,-44(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:27
    int i;
    for(i=0; i<size; i++)
    1f7e:	fe042623          	sw	zero,-20(s0)
    1f82:	a099                	j	1fc8 <_write+0x5e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:29
    {
        while (USART_GetFlagStatus((USART_TypeDef*)UARTN[DEBUG_UART], USART_FLAG_TC) == RESET);
    1f84:	0001                	nop
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:29 (discriminator 1)
    1f86:	678d                	lui	a5,0x3
    1f88:	4387a783          	lw	a5,1080(a5) # 3438 <UARTN>
    1f8c:	04000593          	li	a1,64
    1f90:	853e                	mv	a0,a5
    1f92:	d6eff0ef          	jal	ra,1500 <USART_GetFlagStatus>
    1f96:	87aa                	mv	a5,a0
    1f98:	d7fd                	beqz	a5,1f86 <_write+0x1c>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:30 (discriminator 2)
        USART_SendData((USART_TypeDef*)UARTN[DEBUG_UART], *buf++);
    1f9a:	678d                	lui	a5,0x3
    1f9c:	4387a783          	lw	a5,1080(a5) # 3438 <UARTN>
    1fa0:	86be                	mv	a3,a5
    1fa2:	fd842783          	lw	a5,-40(s0)
    1fa6:	00178713          	addi	a4,a5,1
    1faa:	fce42c23          	sw	a4,-40(s0)
    1fae:	00078783          	lb	a5,0(a5)
    1fb2:	07c2                	slli	a5,a5,0x10
    1fb4:	83c1                	srli	a5,a5,0x10
    1fb6:	85be                	mv	a1,a5
    1fb8:	8536                	mv	a0,a3
    1fba:	d18ff0ef          	jal	ra,14d2 <USART_SendData>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:27 (discriminator 2)
    for(i=0; i<size; i++)
    1fbe:	fec42783          	lw	a5,-20(s0)
    1fc2:	0785                	addi	a5,a5,1
    1fc4:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:27 (discriminator 1)
    1fc8:	fec42703          	lw	a4,-20(s0)
    1fcc:	fd442783          	lw	a5,-44(s0)
    1fd0:	faf74ae3          	blt	a4,a5,1f84 <_write+0x1a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:32
    }
    return size;
    1fd4:	fd442783          	lw	a5,-44(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/board.c:33
}
    1fd8:	853e                	mv	a0,a5
    1fda:	50b2                	lw	ra,44(sp)
    1fdc:	5422                	lw	s0,40(sp)
    1fde:	6145                	addi	sp,sp,48
    1fe0:	8082                	ret

00001fe2 <SetSysClock>:
SetSysClock():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:11
* Description    : Sets System clock frequency to 72MHz and configure HCLK, PCLK2 and PCLK1 prescalers.
* Input          : None
* Return         : None
*******************************************************************************************/
static void SetSysClock(void)
{
    1fe2:	1101                	addi	sp,sp,-32
    1fe4:	ce22                	sw	s0,28(sp)
    1fe6:	1000                	addi	s0,sp,32
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:12
    __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
    1fe8:	fe042623          	sw	zero,-20(s0)
    1fec:	fe042423          	sw	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:14

    RCC->CTLR |= ((uint32_t)RCC_HSEON);
    1ff0:	400217b7          	lui	a5,0x40021
    1ff4:	4394                	lw	a3,0(a5)
    1ff6:	400217b7          	lui	a5,0x40021
    1ffa:	6741                	lui	a4,0x10
    1ffc:	8f55                	or	a4,a4,a3
    1ffe:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:19 (discriminator 2)

    /* Wait till HSE is ready and if Time out is reached exit */
    do
    {
        HSEStatus = RCC->CTLR & RCC_HSERDY;
    2000:	400217b7          	lui	a5,0x40021
    2004:	4398                	lw	a4,0(a5)
    2006:	000207b7          	lui	a5,0x20
    200a:	8ff9                	and	a5,a5,a4
    200c:	fef42423          	sw	a5,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:20 (discriminator 2)
        StartUpCounter++;
    2010:	fec42783          	lw	a5,-20(s0)
    2014:	0785                	addi	a5,a5,1
    2016:	fef42623          	sw	a5,-20(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:21 (discriminator 2)
    } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
    201a:	fe842783          	lw	a5,-24(s0)
    201e:	e799                	bnez	a5,202c <SetSysClock+0x4a>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:21 (discriminator 1)
    2020:	fec42703          	lw	a4,-20(s0)
    2024:	50000793          	li	a5,1280
    2028:	fcf71ce3          	bne	a4,a5,2000 <SetSysClock+0x1e>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:23

    if ((RCC->CTLR & RCC_HSERDY) != RESET)
    202c:	400217b7          	lui	a5,0x40021
    2030:	4398                	lw	a4,0(a5)
    2032:	000207b7          	lui	a5,0x20
    2036:	8ff9                	and	a5,a5,a4
    2038:	c789                	beqz	a5,2042 <SetSysClock+0x60>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:25
    {
        HSEStatus = (uint32_t)0x01;
    203a:	4785                	li	a5,1
    203c:	fef42423          	sw	a5,-24(s0)
    2040:	a019                	j	2046 <SetSysClock+0x64>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:29
    }
    else
    {
        HSEStatus = (uint32_t)0x00;
    2042:	fe042423          	sw	zero,-24(s0)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:32
    }

    if (HSEStatus == (uint32_t)0x01)
    2046:	fe842703          	lw	a4,-24(s0)
    204a:	4785                	li	a5,1
    204c:	0cf71763          	bne	a4,a5,211a <SetSysClock+0x138>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:35
    {
        /* Enable Prefetch Buffer */
        FLASH->ACTLR |= FLASH_ACTLR_PRFTBE;
    2050:	400227b7          	lui	a5,0x40022
    2054:	4398                	lw	a4,0(a5)
    2056:	400227b7          	lui	a5,0x40022
    205a:	01076713          	ori	a4,a4,16
    205e:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:38

        /* Flash 2 wait state */
        FLASH->ACTLR &= (uint32_t)((uint32_t)~FLASH_ACTLR_LATENCY);
    2060:	400227b7          	lui	a5,0x40022
    2064:	4398                	lw	a4,0(a5)
    2066:	400227b7          	lui	a5,0x40022
    206a:	9b71                	andi	a4,a4,-4
    206c:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:39
        FLASH->ACTLR |= (uint32_t)FLASH_ACTLR_LATENCY_2;
    206e:	400227b7          	lui	a5,0x40022
    2072:	4398                	lw	a4,0(a5)
    2074:	400227b7          	lui	a5,0x40022
    2078:	00276713          	ori	a4,a4,2
    207c:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:42

        /* HCLK = SYSCLK */
        RCC->CFGR0 |= (uint32_t)RCC_HPRE_DIV1;
    207e:	40021737          	lui	a4,0x40021
    2082:	400217b7          	lui	a5,0x40021
    2086:	4358                	lw	a4,4(a4)
    2088:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:44
        /* PCLK2 = HCLK */
        RCC->CFGR0 |= (uint32_t)RCC_PPRE2_DIV1;
    208a:	40021737          	lui	a4,0x40021
    208e:	400217b7          	lui	a5,0x40021
    2092:	4358                	lw	a4,4(a4)
    2094:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:46
        /* PCLK1 = HCLK */
        RCC->CFGR0 |= (uint32_t)RCC_PPRE1_DIV1;
    2096:	40021737          	lui	a4,0x40021
    209a:	400217b7          	lui	a5,0x40021
    209e:	4358                	lw	a4,4(a4)
    20a0:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:49


        RCC->CFGR0 &= (uint32_t)((uint32_t)~(RCC_PLLSRC | RCC_PLLXTPRE |
    20a2:	400217b7          	lui	a5,0x40021
    20a6:	43d4                	lw	a3,4(a5)
    20a8:	400217b7          	lui	a5,0x40021
    20ac:	ffc10737          	lui	a4,0xffc10
    20b0:	177d                	addi	a4,a4,-1
    20b2:	8f75                	and	a4,a4,a3
    20b4:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:52
                                            RCC_PLLMULL));
        /*  PLL configuration: PLLCLK = HSE * ?  */
        RCC->CFGR0 |= (uint32_t)(RCC_PLLSRC_HSE | RCC_PLLMULL11);
    20b6:	400217b7          	lui	a5,0x40021
    20ba:	43d4                	lw	a3,4(a5)
    20bc:	400217b7          	lui	a5,0x40021
    20c0:	00250737          	lui	a4,0x250
    20c4:	8f55                	or	a4,a4,a3
    20c6:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:54
        /* Enable PLL */
        RCC->CTLR |= RCC_PLLON;
    20c8:	400217b7          	lui	a5,0x40021
    20cc:	4394                	lw	a3,0(a5)
    20ce:	400217b7          	lui	a5,0x40021
    20d2:	01000737          	lui	a4,0x1000
    20d6:	8f55                	or	a4,a4,a3
    20d8:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:56
        /* Wait till PLL is ready */
        while((RCC->CTLR & RCC_PLLRDY) == 0)
    20da:	0001                	nop
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:56 (discriminator 1)
    20dc:	400217b7          	lui	a5,0x40021
    20e0:	4398                	lw	a4,0(a5)
    20e2:	020007b7          	lui	a5,0x2000
    20e6:	8ff9                	and	a5,a5,a4
    20e8:	dbf5                	beqz	a5,20dc <SetSysClock+0xfa>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:60
        {
        }
        /* Select PLL as system clock source */
        RCC->CFGR0 &= (uint32_t)((uint32_t)~(RCC_SW));
    20ea:	400217b7          	lui	a5,0x40021
    20ee:	43d8                	lw	a4,4(a5)
    20f0:	400217b7          	lui	a5,0x40021
    20f4:	9b71                	andi	a4,a4,-4
    20f6:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:61
        RCC->CFGR0 |= (uint32_t)RCC_SW_PLL;
    20f8:	400217b7          	lui	a5,0x40021
    20fc:	43d8                	lw	a4,4(a5)
    20fe:	400217b7          	lui	a5,0x40021
    2102:	00276713          	ori	a4,a4,2
    2106:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:63
        /* Wait till PLL is used as system clock source */
        while ((RCC->CFGR0 & (uint32_t)RCC_SWS) != (uint32_t)0x08)
    2108:	0001                	nop
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:63 (discriminator 1)
    210a:	400217b7          	lui	a5,0x40021
    210e:	43dc                	lw	a5,4(a5)
    2110:	00c7f713          	andi	a4,a5,12
    2114:	47a1                	li	a5,8
    2116:	fef71ae3          	bne	a4,a5,210a <SetSysClock+0x128>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:74
        /*
         * If HSE fails to start-up, the application will have wrong clock
     * configuration. User can add here some code to deal with this error
         */
    }
}
    211a:	0001                	nop
    211c:	4472                	lw	s0,28(sp)
    211e:	6105                	addi	sp,sp,32
    2120:	8082                	ret

00002122 <SystemInit>:
SystemInit():
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:84
*                  the PLL and update the SystemCoreClock variable.
* Input          : None
* Return         : None
*******************************************************************************************/
void SystemInit (void)
{
    2122:	1141                	addi	sp,sp,-16
    2124:	c606                	sw	ra,12(sp)
    2126:	c422                	sw	s0,8(sp)
    2128:	0800                	addi	s0,sp,16
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:85
    RCC->CTLR |= (uint32_t)0x00000001;
    212a:	400217b7          	lui	a5,0x40021
    212e:	4398                	lw	a4,0(a5)
    2130:	400217b7          	lui	a5,0x40021
    2134:	00176713          	ori	a4,a4,1
    2138:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:86
    RCC->CFGR0 &= (uint32_t)0xF8FF0000;
    213a:	400217b7          	lui	a5,0x40021
    213e:	43d4                	lw	a3,4(a5)
    2140:	400217b7          	lui	a5,0x40021
    2144:	f8ff0737          	lui	a4,0xf8ff0
    2148:	8f75                	and	a4,a4,a3
    214a:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:87
    RCC->CTLR &= (uint32_t)0xFEF6FFFF;
    214c:	400217b7          	lui	a5,0x40021
    2150:	4394                	lw	a3,0(a5)
    2152:	400217b7          	lui	a5,0x40021
    2156:	fef70737          	lui	a4,0xfef70
    215a:	177d                	addi	a4,a4,-1
    215c:	8f75                	and	a4,a4,a3
    215e:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:88
    RCC->CTLR &= (uint32_t)0xFFFBFFFF;
    2160:	400217b7          	lui	a5,0x40021
    2164:	4394                	lw	a3,0(a5)
    2166:	400217b7          	lui	a5,0x40021
    216a:	fffc0737          	lui	a4,0xfffc0
    216e:	177d                	addi	a4,a4,-1
    2170:	8f75                	and	a4,a4,a3
    2172:	c398                	sw	a4,0(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:89
    RCC->CFGR0 &= (uint32_t)0xFF80FFFF;
    2174:	400217b7          	lui	a5,0x40021
    2178:	43d4                	lw	a3,4(a5)
    217a:	400217b7          	lui	a5,0x40021
    217e:	ff810737          	lui	a4,0xff810
    2182:	177d                	addi	a4,a4,-1
    2184:	8f75                	and	a4,a4,a3
    2186:	c3d8                	sw	a4,4(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:90
    RCC->INTR = 0x009F0000;
    2188:	400217b7          	lui	a5,0x40021
    218c:	009f0737          	lui	a4,0x9f0
    2190:	c798                	sw	a4,8(a5)
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:91
    SetSysClock();
    2192:	3d81                	jal	1fe2 <SetSysClock>
E:\GITKraken\Dual-core_Communication_Demo\Dual-core_Communication_Demo\SLAVE\obj/../Libraries/board/clock_config.c:92
}
    2194:	0001                	nop
    2196:	40b2                	lw	ra,12(sp)
    2198:	4422                	lw	s0,8(sp)
    219a:	0141                	addi	sp,sp,16
    219c:	8082                	ret

0000219e <__assert_func>:
__assert_func():
    219e:	80818793          	addi	a5,gp,-2040 # 20000078 <_impure_ptr>
    21a2:	439c                	lw	a5,0(a5)
    21a4:	1141                	addi	sp,sp,-16
    21a6:	8832                	mv	a6,a2
    21a8:	c606                	sw	ra,12(sp)
    21aa:	88aa                	mv	a7,a0
    21ac:	872e                	mv	a4,a1
    21ae:	47c8                	lw	a0,12(a5)
    21b0:	8636                	mv	a2,a3
    21b2:	00001797          	auipc	a5,0x1
    21b6:	29678793          	addi	a5,a5,662 # 3448 <UARTN+0x10>
    21ba:	00081763          	bnez	a6,21c8 <__assert_func+0x2a>
    21be:	00001797          	auipc	a5,0x1
    21c2:	29678793          	addi	a5,a5,662 # 3454 <UARTN+0x1c>
    21c6:	883e                	mv	a6,a5
    21c8:	86c6                	mv	a3,a7
    21ca:	00001597          	auipc	a1,0x1
    21ce:	28e58593          	addi	a1,a1,654 # 3458 <UARTN+0x20>
    21d2:	2019                	jal	21d8 <fiprintf>
    21d4:	0ad000ef          	jal	ra,2a80 <abort>

000021d8 <fiprintf>:
fprintf():
    21d8:	7139                	addi	sp,sp,-64
    21da:	d432                	sw	a2,40(sp)
    21dc:	d636                	sw	a3,44(sp)
    21de:	da3e                	sw	a5,52(sp)
    21e0:	d83a                	sw	a4,48(sp)
    21e2:	dc42                	sw	a6,56(sp)
    21e4:	de46                	sw	a7,60(sp)
    21e6:	80818793          	addi	a5,gp,-2040 # 20000078 <_impure_ptr>
    21ea:	862e                	mv	a2,a1
    21ec:	85aa                	mv	a1,a0
    21ee:	4388                	lw	a0,0(a5)
    21f0:	1034                	addi	a3,sp,40
    21f2:	ce06                	sw	ra,28(sp)
    21f4:	c636                	sw	a3,12(sp)
    21f6:	288d                	jal	2268 <_vfiprintf_r>
    21f8:	40f2                	lw	ra,28(sp)
    21fa:	6121                	addi	sp,sp,64
    21fc:	8082                	ret

000021fe <__sfputc_r>:
__sfputc_r():
    21fe:	461c                	lw	a5,8(a2)
    2200:	17fd                	addi	a5,a5,-1
    2202:	c61c                	sw	a5,8(a2)
    2204:	0007d963          	bgez	a5,2216 <__sfputc_r+0x18>
    2208:	4e18                	lw	a4,24(a2)
    220a:	00e7c563          	blt	a5,a4,2214 <__sfputc_r+0x16>
    220e:	47a9                	li	a5,10
    2210:	00f59363          	bne	a1,a5,2216 <__sfputc_r+0x18>
    2214:	a545                	j	28b4 <__swbuf_r>
    2216:	421c                	lw	a5,0(a2)
    2218:	852e                	mv	a0,a1
    221a:	00178713          	addi	a4,a5,1
    221e:	c218                	sw	a4,0(a2)
    2220:	00b78023          	sb	a1,0(a5)
    2224:	8082                	ret

00002226 <__sfputs_r>:
__sfputs_r():
    2226:	1101                	addi	sp,sp,-32
    2228:	cc22                	sw	s0,24(sp)
    222a:	ca26                	sw	s1,20(sp)
    222c:	c84a                	sw	s2,16(sp)
    222e:	c64e                	sw	s3,12(sp)
    2230:	c452                	sw	s4,8(sp)
    2232:	ce06                	sw	ra,28(sp)
    2234:	892a                	mv	s2,a0
    2236:	89ae                	mv	s3,a1
    2238:	8432                	mv	s0,a2
    223a:	00d604b3          	add	s1,a2,a3
    223e:	5a7d                	li	s4,-1
    2240:	00941463          	bne	s0,s1,2248 <__sfputs_r+0x22>
    2244:	4501                	li	a0,0
    2246:	a809                	j	2258 <__sfputs_r+0x32>
    2248:	00044583          	lbu	a1,0(s0)
    224c:	864e                	mv	a2,s3
    224e:	854a                	mv	a0,s2
    2250:	377d                	jal	21fe <__sfputc_r>
    2252:	0405                	addi	s0,s0,1
    2254:	ff4516e3          	bne	a0,s4,2240 <__sfputs_r+0x1a>
    2258:	40f2                	lw	ra,28(sp)
    225a:	4462                	lw	s0,24(sp)
    225c:	44d2                	lw	s1,20(sp)
    225e:	4942                	lw	s2,16(sp)
    2260:	49b2                	lw	s3,12(sp)
    2262:	4a22                	lw	s4,8(sp)
    2264:	6105                	addi	sp,sp,32
    2266:	8082                	ret

00002268 <_vfiprintf_r>:
_vfiprintf_r():
    2268:	7135                	addi	sp,sp,-160
    226a:	cd22                	sw	s0,152(sp)
    226c:	cb26                	sw	s1,148(sp)
    226e:	c94a                	sw	s2,144(sp)
    2270:	c74e                	sw	s3,140(sp)
    2272:	cf06                	sw	ra,156(sp)
    2274:	c552                	sw	s4,136(sp)
    2276:	c356                	sw	s5,132(sp)
    2278:	c15a                	sw	s6,128(sp)
    227a:	dede                	sw	s7,124(sp)
    227c:	dce2                	sw	s8,120(sp)
    227e:	dae6                	sw	s9,116(sp)
    2280:	89aa                	mv	s3,a0
    2282:	84ae                	mv	s1,a1
    2284:	8932                	mv	s2,a2
    2286:	8436                	mv	s0,a3
    2288:	c509                	beqz	a0,2292 <_vfiprintf_r+0x2a>
    228a:	4d1c                	lw	a5,24(a0)
    228c:	e399                	bnez	a5,2292 <_vfiprintf_r+0x2a>
    228e:	25b000ef          	jal	ra,2ce8 <__sinit>
    2292:	00001797          	auipc	a5,0x1
    2296:	25278793          	addi	a5,a5,594 # 34e4 <__sf_fake_stdin>
    229a:	0cf49c63          	bne	s1,a5,2372 <_vfiprintf_r+0x10a>
    229e:	0049a483          	lw	s1,4(s3)
    22a2:	00c4d783          	lhu	a5,12(s1)
    22a6:	8ba1                	andi	a5,a5,8
    22a8:	c7fd                	beqz	a5,2396 <_vfiprintf_r+0x12e>
    22aa:	489c                	lw	a5,16(s1)
    22ac:	c7ed                	beqz	a5,2396 <_vfiprintf_r+0x12e>
    22ae:	02000793          	li	a5,32
    22b2:	02f104a3          	sb	a5,41(sp)
    22b6:	03000793          	li	a5,48
    22ba:	d202                	sw	zero,36(sp)
    22bc:	02f10523          	sb	a5,42(sp)
    22c0:	c622                	sw	s0,12(sp)
    22c2:	02500b93          	li	s7,37
    22c6:	00001a97          	auipc	s5,0x1
    22ca:	1c2a8a93          	addi	s5,s5,450 # 3488 <UARTN+0x50>
    22ce:	4c05                	li	s8,1
    22d0:	4b29                	li	s6,10
    22d2:	844a                	mv	s0,s2
    22d4:	00044783          	lbu	a5,0(s0)
    22d8:	c399                	beqz	a5,22de <_vfiprintf_r+0x76>
    22da:	0f779063          	bne	a5,s7,23ba <_vfiprintf_r+0x152>
    22de:	41240cb3          	sub	s9,s0,s2
    22e2:	000c8d63          	beqz	s9,22fc <_vfiprintf_r+0x94>
    22e6:	86e6                	mv	a3,s9
    22e8:	864a                	mv	a2,s2
    22ea:	85a6                	mv	a1,s1
    22ec:	854e                	mv	a0,s3
    22ee:	3f25                	jal	2226 <__sfputs_r>
    22f0:	57fd                	li	a5,-1
    22f2:	1ef50863          	beq	a0,a5,24e2 <_vfiprintf_r+0x27a>
    22f6:	5692                	lw	a3,36(sp)
    22f8:	96e6                	add	a3,a3,s9
    22fa:	d236                	sw	a3,36(sp)
    22fc:	00044783          	lbu	a5,0(s0)
    2300:	1e078163          	beqz	a5,24e2 <_vfiprintf_r+0x27a>
    2304:	57fd                	li	a5,-1
    2306:	00140913          	addi	s2,s0,1
    230a:	c802                	sw	zero,16(sp)
    230c:	ce02                	sw	zero,28(sp)
    230e:	ca3e                	sw	a5,20(sp)
    2310:	cc02                	sw	zero,24(sp)
    2312:	040109a3          	sb	zero,83(sp)
    2316:	d482                	sw	zero,104(sp)
    2318:	00094583          	lbu	a1,0(s2)
    231c:	4615                	li	a2,5
    231e:	8556                	mv	a0,s5
    2320:	42b000ef          	jal	ra,2f4a <memchr>
    2324:	00190413          	addi	s0,s2,1
    2328:	47c2                	lw	a5,16(sp)
    232a:	e951                	bnez	a0,23be <_vfiprintf_r+0x156>
    232c:	0107f713          	andi	a4,a5,16
    2330:	c709                	beqz	a4,233a <_vfiprintf_r+0xd2>
    2332:	02000713          	li	a4,32
    2336:	04e109a3          	sb	a4,83(sp)
    233a:	0087f713          	andi	a4,a5,8
    233e:	c709                	beqz	a4,2348 <_vfiprintf_r+0xe0>
    2340:	02b00713          	li	a4,43
    2344:	04e109a3          	sb	a4,83(sp)
    2348:	00094683          	lbu	a3,0(s2)
    234c:	02a00713          	li	a4,42
    2350:	06e68f63          	beq	a3,a4,23ce <_vfiprintf_r+0x166>
    2354:	47f2                	lw	a5,28(sp)
    2356:	844a                	mv	s0,s2
    2358:	4681                	li	a3,0
    235a:	4625                	li	a2,9
    235c:	00044703          	lbu	a4,0(s0)
    2360:	00140593          	addi	a1,s0,1
    2364:	fd070713          	addi	a4,a4,-48 # 9effd0 <_data_lma+0x9ecaac>
    2368:	0ae67863          	bgeu	a2,a4,2418 <_vfiprintf_r+0x1b0>
    236c:	caad                	beqz	a3,23de <_vfiprintf_r+0x176>
    236e:	ce3e                	sw	a5,28(sp)
    2370:	a0bd                	j	23de <_vfiprintf_r+0x176>
    2372:	00001797          	auipc	a5,0x1
    2376:	19278793          	addi	a5,a5,402 # 3504 <__sf_fake_stdout>
    237a:	00f49563          	bne	s1,a5,2384 <_vfiprintf_r+0x11c>
    237e:	0089a483          	lw	s1,8(s3)
    2382:	b705                	j	22a2 <_vfiprintf_r+0x3a>
    2384:	00001797          	auipc	a5,0x1
    2388:	14078793          	addi	a5,a5,320 # 34c4 <__sf_fake_stderr>
    238c:	f0f49be3          	bne	s1,a5,22a2 <_vfiprintf_r+0x3a>
    2390:	00c9a483          	lw	s1,12(s3)
    2394:	b739                	j	22a2 <_vfiprintf_r+0x3a>
    2396:	85a6                	mv	a1,s1
    2398:	854e                	mv	a0,s3
    239a:	2be9                	jal	2974 <__swsetup_r>
    239c:	d909                	beqz	a0,22ae <_vfiprintf_r+0x46>
    239e:	557d                	li	a0,-1
    23a0:	40fa                	lw	ra,156(sp)
    23a2:	446a                	lw	s0,152(sp)
    23a4:	44da                	lw	s1,148(sp)
    23a6:	494a                	lw	s2,144(sp)
    23a8:	49ba                	lw	s3,140(sp)
    23aa:	4a2a                	lw	s4,136(sp)
    23ac:	4a9a                	lw	s5,132(sp)
    23ae:	4b0a                	lw	s6,128(sp)
    23b0:	5bf6                	lw	s7,124(sp)
    23b2:	5c66                	lw	s8,120(sp)
    23b4:	5cd6                	lw	s9,116(sp)
    23b6:	610d                	addi	sp,sp,160
    23b8:	8082                	ret
    23ba:	0405                	addi	s0,s0,1
    23bc:	bf21                	j	22d4 <_vfiprintf_r+0x6c>
    23be:	41550533          	sub	a0,a0,s5
    23c2:	00ac1533          	sll	a0,s8,a0
    23c6:	8fc9                	or	a5,a5,a0
    23c8:	c83e                	sw	a5,16(sp)
    23ca:	8922                	mv	s2,s0
    23cc:	b7b1                	j	2318 <_vfiprintf_r+0xb0>
    23ce:	4732                	lw	a4,12(sp)
    23d0:	00470693          	addi	a3,a4,4
    23d4:	4318                	lw	a4,0(a4)
    23d6:	c636                	sw	a3,12(sp)
    23d8:	02074963          	bltz	a4,240a <_vfiprintf_r+0x1a2>
    23dc:	ce3a                	sw	a4,28(sp)
    23de:	00044703          	lbu	a4,0(s0)
    23e2:	02e00793          	li	a5,46
    23e6:	04f71f63          	bne	a4,a5,2444 <_vfiprintf_r+0x1dc>
    23ea:	00144703          	lbu	a4,1(s0)
    23ee:	02a00793          	li	a5,42
    23f2:	02f71b63          	bne	a4,a5,2428 <_vfiprintf_r+0x1c0>
    23f6:	47b2                	lw	a5,12(sp)
    23f8:	0409                	addi	s0,s0,2
    23fa:	00478713          	addi	a4,a5,4
    23fe:	439c                	lw	a5,0(a5)
    2400:	c63a                	sw	a4,12(sp)
    2402:	0207c163          	bltz	a5,2424 <_vfiprintf_r+0x1bc>
    2406:	ca3e                	sw	a5,20(sp)
    2408:	a835                	j	2444 <_vfiprintf_r+0x1dc>
    240a:	40e00733          	neg	a4,a4
    240e:	0027e793          	ori	a5,a5,2
    2412:	ce3a                	sw	a4,28(sp)
    2414:	c83e                	sw	a5,16(sp)
    2416:	b7e1                	j	23de <_vfiprintf_r+0x176>
    2418:	036787b3          	mul	a5,a5,s6
    241c:	4685                	li	a3,1
    241e:	842e                	mv	s0,a1
    2420:	97ba                	add	a5,a5,a4
    2422:	bf2d                	j	235c <_vfiprintf_r+0xf4>
    2424:	57fd                	li	a5,-1
    2426:	b7c5                	j	2406 <_vfiprintf_r+0x19e>
    2428:	0405                	addi	s0,s0,1
    242a:	ca02                	sw	zero,20(sp)
    242c:	4681                	li	a3,0
    242e:	4781                	li	a5,0
    2430:	4625                	li	a2,9
    2432:	00044703          	lbu	a4,0(s0)
    2436:	00140593          	addi	a1,s0,1
    243a:	fd070713          	addi	a4,a4,-48
    243e:	06e67863          	bgeu	a2,a4,24ae <_vfiprintf_r+0x246>
    2442:	f2f1                	bnez	a3,2406 <_vfiprintf_r+0x19e>
    2444:	00044583          	lbu	a1,0(s0)
    2448:	460d                	li	a2,3
    244a:	00001517          	auipc	a0,0x1
    244e:	04650513          	addi	a0,a0,70 # 3490 <UARTN+0x58>
    2452:	2f9000ef          	jal	ra,2f4a <memchr>
    2456:	cd11                	beqz	a0,2472 <_vfiprintf_r+0x20a>
    2458:	00001797          	auipc	a5,0x1
    245c:	03878793          	addi	a5,a5,56 # 3490 <UARTN+0x58>
    2460:	8d1d                	sub	a0,a0,a5
    2462:	04000793          	li	a5,64
    2466:	00a797b3          	sll	a5,a5,a0
    246a:	4542                	lw	a0,16(sp)
    246c:	0405                	addi	s0,s0,1
    246e:	8d5d                	or	a0,a0,a5
    2470:	c82a                	sw	a0,16(sp)
    2472:	00044583          	lbu	a1,0(s0)
    2476:	4619                	li	a2,6
    2478:	00001517          	auipc	a0,0x1
    247c:	01c50513          	addi	a0,a0,28 # 3494 <UARTN+0x5c>
    2480:	00140913          	addi	s2,s0,1
    2484:	02b10423          	sb	a1,40(sp)
    2488:	2c3000ef          	jal	ra,2f4a <memchr>
    248c:	c13d                	beqz	a0,24f2 <_vfiprintf_r+0x28a>
    248e:	ffffe797          	auipc	a5,0xffffe
    2492:	b7278793          	addi	a5,a5,-1166 # 0 <_sinit>
    2496:	e795                	bnez	a5,24c2 <_vfiprintf_r+0x25a>
    2498:	4742                	lw	a4,16(sp)
    249a:	47b2                	lw	a5,12(sp)
    249c:	10077713          	andi	a4,a4,256
    24a0:	cf09                	beqz	a4,24ba <_vfiprintf_r+0x252>
    24a2:	0791                	addi	a5,a5,4
    24a4:	c63e                	sw	a5,12(sp)
    24a6:	5792                	lw	a5,36(sp)
    24a8:	97d2                	add	a5,a5,s4
    24aa:	d23e                	sw	a5,36(sp)
    24ac:	b51d                	j	22d2 <_vfiprintf_r+0x6a>
    24ae:	036787b3          	mul	a5,a5,s6
    24b2:	4685                	li	a3,1
    24b4:	842e                	mv	s0,a1
    24b6:	97ba                	add	a5,a5,a4
    24b8:	bfad                	j	2432 <_vfiprintf_r+0x1ca>
    24ba:	079d                	addi	a5,a5,7
    24bc:	9be1                	andi	a5,a5,-8
    24be:	07a1                	addi	a5,a5,8
    24c0:	b7d5                	j	24a4 <_vfiprintf_r+0x23c>
    24c2:	0078                	addi	a4,sp,12
    24c4:	00000697          	auipc	a3,0x0
    24c8:	d6268693          	addi	a3,a3,-670 # 2226 <__sfputs_r>
    24cc:	8626                	mv	a2,s1
    24ce:	080c                	addi	a1,sp,16
    24d0:	854e                	mv	a0,s3
    24d2:	00000097          	auipc	ra,0x0
    24d6:	000000e7          	jalr	zero # 0 <_sinit>
    24da:	57fd                	li	a5,-1
    24dc:	8a2a                	mv	s4,a0
    24de:	fcf514e3          	bne	a0,a5,24a6 <_vfiprintf_r+0x23e>
    24e2:	00c4d783          	lhu	a5,12(s1)
    24e6:	0407f793          	andi	a5,a5,64
    24ea:	ea079ae3          	bnez	a5,239e <_vfiprintf_r+0x136>
    24ee:	5512                	lw	a0,36(sp)
    24f0:	bd45                	j	23a0 <_vfiprintf_r+0x138>
    24f2:	0078                	addi	a4,sp,12
    24f4:	00000697          	auipc	a3,0x0
    24f8:	d3268693          	addi	a3,a3,-718 # 2226 <__sfputs_r>
    24fc:	8626                	mv	a2,s1
    24fe:	080c                	addi	a1,sp,16
    2500:	854e                	mv	a0,s3
    2502:	2a01                	jal	2612 <_printf_i>
    2504:	bfd9                	j	24da <_vfiprintf_r+0x272>

00002506 <_printf_common>:
_printf_common():
    2506:	7179                	addi	sp,sp,-48
    2508:	ca56                	sw	s5,20(sp)
    250a:	499c                	lw	a5,16(a1)
    250c:	8aba                	mv	s5,a4
    250e:	4598                	lw	a4,8(a1)
    2510:	d422                	sw	s0,40(sp)
    2512:	d226                	sw	s1,36(sp)
    2514:	ce4e                	sw	s3,28(sp)
    2516:	cc52                	sw	s4,24(sp)
    2518:	d606                	sw	ra,44(sp)
    251a:	d04a                	sw	s2,32(sp)
    251c:	c85a                	sw	s6,16(sp)
    251e:	c65e                	sw	s7,12(sp)
    2520:	89aa                	mv	s3,a0
    2522:	842e                	mv	s0,a1
    2524:	84b2                	mv	s1,a2
    2526:	8a36                	mv	s4,a3
    2528:	00e7d363          	bge	a5,a4,252e <_printf_common+0x28>
    252c:	87ba                	mv	a5,a4
    252e:	c09c                	sw	a5,0(s1)
    2530:	04344703          	lbu	a4,67(s0)
    2534:	c319                	beqz	a4,253a <_printf_common+0x34>
    2536:	0785                	addi	a5,a5,1
    2538:	c09c                	sw	a5,0(s1)
    253a:	401c                	lw	a5,0(s0)
    253c:	0207f793          	andi	a5,a5,32
    2540:	c781                	beqz	a5,2548 <_printf_common+0x42>
    2542:	409c                	lw	a5,0(s1)
    2544:	0789                	addi	a5,a5,2
    2546:	c09c                	sw	a5,0(s1)
    2548:	00042903          	lw	s2,0(s0)
    254c:	00697913          	andi	s2,s2,6
    2550:	00091a63          	bnez	s2,2564 <_printf_common+0x5e>
    2554:	01940b13          	addi	s6,s0,25
    2558:	5bfd                	li	s7,-1
    255a:	445c                	lw	a5,12(s0)
    255c:	4098                	lw	a4,0(s1)
    255e:	8f99                	sub	a5,a5,a4
    2560:	04f94c63          	blt	s2,a5,25b8 <_printf_common+0xb2>
    2564:	401c                	lw	a5,0(s0)
    2566:	04344683          	lbu	a3,67(s0)
    256a:	0207f793          	andi	a5,a5,32
    256e:	00d036b3          	snez	a3,a3
    2572:	eba5                	bnez	a5,25e2 <_printf_common+0xdc>
    2574:	04340613          	addi	a2,s0,67
    2578:	85d2                	mv	a1,s4
    257a:	854e                	mv	a0,s3
    257c:	9a82                	jalr	s5
    257e:	57fd                	li	a5,-1
    2580:	04f50363          	beq	a0,a5,25c6 <_printf_common+0xc0>
    2584:	401c                	lw	a5,0(s0)
    2586:	4611                	li	a2,4
    2588:	4098                	lw	a4,0(s1)
    258a:	8b99                	andi	a5,a5,6
    258c:	4454                	lw	a3,12(s0)
    258e:	4481                	li	s1,0
    2590:	00c79763          	bne	a5,a2,259e <_printf_common+0x98>
    2594:	40e684b3          	sub	s1,a3,a4
    2598:	0004d363          	bgez	s1,259e <_printf_common+0x98>
    259c:	4481                	li	s1,0
    259e:	441c                	lw	a5,8(s0)
    25a0:	4818                	lw	a4,16(s0)
    25a2:	00f75463          	bge	a4,a5,25aa <_printf_common+0xa4>
    25a6:	8f99                	sub	a5,a5,a4
    25a8:	94be                	add	s1,s1,a5
    25aa:	4901                	li	s2,0
    25ac:	0469                	addi	s0,s0,26
    25ae:	5b7d                	li	s6,-1
    25b0:	05249863          	bne	s1,s2,2600 <_printf_common+0xfa>
    25b4:	4501                	li	a0,0
    25b6:	a809                	j	25c8 <_printf_common+0xc2>
    25b8:	4685                	li	a3,1
    25ba:	865a                	mv	a2,s6
    25bc:	85d2                	mv	a1,s4
    25be:	854e                	mv	a0,s3
    25c0:	9a82                	jalr	s5
    25c2:	01751e63          	bne	a0,s7,25de <_printf_common+0xd8>
    25c6:	557d                	li	a0,-1
    25c8:	50b2                	lw	ra,44(sp)
    25ca:	5422                	lw	s0,40(sp)
    25cc:	5492                	lw	s1,36(sp)
    25ce:	5902                	lw	s2,32(sp)
    25d0:	49f2                	lw	s3,28(sp)
    25d2:	4a62                	lw	s4,24(sp)
    25d4:	4ad2                	lw	s5,20(sp)
    25d6:	4b42                	lw	s6,16(sp)
    25d8:	4bb2                	lw	s7,12(sp)
    25da:	6145                	addi	sp,sp,48
    25dc:	8082                	ret
    25de:	0905                	addi	s2,s2,1
    25e0:	bfad                	j	255a <_printf_common+0x54>
    25e2:	00d40733          	add	a4,s0,a3
    25e6:	03000613          	li	a2,48
    25ea:	04c701a3          	sb	a2,67(a4)
    25ee:	04544703          	lbu	a4,69(s0)
    25f2:	00168793          	addi	a5,a3,1
    25f6:	97a2                	add	a5,a5,s0
    25f8:	0689                	addi	a3,a3,2
    25fa:	04e781a3          	sb	a4,67(a5)
    25fe:	bf9d                	j	2574 <_printf_common+0x6e>
    2600:	4685                	li	a3,1
    2602:	8622                	mv	a2,s0
    2604:	85d2                	mv	a1,s4
    2606:	854e                	mv	a0,s3
    2608:	9a82                	jalr	s5
    260a:	fb650ee3          	beq	a0,s6,25c6 <_printf_common+0xc0>
    260e:	0905                	addi	s2,s2,1
    2610:	b745                	j	25b0 <_printf_common+0xaa>

00002612 <_printf_i>:
_printf_i():
    2612:	7179                	addi	sp,sp,-48
    2614:	d422                	sw	s0,40(sp)
    2616:	d226                	sw	s1,36(sp)
    2618:	d04a                	sw	s2,32(sp)
    261a:	ce4e                	sw	s3,28(sp)
    261c:	d606                	sw	ra,44(sp)
    261e:	cc52                	sw	s4,24(sp)
    2620:	ca56                	sw	s5,20(sp)
    2622:	c85a                	sw	s6,16(sp)
    2624:	89b6                	mv	s3,a3
    2626:	0185c683          	lbu	a3,24(a1)
    262a:	06e00793          	li	a5,110
    262e:	8932                	mv	s2,a2
    2630:	84aa                	mv	s1,a0
    2632:	842e                	mv	s0,a1
    2634:	04358613          	addi	a2,a1,67
    2638:	1ef68063          	beq	a3,a5,2818 <_printf_i+0x206>
    263c:	06d7e263          	bltu	a5,a3,26a0 <_printf_i+0x8e>
    2640:	06300793          	li	a5,99
    2644:	0af68263          	beq	a3,a5,26e8 <_printf_i+0xd6>
    2648:	00d7ed63          	bltu	a5,a3,2662 <_printf_i+0x50>
    264c:	1e068a63          	beqz	a3,2840 <_printf_i+0x22e>
    2650:	05800793          	li	a5,88
    2654:	16f68663          	beq	a3,a5,27c0 <_printf_i+0x1ae>
    2658:	04240a93          	addi	s5,s0,66
    265c:	04d40123          	sb	a3,66(s0)
    2660:	a869                	j	26fa <_printf_i+0xe8>
    2662:	06400793          	li	a5,100
    2666:	00f68663          	beq	a3,a5,2672 <_printf_i+0x60>
    266a:	06900793          	li	a5,105
    266e:	fef695e3          	bne	a3,a5,2658 <_printf_i+0x46>
    2672:	401c                	lw	a5,0(s0)
    2674:	4308                	lw	a0,0(a4)
    2676:	0807f693          	andi	a3,a5,128
    267a:	00450593          	addi	a1,a0,4
    267e:	c2c1                	beqz	a3,26fe <_printf_i+0xec>
    2680:	411c                	lw	a5,0(a0)
    2682:	c30c                	sw	a1,0(a4)
    2684:	0007d863          	bgez	a5,2694 <_printf_i+0x82>
    2688:	02d00713          	li	a4,45
    268c:	40f007b3          	neg	a5,a5
    2690:	04e401a3          	sb	a4,67(s0)
    2694:	00001697          	auipc	a3,0x1
    2698:	e0868693          	addi	a3,a3,-504 # 349c <UARTN+0x64>
    269c:	4729                	li	a4,10
    269e:	a065                	j	2746 <_printf_i+0x134>
    26a0:	07300793          	li	a5,115
    26a4:	1af68263          	beq	a3,a5,2848 <_printf_i+0x236>
    26a8:	00d7ef63          	bltu	a5,a3,26c6 <_printf_i+0xb4>
    26ac:	06f00793          	li	a5,111
    26b0:	04f68f63          	beq	a3,a5,270e <_printf_i+0xfc>
    26b4:	07000793          	li	a5,112
    26b8:	faf690e3          	bne	a3,a5,2658 <_printf_i+0x46>
    26bc:	419c                	lw	a5,0(a1)
    26be:	0207e793          	ori	a5,a5,32
    26c2:	c19c                	sw	a5,0(a1)
    26c4:	a809                	j	26d6 <_printf_i+0xc4>
    26c6:	07500793          	li	a5,117
    26ca:	04f68263          	beq	a3,a5,270e <_printf_i+0xfc>
    26ce:	07800793          	li	a5,120
    26d2:	f8f693e3          	bne	a3,a5,2658 <_printf_i+0x46>
    26d6:	07800793          	li	a5,120
    26da:	04f402a3          	sb	a5,69(s0)
    26de:	00001697          	auipc	a3,0x1
    26e2:	dd268693          	addi	a3,a3,-558 # 34b0 <UARTN+0x78>
    26e6:	a0dd                	j	27cc <_printf_i+0x1ba>
    26e8:	431c                	lw	a5,0(a4)
    26ea:	04258a93          	addi	s5,a1,66
    26ee:	00478693          	addi	a3,a5,4
    26f2:	439c                	lw	a5,0(a5)
    26f4:	c314                	sw	a3,0(a4)
    26f6:	04f58123          	sb	a5,66(a1)
    26fa:	4785                	li	a5,1
    26fc:	a2ad                	j	2866 <_printf_i+0x254>
    26fe:	0407f693          	andi	a3,a5,64
    2702:	411c                	lw	a5,0(a0)
    2704:	c30c                	sw	a1,0(a4)
    2706:	debd                	beqz	a3,2684 <_printf_i+0x72>
    2708:	07c2                	slli	a5,a5,0x10
    270a:	87c1                	srai	a5,a5,0x10
    270c:	bfa5                	j	2684 <_printf_i+0x72>
    270e:	400c                	lw	a1,0(s0)
    2710:	431c                	lw	a5,0(a4)
    2712:	0805f813          	andi	a6,a1,128
    2716:	00478513          	addi	a0,a5,4
    271a:	00080563          	beqz	a6,2724 <_printf_i+0x112>
    271e:	c308                	sw	a0,0(a4)
    2720:	439c                	lw	a5,0(a5)
    2722:	a039                	j	2730 <_printf_i+0x11e>
    2724:	0405f593          	andi	a1,a1,64
    2728:	c308                	sw	a0,0(a4)
    272a:	d9fd                	beqz	a1,2720 <_printf_i+0x10e>
    272c:	0007d783          	lhu	a5,0(a5)
    2730:	06f00713          	li	a4,111
    2734:	0ce68a63          	beq	a3,a4,2808 <_printf_i+0x1f6>
    2738:	00001697          	auipc	a3,0x1
    273c:	d6468693          	addi	a3,a3,-668 # 349c <UARTN+0x64>
    2740:	4729                	li	a4,10
    2742:	040401a3          	sb	zero,67(s0)
    2746:	404c                	lw	a1,4(s0)
    2748:	c40c                	sw	a1,8(s0)
    274a:	0005c563          	bltz	a1,2754 <_printf_i+0x142>
    274e:	4008                	lw	a0,0(s0)
    2750:	996d                	andi	a0,a0,-5
    2752:	c008                	sw	a0,0(s0)
    2754:	e399                	bnez	a5,275a <_printf_i+0x148>
    2756:	8ab2                	mv	s5,a2
    2758:	cd91                	beqz	a1,2774 <_printf_i+0x162>
    275a:	8ab2                	mv	s5,a2
    275c:	02e7f5b3          	remu	a1,a5,a4
    2760:	1afd                	addi	s5,s5,-1
    2762:	95b6                	add	a1,a1,a3
    2764:	0005c583          	lbu	a1,0(a1)
    2768:	00ba8023          	sb	a1,0(s5)
    276c:	02e7d5b3          	divu	a1,a5,a4
    2770:	0ae7f263          	bgeu	a5,a4,2814 <_printf_i+0x202>
    2774:	47a1                	li	a5,8
    2776:	00f71e63          	bne	a4,a5,2792 <_printf_i+0x180>
    277a:	401c                	lw	a5,0(s0)
    277c:	8b85                	andi	a5,a5,1
    277e:	cb91                	beqz	a5,2792 <_printf_i+0x180>
    2780:	4058                	lw	a4,4(s0)
    2782:	481c                	lw	a5,16(s0)
    2784:	00e7c763          	blt	a5,a4,2792 <_printf_i+0x180>
    2788:	03000793          	li	a5,48
    278c:	fefa8fa3          	sb	a5,-1(s5)
    2790:	1afd                	addi	s5,s5,-1
    2792:	41560633          	sub	a2,a2,s5
    2796:	c810                	sw	a2,16(s0)
    2798:	874e                	mv	a4,s3
    279a:	86ca                	mv	a3,s2
    279c:	0070                	addi	a2,sp,12
    279e:	85a2                	mv	a1,s0
    27a0:	8526                	mv	a0,s1
    27a2:	3395                	jal	2506 <_printf_common>
    27a4:	5a7d                	li	s4,-1
    27a6:	0d451463          	bne	a0,s4,286e <_printf_i+0x25c>
    27aa:	557d                	li	a0,-1
    27ac:	50b2                	lw	ra,44(sp)
    27ae:	5422                	lw	s0,40(sp)
    27b0:	5492                	lw	s1,36(sp)
    27b2:	5902                	lw	s2,32(sp)
    27b4:	49f2                	lw	s3,28(sp)
    27b6:	4a62                	lw	s4,24(sp)
    27b8:	4ad2                	lw	s5,20(sp)
    27ba:	4b42                	lw	s6,16(sp)
    27bc:	6145                	addi	sp,sp,48
    27be:	8082                	ret
    27c0:	04d582a3          	sb	a3,69(a1)
    27c4:	00001697          	auipc	a3,0x1
    27c8:	cd868693          	addi	a3,a3,-808 # 349c <UARTN+0x64>
    27cc:	400c                	lw	a1,0(s0)
    27ce:	4308                	lw	a0,0(a4)
    27d0:	0805f813          	andi	a6,a1,128
    27d4:	411c                	lw	a5,0(a0)
    27d6:	0511                	addi	a0,a0,4
    27d8:	02080063          	beqz	a6,27f8 <_printf_i+0x1e6>
    27dc:	c308                	sw	a0,0(a4)
    27de:	0015f713          	andi	a4,a1,1
    27e2:	c701                	beqz	a4,27ea <_printf_i+0x1d8>
    27e4:	0205e593          	ori	a1,a1,32
    27e8:	c00c                	sw	a1,0(s0)
    27ea:	4741                	li	a4,16
    27ec:	fbb9                	bnez	a5,2742 <_printf_i+0x130>
    27ee:	400c                	lw	a1,0(s0)
    27f0:	fdf5f593          	andi	a1,a1,-33
    27f4:	c00c                	sw	a1,0(s0)
    27f6:	b7b1                	j	2742 <_printf_i+0x130>
    27f8:	0405f813          	andi	a6,a1,64
    27fc:	c308                	sw	a0,0(a4)
    27fe:	fe0800e3          	beqz	a6,27de <_printf_i+0x1cc>
    2802:	07c2                	slli	a5,a5,0x10
    2804:	83c1                	srli	a5,a5,0x10
    2806:	bfe1                	j	27de <_printf_i+0x1cc>
    2808:	00001697          	auipc	a3,0x1
    280c:	c9468693          	addi	a3,a3,-876 # 349c <UARTN+0x64>
    2810:	4721                	li	a4,8
    2812:	bf05                	j	2742 <_printf_i+0x130>
    2814:	87ae                	mv	a5,a1
    2816:	b799                	j	275c <_printf_i+0x14a>
    2818:	4194                	lw	a3,0(a1)
    281a:	431c                	lw	a5,0(a4)
    281c:	49cc                	lw	a1,20(a1)
    281e:	0806f813          	andi	a6,a3,128
    2822:	00478513          	addi	a0,a5,4
    2826:	00080663          	beqz	a6,2832 <_printf_i+0x220>
    282a:	c308                	sw	a0,0(a4)
    282c:	439c                	lw	a5,0(a5)
    282e:	c38c                	sw	a1,0(a5)
    2830:	a801                	j	2840 <_printf_i+0x22e>
    2832:	c308                	sw	a0,0(a4)
    2834:	0406f693          	andi	a3,a3,64
    2838:	439c                	lw	a5,0(a5)
    283a:	daf5                	beqz	a3,282e <_printf_i+0x21c>
    283c:	00b79023          	sh	a1,0(a5)
    2840:	00042823          	sw	zero,16(s0)
    2844:	8ab2                	mv	s5,a2
    2846:	bf89                	j	2798 <_printf_i+0x186>
    2848:	431c                	lw	a5,0(a4)
    284a:	41d0                	lw	a2,4(a1)
    284c:	4581                	li	a1,0
    284e:	00478693          	addi	a3,a5,4
    2852:	c314                	sw	a3,0(a4)
    2854:	0007aa83          	lw	s5,0(a5)
    2858:	8556                	mv	a0,s5
    285a:	2dc5                	jal	2f4a <memchr>
    285c:	c501                	beqz	a0,2864 <_printf_i+0x252>
    285e:	41550533          	sub	a0,a0,s5
    2862:	c048                	sw	a0,4(s0)
    2864:	405c                	lw	a5,4(s0)
    2866:	c81c                	sw	a5,16(s0)
    2868:	040401a3          	sb	zero,67(s0)
    286c:	b735                	j	2798 <_printf_i+0x186>
    286e:	4814                	lw	a3,16(s0)
    2870:	8656                	mv	a2,s5
    2872:	85ca                	mv	a1,s2
    2874:	8526                	mv	a0,s1
    2876:	9982                	jalr	s3
    2878:	f34509e3          	beq	a0,s4,27aa <_printf_i+0x198>
    287c:	401c                	lw	a5,0(s0)
    287e:	8b89                	andi	a5,a5,2
    2880:	e78d                	bnez	a5,28aa <_printf_i+0x298>
    2882:	47b2                	lw	a5,12(sp)
    2884:	4448                	lw	a0,12(s0)
    2886:	f2f553e3          	bge	a0,a5,27ac <_printf_i+0x19a>
    288a:	853e                	mv	a0,a5
    288c:	b705                	j	27ac <_printf_i+0x19a>
    288e:	4685                	li	a3,1
    2890:	8656                	mv	a2,s5
    2892:	85ca                	mv	a1,s2
    2894:	8526                	mv	a0,s1
    2896:	9982                	jalr	s3
    2898:	f16509e3          	beq	a0,s6,27aa <_printf_i+0x198>
    289c:	0a05                	addi	s4,s4,1
    289e:	445c                	lw	a5,12(s0)
    28a0:	4732                	lw	a4,12(sp)
    28a2:	8f99                	sub	a5,a5,a4
    28a4:	fefa45e3          	blt	s4,a5,288e <_printf_i+0x27c>
    28a8:	bfe9                	j	2882 <_printf_i+0x270>
    28aa:	4a01                	li	s4,0
    28ac:	01940a93          	addi	s5,s0,25
    28b0:	5b7d                	li	s6,-1
    28b2:	b7f5                	j	289e <_printf_i+0x28c>

000028b4 <__swbuf_r>:
__swbuf_r():
    28b4:	1101                	addi	sp,sp,-32
    28b6:	cc22                	sw	s0,24(sp)
    28b8:	ca26                	sw	s1,20(sp)
    28ba:	c84a                	sw	s2,16(sp)
    28bc:	ce06                	sw	ra,28(sp)
    28be:	c64e                	sw	s3,12(sp)
    28c0:	84aa                	mv	s1,a0
    28c2:	892e                	mv	s2,a1
    28c4:	8432                	mv	s0,a2
    28c6:	c501                	beqz	a0,28ce <__swbuf_r+0x1a>
    28c8:	4d1c                	lw	a5,24(a0)
    28ca:	e391                	bnez	a5,28ce <__swbuf_r+0x1a>
    28cc:	2931                	jal	2ce8 <__sinit>
    28ce:	00001797          	auipc	a5,0x1
    28d2:	c1678793          	addi	a5,a5,-1002 # 34e4 <__sf_fake_stdin>
    28d6:	06f41963          	bne	s0,a5,2948 <__swbuf_r+0x94>
    28da:	40c0                	lw	s0,4(s1)
    28dc:	4c1c                	lw	a5,24(s0)
    28de:	c41c                	sw	a5,8(s0)
    28e0:	00c45783          	lhu	a5,12(s0)
    28e4:	8ba1                	andi	a5,a5,8
    28e6:	c3c9                	beqz	a5,2968 <__swbuf_r+0xb4>
    28e8:	481c                	lw	a5,16(s0)
    28ea:	cfbd                	beqz	a5,2968 <__swbuf_r+0xb4>
    28ec:	481c                	lw	a5,16(s0)
    28ee:	4008                	lw	a0,0(s0)
    28f0:	0ff97993          	andi	s3,s2,255
    28f4:	0ff97913          	andi	s2,s2,255
    28f8:	8d1d                	sub	a0,a0,a5
    28fa:	485c                	lw	a5,20(s0)
    28fc:	00f54663          	blt	a0,a5,2908 <__swbuf_r+0x54>
    2900:	85a2                	mv	a1,s0
    2902:	8526                	mv	a0,s1
    2904:	24d9                	jal	2bca <_fflush_r>
    2906:	e52d                	bnez	a0,2970 <__swbuf_r+0xbc>
    2908:	441c                	lw	a5,8(s0)
    290a:	0505                	addi	a0,a0,1
    290c:	17fd                	addi	a5,a5,-1
    290e:	c41c                	sw	a5,8(s0)
    2910:	401c                	lw	a5,0(s0)
    2912:	00178713          	addi	a4,a5,1
    2916:	c018                	sw	a4,0(s0)
    2918:	01378023          	sb	s3,0(a5)
    291c:	485c                	lw	a5,20(s0)
    291e:	00a78963          	beq	a5,a0,2930 <__swbuf_r+0x7c>
    2922:	00c45783          	lhu	a5,12(s0)
    2926:	8b85                	andi	a5,a5,1
    2928:	cb81                	beqz	a5,2938 <__swbuf_r+0x84>
    292a:	47a9                	li	a5,10
    292c:	00f91663          	bne	s2,a5,2938 <__swbuf_r+0x84>
    2930:	85a2                	mv	a1,s0
    2932:	8526                	mv	a0,s1
    2934:	2c59                	jal	2bca <_fflush_r>
    2936:	ed0d                	bnez	a0,2970 <__swbuf_r+0xbc>
    2938:	40f2                	lw	ra,28(sp)
    293a:	4462                	lw	s0,24(sp)
    293c:	854a                	mv	a0,s2
    293e:	44d2                	lw	s1,20(sp)
    2940:	4942                	lw	s2,16(sp)
    2942:	49b2                	lw	s3,12(sp)
    2944:	6105                	addi	sp,sp,32
    2946:	8082                	ret
    2948:	00001797          	auipc	a5,0x1
    294c:	bbc78793          	addi	a5,a5,-1092 # 3504 <__sf_fake_stdout>
    2950:	00f41463          	bne	s0,a5,2958 <__swbuf_r+0xa4>
    2954:	4480                	lw	s0,8(s1)
    2956:	b759                	j	28dc <__swbuf_r+0x28>
    2958:	00001797          	auipc	a5,0x1
    295c:	b6c78793          	addi	a5,a5,-1172 # 34c4 <__sf_fake_stderr>
    2960:	f6f41ee3          	bne	s0,a5,28dc <__swbuf_r+0x28>
    2964:	44c0                	lw	s0,12(s1)
    2966:	bf9d                	j	28dc <__swbuf_r+0x28>
    2968:	85a2                	mv	a1,s0
    296a:	8526                	mv	a0,s1
    296c:	2021                	jal	2974 <__swsetup_r>
    296e:	dd3d                	beqz	a0,28ec <__swbuf_r+0x38>
    2970:	597d                	li	s2,-1
    2972:	b7d9                	j	2938 <__swbuf_r+0x84>

00002974 <__swsetup_r>:
__swsetup_r():
    2974:	1141                	addi	sp,sp,-16
    2976:	80818793          	addi	a5,gp,-2040 # 20000078 <_impure_ptr>
    297a:	c226                	sw	s1,4(sp)
    297c:	4384                	lw	s1,0(a5)
    297e:	c422                	sw	s0,8(sp)
    2980:	c04a                	sw	s2,0(sp)
    2982:	c606                	sw	ra,12(sp)
    2984:	892a                	mv	s2,a0
    2986:	842e                	mv	s0,a1
    2988:	c489                	beqz	s1,2992 <__swsetup_r+0x1e>
    298a:	4c9c                	lw	a5,24(s1)
    298c:	e399                	bnez	a5,2992 <__swsetup_r+0x1e>
    298e:	8526                	mv	a0,s1
    2990:	2ea1                	jal	2ce8 <__sinit>
    2992:	00001797          	auipc	a5,0x1
    2996:	b5278793          	addi	a5,a5,-1198 # 34e4 <__sf_fake_stdin>
    299a:	02f41c63          	bne	s0,a5,29d2 <__swsetup_r+0x5e>
    299e:	40c0                	lw	s0,4(s1)
    29a0:	00c41703          	lh	a4,12(s0)
    29a4:	01071793          	slli	a5,a4,0x10
    29a8:	83c1                	srli	a5,a5,0x10
    29aa:	0087f693          	andi	a3,a5,8
    29ae:	eeb5                	bnez	a3,2a2a <__swsetup_r+0xb6>
    29b0:	0107f693          	andi	a3,a5,16
    29b4:	ee9d                	bnez	a3,29f2 <__swsetup_r+0x7e>
    29b6:	47a5                	li	a5,9
    29b8:	00f92023          	sw	a5,0(s2)
    29bc:	04076713          	ori	a4,a4,64
    29c0:	00e41623          	sh	a4,12(s0)
    29c4:	557d                	li	a0,-1
    29c6:	40b2                	lw	ra,12(sp)
    29c8:	4422                	lw	s0,8(sp)
    29ca:	4492                	lw	s1,4(sp)
    29cc:	4902                	lw	s2,0(sp)
    29ce:	0141                	addi	sp,sp,16
    29d0:	8082                	ret
    29d2:	00001797          	auipc	a5,0x1
    29d6:	b3278793          	addi	a5,a5,-1230 # 3504 <__sf_fake_stdout>
    29da:	00f41463          	bne	s0,a5,29e2 <__swsetup_r+0x6e>
    29de:	4480                	lw	s0,8(s1)
    29e0:	b7c1                	j	29a0 <__swsetup_r+0x2c>
    29e2:	00001797          	auipc	a5,0x1
    29e6:	ae278793          	addi	a5,a5,-1310 # 34c4 <__sf_fake_stderr>
    29ea:	faf41be3          	bne	s0,a5,29a0 <__swsetup_r+0x2c>
    29ee:	44c0                	lw	s0,12(s1)
    29f0:	bf45                	j	29a0 <__swsetup_r+0x2c>
    29f2:	8b91                	andi	a5,a5,4
    29f4:	c78d                	beqz	a5,2a1e <__swsetup_r+0xaa>
    29f6:	584c                	lw	a1,52(s0)
    29f8:	c989                	beqz	a1,2a0a <__swsetup_r+0x96>
    29fa:	04440793          	addi	a5,s0,68
    29fe:	00f58463          	beq	a1,a5,2a06 <__swsetup_r+0x92>
    2a02:	854a                	mv	a0,s2
    2a04:	2385                	jal	2f64 <_free_r>
    2a06:	02042a23          	sw	zero,52(s0)
    2a0a:	00c45783          	lhu	a5,12(s0)
    2a0e:	00042223          	sw	zero,4(s0)
    2a12:	fdb7f793          	andi	a5,a5,-37
    2a16:	00f41623          	sh	a5,12(s0)
    2a1a:	481c                	lw	a5,16(s0)
    2a1c:	c01c                	sw	a5,0(s0)
    2a1e:	00c45783          	lhu	a5,12(s0)
    2a22:	0087e793          	ori	a5,a5,8
    2a26:	00f41623          	sh	a5,12(s0)
    2a2a:	481c                	lw	a5,16(s0)
    2a2c:	ef81                	bnez	a5,2a44 <__swsetup_r+0xd0>
    2a2e:	00c45783          	lhu	a5,12(s0)
    2a32:	20000713          	li	a4,512
    2a36:	2807f793          	andi	a5,a5,640
    2a3a:	00e78563          	beq	a5,a4,2a44 <__swsetup_r+0xd0>
    2a3e:	85a2                	mv	a1,s0
    2a40:	854a                	mv	a0,s2
    2a42:	21b5                	jal	2eae <__smakebuf_r>
    2a44:	00c45783          	lhu	a5,12(s0)
    2a48:	0017f713          	andi	a4,a5,1
    2a4c:	c705                	beqz	a4,2a74 <__swsetup_r+0x100>
    2a4e:	485c                	lw	a5,20(s0)
    2a50:	00042423          	sw	zero,8(s0)
    2a54:	40f007b3          	neg	a5,a5
    2a58:	cc1c                	sw	a5,24(s0)
    2a5a:	481c                	lw	a5,16(s0)
    2a5c:	4501                	li	a0,0
    2a5e:	f7a5                	bnez	a5,29c6 <__swsetup_r+0x52>
    2a60:	00c41783          	lh	a5,12(s0)
    2a64:	0807f713          	andi	a4,a5,128
    2a68:	df39                	beqz	a4,29c6 <__swsetup_r+0x52>
    2a6a:	0407e793          	ori	a5,a5,64
    2a6e:	00f41623          	sh	a5,12(s0)
    2a72:	bf89                	j	29c4 <__swsetup_r+0x50>
    2a74:	8b89                	andi	a5,a5,2
    2a76:	4701                	li	a4,0
    2a78:	e391                	bnez	a5,2a7c <__swsetup_r+0x108>
    2a7a:	4858                	lw	a4,20(s0)
    2a7c:	c418                	sw	a4,8(s0)
    2a7e:	bff1                	j	2a5a <__swsetup_r+0xe6>

00002a80 <abort>:
abort():
    2a80:	1141                	addi	sp,sp,-16
    2a82:	4519                	li	a0,6
    2a84:	c606                	sw	ra,12(sp)
    2a86:	2de9                	jal	3160 <raise>
    2a88:	4505                	li	a0,1
    2a8a:	13f000ef          	jal	ra,33c8 <_exit>

00002a8e <__sflush_r>:
__sflush_r():
    2a8e:	00c5d783          	lhu	a5,12(a1)
    2a92:	1101                	addi	sp,sp,-32
    2a94:	cc22                	sw	s0,24(sp)
    2a96:	ca26                	sw	s1,20(sp)
    2a98:	ce06                	sw	ra,28(sp)
    2a9a:	c84a                	sw	s2,16(sp)
    2a9c:	c64e                	sw	s3,12(sp)
    2a9e:	0087f713          	andi	a4,a5,8
    2aa2:	84aa                	mv	s1,a0
    2aa4:	842e                	mv	s0,a1
    2aa6:	ef71                	bnez	a4,2b82 <__sflush_r+0xf4>
    2aa8:	41d8                	lw	a4,4(a1)
    2aaa:	00e04d63          	bgtz	a4,2ac4 <__sflush_r+0x36>
    2aae:	41b8                	lw	a4,64(a1)
    2ab0:	00e04a63          	bgtz	a4,2ac4 <__sflush_r+0x36>
    2ab4:	4501                	li	a0,0
    2ab6:	40f2                	lw	ra,28(sp)
    2ab8:	4462                	lw	s0,24(sp)
    2aba:	44d2                	lw	s1,20(sp)
    2abc:	4942                	lw	s2,16(sp)
    2abe:	49b2                	lw	s3,12(sp)
    2ac0:	6105                	addi	sp,sp,32
    2ac2:	8082                	ret
    2ac4:	5458                	lw	a4,44(s0)
    2ac6:	d77d                	beqz	a4,2ab4 <__sflush_r+0x26>
    2ac8:	0004a903          	lw	s2,0(s1)
    2acc:	01379693          	slli	a3,a5,0x13
    2ad0:	0004a023          	sw	zero,0(s1)
    2ad4:	0606dd63          	bgez	a3,2b4e <__sflush_r+0xc0>
    2ad8:	4870                	lw	a2,84(s0)
    2ada:	00c45783          	lhu	a5,12(s0)
    2ade:	8b91                	andi	a5,a5,4
    2ae0:	c799                	beqz	a5,2aee <__sflush_r+0x60>
    2ae2:	405c                	lw	a5,4(s0)
    2ae4:	8e1d                	sub	a2,a2,a5
    2ae6:	585c                	lw	a5,52(s0)
    2ae8:	c399                	beqz	a5,2aee <__sflush_r+0x60>
    2aea:	403c                	lw	a5,64(s0)
    2aec:	8e1d                	sub	a2,a2,a5
    2aee:	545c                	lw	a5,44(s0)
    2af0:	500c                	lw	a1,32(s0)
    2af2:	4681                	li	a3,0
    2af4:	8526                	mv	a0,s1
    2af6:	9782                	jalr	a5
    2af8:	57fd                	li	a5,-1
    2afa:	00c45703          	lhu	a4,12(s0)
    2afe:	00f51d63          	bne	a0,a5,2b18 <__sflush_r+0x8a>
    2b02:	4094                	lw	a3,0(s1)
    2b04:	47f5                	li	a5,29
    2b06:	06d7e863          	bltu	a5,a3,2b76 <__sflush_r+0xe8>
    2b0a:	204007b7          	lui	a5,0x20400
    2b0e:	0785                	addi	a5,a5,1
    2b10:	00d7d7b3          	srl	a5,a5,a3
    2b14:	8b85                	andi	a5,a5,1
    2b16:	c3a5                	beqz	a5,2b76 <__sflush_r+0xe8>
    2b18:	481c                	lw	a5,16(s0)
    2b1a:	00042223          	sw	zero,4(s0)
    2b1e:	c01c                	sw	a5,0(s0)
    2b20:	01371793          	slli	a5,a4,0x13
    2b24:	0007d863          	bgez	a5,2b34 <__sflush_r+0xa6>
    2b28:	57fd                	li	a5,-1
    2b2a:	00f51463          	bne	a0,a5,2b32 <__sflush_r+0xa4>
    2b2e:	409c                	lw	a5,0(s1)
    2b30:	e391                	bnez	a5,2b34 <__sflush_r+0xa6>
    2b32:	c868                	sw	a0,84(s0)
    2b34:	584c                	lw	a1,52(s0)
    2b36:	0124a023          	sw	s2,0(s1)
    2b3a:	ddad                	beqz	a1,2ab4 <__sflush_r+0x26>
    2b3c:	04440793          	addi	a5,s0,68
    2b40:	00f58463          	beq	a1,a5,2b48 <__sflush_r+0xba>
    2b44:	8526                	mv	a0,s1
    2b46:	2939                	jal	2f64 <_free_r>
    2b48:	02042a23          	sw	zero,52(s0)
    2b4c:	b7a5                	j	2ab4 <__sflush_r+0x26>
    2b4e:	500c                	lw	a1,32(s0)
    2b50:	4601                	li	a2,0
    2b52:	4685                	li	a3,1
    2b54:	8526                	mv	a0,s1
    2b56:	9702                	jalr	a4
    2b58:	57fd                	li	a5,-1
    2b5a:	862a                	mv	a2,a0
    2b5c:	f6f51fe3          	bne	a0,a5,2ada <__sflush_r+0x4c>
    2b60:	409c                	lw	a5,0(s1)
    2b62:	dfa5                	beqz	a5,2ada <__sflush_r+0x4c>
    2b64:	4775                	li	a4,29
    2b66:	00e78563          	beq	a5,a4,2b70 <__sflush_r+0xe2>
    2b6a:	4759                	li	a4,22
    2b6c:	04e79463          	bne	a5,a4,2bb4 <__sflush_r+0x126>
    2b70:	0124a023          	sw	s2,0(s1)
    2b74:	b781                	j	2ab4 <__sflush_r+0x26>
    2b76:	04076713          	ori	a4,a4,64
    2b7a:	00e41623          	sh	a4,12(s0)
    2b7e:	557d                	li	a0,-1
    2b80:	bf1d                	j	2ab6 <__sflush_r+0x28>
    2b82:	0105a983          	lw	s3,16(a1)
    2b86:	f20987e3          	beqz	s3,2ab4 <__sflush_r+0x26>
    2b8a:	0005a903          	lw	s2,0(a1)
    2b8e:	8b8d                	andi	a5,a5,3
    2b90:	0135a023          	sw	s3,0(a1)
    2b94:	41390933          	sub	s2,s2,s3
    2b98:	4701                	li	a4,0
    2b9a:	e391                	bnez	a5,2b9e <__sflush_r+0x110>
    2b9c:	49d8                	lw	a4,20(a1)
    2b9e:	c418                	sw	a4,8(s0)
    2ba0:	f1205ae3          	blez	s2,2ab4 <__sflush_r+0x26>
    2ba4:	541c                	lw	a5,40(s0)
    2ba6:	500c                	lw	a1,32(s0)
    2ba8:	86ca                	mv	a3,s2
    2baa:	864e                	mv	a2,s3
    2bac:	8526                	mv	a0,s1
    2bae:	9782                	jalr	a5
    2bb0:	00a04963          	bgtz	a0,2bc2 <__sflush_r+0x134>
    2bb4:	00c45783          	lhu	a5,12(s0)
    2bb8:	0407e793          	ori	a5,a5,64
    2bbc:	00f41623          	sh	a5,12(s0)
    2bc0:	bf7d                	j	2b7e <__sflush_r+0xf0>
    2bc2:	99aa                	add	s3,s3,a0
    2bc4:	40a90933          	sub	s2,s2,a0
    2bc8:	bfe1                	j	2ba0 <__sflush_r+0x112>

00002bca <_fflush_r>:
_fflush_r():
    2bca:	499c                	lw	a5,16(a1)
    2bcc:	cfb9                	beqz	a5,2c2a <_fflush_r+0x60>
    2bce:	1101                	addi	sp,sp,-32
    2bd0:	cc22                	sw	s0,24(sp)
    2bd2:	ce06                	sw	ra,28(sp)
    2bd4:	842a                	mv	s0,a0
    2bd6:	c511                	beqz	a0,2be2 <_fflush_r+0x18>
    2bd8:	4d1c                	lw	a5,24(a0)
    2bda:	e781                	bnez	a5,2be2 <_fflush_r+0x18>
    2bdc:	c62e                	sw	a1,12(sp)
    2bde:	2229                	jal	2ce8 <__sinit>
    2be0:	45b2                	lw	a1,12(sp)
    2be2:	00001797          	auipc	a5,0x1
    2be6:	90278793          	addi	a5,a5,-1790 # 34e4 <__sf_fake_stdin>
    2bea:	00f59b63          	bne	a1,a5,2c00 <_fflush_r+0x36>
    2bee:	404c                	lw	a1,4(s0)
    2bf0:	00c59783          	lh	a5,12(a1)
    2bf4:	c795                	beqz	a5,2c20 <_fflush_r+0x56>
    2bf6:	8522                	mv	a0,s0
    2bf8:	4462                	lw	s0,24(sp)
    2bfa:	40f2                	lw	ra,28(sp)
    2bfc:	6105                	addi	sp,sp,32
    2bfe:	bd41                	j	2a8e <__sflush_r>
    2c00:	00001797          	auipc	a5,0x1
    2c04:	90478793          	addi	a5,a5,-1788 # 3504 <__sf_fake_stdout>
    2c08:	00f59463          	bne	a1,a5,2c10 <_fflush_r+0x46>
    2c0c:	440c                	lw	a1,8(s0)
    2c0e:	b7cd                	j	2bf0 <_fflush_r+0x26>
    2c10:	00001797          	auipc	a5,0x1
    2c14:	8b478793          	addi	a5,a5,-1868 # 34c4 <__sf_fake_stderr>
    2c18:	fcf59ce3          	bne	a1,a5,2bf0 <_fflush_r+0x26>
    2c1c:	444c                	lw	a1,12(s0)
    2c1e:	bfc9                	j	2bf0 <_fflush_r+0x26>
    2c20:	40f2                	lw	ra,28(sp)
    2c22:	4462                	lw	s0,24(sp)
    2c24:	4501                	li	a0,0
    2c26:	6105                	addi	sp,sp,32
    2c28:	8082                	ret
    2c2a:	4501                	li	a0,0
    2c2c:	8082                	ret

00002c2e <std>:
std():
    2c2e:	1141                	addi	sp,sp,-16
    2c30:	c422                	sw	s0,8(sp)
    2c32:	c606                	sw	ra,12(sp)
    2c34:	842a                	mv	s0,a0
    2c36:	00b51623          	sh	a1,12(a0)
    2c3a:	00c51723          	sh	a2,14(a0)
    2c3e:	00052023          	sw	zero,0(a0)
    2c42:	00052223          	sw	zero,4(a0)
    2c46:	00052423          	sw	zero,8(a0)
    2c4a:	06052223          	sw	zero,100(a0)
    2c4e:	00052823          	sw	zero,16(a0)
    2c52:	00052a23          	sw	zero,20(a0)
    2c56:	00052c23          	sw	zero,24(a0)
    2c5a:	4621                	li	a2,8
    2c5c:	4581                	li	a1,0
    2c5e:	05c50513          	addi	a0,a0,92
    2c62:	cdefd0ef          	jal	ra,140 <memset>
    2c66:	00000797          	auipc	a5,0x0
    2c6a:	53078793          	addi	a5,a5,1328 # 3196 <__sread>
    2c6e:	d05c                	sw	a5,36(s0)
    2c70:	00000797          	auipc	a5,0x0
    2c74:	55678793          	addi	a5,a5,1366 # 31c6 <__swrite>
    2c78:	d41c                	sw	a5,40(s0)
    2c7a:	00000797          	auipc	a5,0x0
    2c7e:	59a78793          	addi	a5,a5,1434 # 3214 <__sseek>
    2c82:	d45c                	sw	a5,44(s0)
    2c84:	00000797          	auipc	a5,0x0
    2c88:	5c678793          	addi	a5,a5,1478 # 324a <__sclose>
    2c8c:	d000                	sw	s0,32(s0)
    2c8e:	d81c                	sw	a5,48(s0)
    2c90:	40b2                	lw	ra,12(sp)
    2c92:	4422                	lw	s0,8(sp)
    2c94:	0141                	addi	sp,sp,16
    2c96:	8082                	ret

00002c98 <_cleanup_r>:
_cleanup_r():
    2c98:	00000597          	auipc	a1,0x0
    2c9c:	f3258593          	addi	a1,a1,-206 # 2bca <_fflush_r>
    2ca0:	a2a9                	j	2dea <_fwalk_reent>

00002ca2 <__sfmoreglue>:
__sfmoreglue():
    2ca2:	1141                	addi	sp,sp,-16
    2ca4:	c226                	sw	s1,4(sp)
    2ca6:	06800613          	li	a2,104
    2caa:	fff58493          	addi	s1,a1,-1
    2cae:	02c484b3          	mul	s1,s1,a2
    2cb2:	c04a                	sw	s2,0(sp)
    2cb4:	892e                	mv	s2,a1
    2cb6:	c422                	sw	s0,8(sp)
    2cb8:	c606                	sw	ra,12(sp)
    2cba:	07448593          	addi	a1,s1,116
    2cbe:	26a9                	jal	3008 <_malloc_r>
    2cc0:	842a                	mv	s0,a0
    2cc2:	cd01                	beqz	a0,2cda <__sfmoreglue+0x38>
    2cc4:	00052023          	sw	zero,0(a0)
    2cc8:	01252223          	sw	s2,4(a0)
    2ccc:	0531                	addi	a0,a0,12
    2cce:	c408                	sw	a0,8(s0)
    2cd0:	06848613          	addi	a2,s1,104
    2cd4:	4581                	li	a1,0
    2cd6:	c6afd0ef          	jal	ra,140 <memset>
    2cda:	8522                	mv	a0,s0
    2cdc:	40b2                	lw	ra,12(sp)
    2cde:	4422                	lw	s0,8(sp)
    2ce0:	4492                	lw	s1,4(sp)
    2ce2:	4902                	lw	s2,0(sp)
    2ce4:	0141                	addi	sp,sp,16
    2ce6:	8082                	ret

00002ce8 <__sinit>:
__sinit():
    2ce8:	4d1c                	lw	a5,24(a0)
    2cea:	e3ad                	bnez	a5,2d4c <__sinit+0x64>
    2cec:	1141                	addi	sp,sp,-16
    2cee:	c606                	sw	ra,12(sp)
    2cf0:	c422                	sw	s0,8(sp)
    2cf2:	00000797          	auipc	a5,0x0
    2cf6:	fa678793          	addi	a5,a5,-90 # 2c98 <_cleanup_r>
    2cfa:	d51c                	sw	a5,40(a0)
    2cfc:	80c18793          	addi	a5,gp,-2036 # 2000007c <_global_impure_ptr>
    2d00:	439c                	lw	a5,0(a5)
    2d02:	04052423          	sw	zero,72(a0)
    2d06:	04052623          	sw	zero,76(a0)
    2d0a:	04052823          	sw	zero,80(a0)
    2d0e:	00f51463          	bne	a0,a5,2d16 <__sinit+0x2e>
    2d12:	4785                	li	a5,1
    2d14:	cd1c                	sw	a5,24(a0)
    2d16:	842a                	mv	s0,a0
    2d18:	281d                	jal	2d4e <__sfp>
    2d1a:	c048                	sw	a0,4(s0)
    2d1c:	8522                	mv	a0,s0
    2d1e:	2805                	jal	2d4e <__sfp>
    2d20:	c408                	sw	a0,8(s0)
    2d22:	8522                	mv	a0,s0
    2d24:	202d                	jal	2d4e <__sfp>
    2d26:	c448                	sw	a0,12(s0)
    2d28:	4048                	lw	a0,4(s0)
    2d2a:	4601                	li	a2,0
    2d2c:	4591                	li	a1,4
    2d2e:	3701                	jal	2c2e <std>
    2d30:	4408                	lw	a0,8(s0)
    2d32:	4605                	li	a2,1
    2d34:	45a5                	li	a1,9
    2d36:	3de5                	jal	2c2e <std>
    2d38:	4448                	lw	a0,12(s0)
    2d3a:	4609                	li	a2,2
    2d3c:	45c9                	li	a1,18
    2d3e:	3dc5                	jal	2c2e <std>
    2d40:	4785                	li	a5,1
    2d42:	cc1c                	sw	a5,24(s0)
    2d44:	40b2                	lw	ra,12(sp)
    2d46:	4422                	lw	s0,8(sp)
    2d48:	0141                	addi	sp,sp,16
    2d4a:	8082                	ret
    2d4c:	8082                	ret

00002d4e <__sfp>:
__sfp():
    2d4e:	1141                	addi	sp,sp,-16
    2d50:	80c18793          	addi	a5,gp,-2036 # 2000007c <_global_impure_ptr>
    2d54:	c226                	sw	s1,4(sp)
    2d56:	4384                	lw	s1,0(a5)
    2d58:	c04a                	sw	s2,0(sp)
    2d5a:	c606                	sw	ra,12(sp)
    2d5c:	4c9c                	lw	a5,24(s1)
    2d5e:	c422                	sw	s0,8(sp)
    2d60:	892a                	mv	s2,a0
    2d62:	e399                	bnez	a5,2d68 <__sfp+0x1a>
    2d64:	8526                	mv	a0,s1
    2d66:	3749                	jal	2ce8 <__sinit>
    2d68:	04848493          	addi	s1,s1,72
    2d6c:	4480                	lw	s0,8(s1)
    2d6e:	40dc                	lw	a5,4(s1)
    2d70:	17fd                	addi	a5,a5,-1
    2d72:	0007d663          	bgez	a5,2d7e <__sfp+0x30>
    2d76:	409c                	lw	a5,0(s1)
    2d78:	cfb9                	beqz	a5,2dd6 <__sfp+0x88>
    2d7a:	4084                	lw	s1,0(s1)
    2d7c:	bfc5                	j	2d6c <__sfp+0x1e>
    2d7e:	00c41703          	lh	a4,12(s0)
    2d82:	e739                	bnez	a4,2dd0 <__sfp+0x82>
    2d84:	77c1                	lui	a5,0xffff0
    2d86:	0785                	addi	a5,a5,1
    2d88:	06042223          	sw	zero,100(s0)
    2d8c:	00042023          	sw	zero,0(s0)
    2d90:	00042223          	sw	zero,4(s0)
    2d94:	00042423          	sw	zero,8(s0)
    2d98:	c45c                	sw	a5,12(s0)
    2d9a:	00042823          	sw	zero,16(s0)
    2d9e:	00042a23          	sw	zero,20(s0)
    2da2:	00042c23          	sw	zero,24(s0)
    2da6:	4621                	li	a2,8
    2da8:	4581                	li	a1,0
    2daa:	05c40513          	addi	a0,s0,92
    2dae:	b92fd0ef          	jal	ra,140 <memset>
    2db2:	02042a23          	sw	zero,52(s0)
    2db6:	02042c23          	sw	zero,56(s0)
    2dba:	04042423          	sw	zero,72(s0)
    2dbe:	04042623          	sw	zero,76(s0)
    2dc2:	8522                	mv	a0,s0
    2dc4:	40b2                	lw	ra,12(sp)
    2dc6:	4422                	lw	s0,8(sp)
    2dc8:	4492                	lw	s1,4(sp)
    2dca:	4902                	lw	s2,0(sp)
    2dcc:	0141                	addi	sp,sp,16
    2dce:	8082                	ret
    2dd0:	06840413          	addi	s0,s0,104
    2dd4:	bf71                	j	2d70 <__sfp+0x22>
    2dd6:	4591                	li	a1,4
    2dd8:	854a                	mv	a0,s2
    2dda:	35e1                	jal	2ca2 <__sfmoreglue>
    2ddc:	c088                	sw	a0,0(s1)
    2dde:	fd51                	bnez	a0,2d7a <__sfp+0x2c>
    2de0:	47b1                	li	a5,12
    2de2:	00f92023          	sw	a5,0(s2)
    2de6:	4401                	li	s0,0
    2de8:	bfe9                	j	2dc2 <__sfp+0x74>

00002dea <_fwalk_reent>:
_fwalk_reent():
    2dea:	7179                	addi	sp,sp,-48
    2dec:	d422                	sw	s0,40(sp)
    2dee:	d04a                	sw	s2,32(sp)
    2df0:	cc52                	sw	s4,24(sp)
    2df2:	ca56                	sw	s5,20(sp)
    2df4:	c85a                	sw	s6,16(sp)
    2df6:	c65e                	sw	s7,12(sp)
    2df8:	d606                	sw	ra,44(sp)
    2dfa:	d226                	sw	s1,36(sp)
    2dfc:	ce4e                	sw	s3,28(sp)
    2dfe:	8a2a                	mv	s4,a0
    2e00:	8aae                	mv	s5,a1
    2e02:	04850413          	addi	s0,a0,72
    2e06:	4901                	li	s2,0
    2e08:	4b05                	li	s6,1
    2e0a:	5bfd                	li	s7,-1
    2e0c:	ec09                	bnez	s0,2e26 <_fwalk_reent+0x3c>
    2e0e:	50b2                	lw	ra,44(sp)
    2e10:	5422                	lw	s0,40(sp)
    2e12:	854a                	mv	a0,s2
    2e14:	5492                	lw	s1,36(sp)
    2e16:	5902                	lw	s2,32(sp)
    2e18:	49f2                	lw	s3,28(sp)
    2e1a:	4a62                	lw	s4,24(sp)
    2e1c:	4ad2                	lw	s5,20(sp)
    2e1e:	4b42                	lw	s6,16(sp)
    2e20:	4bb2                	lw	s7,12(sp)
    2e22:	6145                	addi	sp,sp,48
    2e24:	8082                	ret
    2e26:	4404                	lw	s1,8(s0)
    2e28:	00442983          	lw	s3,4(s0)
    2e2c:	19fd                	addi	s3,s3,-1
    2e2e:	0009d463          	bgez	s3,2e36 <_fwalk_reent+0x4c>
    2e32:	4000                	lw	s0,0(s0)
    2e34:	bfe1                	j	2e0c <_fwalk_reent+0x22>
    2e36:	00c4d783          	lhu	a5,12(s1)
    2e3a:	00fb7b63          	bgeu	s6,a5,2e50 <_fwalk_reent+0x66>
    2e3e:	00e49783          	lh	a5,14(s1)
    2e42:	01778763          	beq	a5,s7,2e50 <_fwalk_reent+0x66>
    2e46:	85a6                	mv	a1,s1
    2e48:	8552                	mv	a0,s4
    2e4a:	9a82                	jalr	s5
    2e4c:	00a96933          	or	s2,s2,a0
    2e50:	06848493          	addi	s1,s1,104
    2e54:	bfe1                	j	2e2c <_fwalk_reent+0x42>

00002e56 <__swhatbuf_r>:
__swhatbuf_r():
    2e56:	7119                	addi	sp,sp,-128
    2e58:	daa6                	sw	s1,116(sp)
    2e5a:	84ae                	mv	s1,a1
    2e5c:	00e59583          	lh	a1,14(a1)
    2e60:	dca2                	sw	s0,120(sp)
    2e62:	de86                	sw	ra,124(sp)
    2e64:	8432                	mv	s0,a2
    2e66:	0005dc63          	bgez	a1,2e7e <__swhatbuf_r+0x28>
    2e6a:	00c4d783          	lhu	a5,12(s1)
    2e6e:	0006a023          	sw	zero,0(a3)
    2e72:	0807f793          	andi	a5,a5,128
    2e76:	e39d                	bnez	a5,2e9c <__swhatbuf_r+0x46>
    2e78:	40000793          	li	a5,1024
    2e7c:	a015                	j	2ea0 <__swhatbuf_r+0x4a>
    2e7e:	0830                	addi	a2,sp,24
    2e80:	c636                	sw	a3,12(sp)
    2e82:	2115                	jal	32a6 <_fstat_r>
    2e84:	46b2                	lw	a3,12(sp)
    2e86:	fe0542e3          	bltz	a0,2e6a <__swhatbuf_r+0x14>
    2e8a:	4772                	lw	a4,28(sp)
    2e8c:	67bd                	lui	a5,0xf
    2e8e:	8ff9                	and	a5,a5,a4
    2e90:	7779                	lui	a4,0xffffe
    2e92:	97ba                	add	a5,a5,a4
    2e94:	0017b793          	seqz	a5,a5
    2e98:	c29c                	sw	a5,0(a3)
    2e9a:	bff9                	j	2e78 <__swhatbuf_r+0x22>
    2e9c:	04000793          	li	a5,64
    2ea0:	c01c                	sw	a5,0(s0)
    2ea2:	50f6                	lw	ra,124(sp)
    2ea4:	5466                	lw	s0,120(sp)
    2ea6:	54d6                	lw	s1,116(sp)
    2ea8:	4501                	li	a0,0
    2eaa:	6109                	addi	sp,sp,128
    2eac:	8082                	ret

00002eae <__smakebuf_r>:
__smakebuf_r():
    2eae:	00c5d783          	lhu	a5,12(a1)
    2eb2:	1101                	addi	sp,sp,-32
    2eb4:	cc22                	sw	s0,24(sp)
    2eb6:	ce06                	sw	ra,28(sp)
    2eb8:	ca26                	sw	s1,20(sp)
    2eba:	c84a                	sw	s2,16(sp)
    2ebc:	8b89                	andi	a5,a5,2
    2ebe:	842e                	mv	s0,a1
    2ec0:	cf89                	beqz	a5,2eda <__smakebuf_r+0x2c>
    2ec2:	04740793          	addi	a5,s0,71
    2ec6:	c01c                	sw	a5,0(s0)
    2ec8:	c81c                	sw	a5,16(s0)
    2eca:	4785                	li	a5,1
    2ecc:	c85c                	sw	a5,20(s0)
    2ece:	40f2                	lw	ra,28(sp)
    2ed0:	4462                	lw	s0,24(sp)
    2ed2:	44d2                	lw	s1,20(sp)
    2ed4:	4942                	lw	s2,16(sp)
    2ed6:	6105                	addi	sp,sp,32
    2ed8:	8082                	ret
    2eda:	0074                	addi	a3,sp,12
    2edc:	0030                	addi	a2,sp,8
    2ede:	84aa                	mv	s1,a0
    2ee0:	3f9d                	jal	2e56 <__swhatbuf_r>
    2ee2:	45a2                	lw	a1,8(sp)
    2ee4:	892a                	mv	s2,a0
    2ee6:	8526                	mv	a0,s1
    2ee8:	2205                	jal	3008 <_malloc_r>
    2eea:	ed01                	bnez	a0,2f02 <__smakebuf_r+0x54>
    2eec:	00c41783          	lh	a5,12(s0)
    2ef0:	2007f713          	andi	a4,a5,512
    2ef4:	ff69                	bnez	a4,2ece <__smakebuf_r+0x20>
    2ef6:	9bf1                	andi	a5,a5,-4
    2ef8:	0027e793          	ori	a5,a5,2
    2efc:	00f41623          	sh	a5,12(s0)
    2f00:	b7c9                	j	2ec2 <__smakebuf_r+0x14>
    2f02:	00000797          	auipc	a5,0x0
    2f06:	d9678793          	addi	a5,a5,-618 # 2c98 <_cleanup_r>
    2f0a:	d49c                	sw	a5,40(s1)
    2f0c:	00c45783          	lhu	a5,12(s0)
    2f10:	c008                	sw	a0,0(s0)
    2f12:	c808                	sw	a0,16(s0)
    2f14:	0807e793          	ori	a5,a5,128
    2f18:	00f41623          	sh	a5,12(s0)
    2f1c:	47a2                	lw	a5,8(sp)
    2f1e:	c85c                	sw	a5,20(s0)
    2f20:	47b2                	lw	a5,12(sp)
    2f22:	cf89                	beqz	a5,2f3c <__smakebuf_r+0x8e>
    2f24:	00e41583          	lh	a1,14(s0)
    2f28:	8526                	mv	a0,s1
    2f2a:	265d                	jal	32d0 <_isatty_r>
    2f2c:	c901                	beqz	a0,2f3c <__smakebuf_r+0x8e>
    2f2e:	00c45783          	lhu	a5,12(s0)
    2f32:	9bf1                	andi	a5,a5,-4
    2f34:	0017e793          	ori	a5,a5,1
    2f38:	00f41623          	sh	a5,12(s0)
    2f3c:	00c45783          	lhu	a5,12(s0)
    2f40:	00f96933          	or	s2,s2,a5
    2f44:	01241623          	sh	s2,12(s0)
    2f48:	b759                	j	2ece <__smakebuf_r+0x20>

00002f4a <memchr>:
memchr():
    2f4a:	0ff5f593          	andi	a1,a1,255
    2f4e:	962a                	add	a2,a2,a0
    2f50:	00c51463          	bne	a0,a2,2f58 <memchr+0xe>
    2f54:	4501                	li	a0,0
    2f56:	8082                	ret
    2f58:	00054783          	lbu	a5,0(a0)
    2f5c:	feb78de3          	beq	a5,a1,2f56 <memchr+0xc>
    2f60:	0505                	addi	a0,a0,1
    2f62:	b7fd                	j	2f50 <memchr+0x6>

00002f64 <_free_r>:
_free_r():
    2f64:	c1cd                	beqz	a1,3006 <_free_r+0xa2>
    2f66:	ffc5a783          	lw	a5,-4(a1)
    2f6a:	1141                	addi	sp,sp,-16
    2f6c:	c422                	sw	s0,8(sp)
    2f6e:	c606                	sw	ra,12(sp)
    2f70:	c226                	sw	s1,4(sp)
    2f72:	ffc58413          	addi	s0,a1,-4
    2f76:	0007d363          	bgez	a5,2f7c <_free_r+0x18>
    2f7a:	943e                	add	s0,s0,a5
    2f7c:	84aa                	mv	s1,a0
    2f7e:	265d                	jal	3324 <__malloc_lock>
    2f80:	82c18793          	addi	a5,gp,-2004 # 2000009c <__malloc_free_list>
    2f84:	439c                	lw	a5,0(a5)
    2f86:	eb99                	bnez	a5,2f9c <_free_r+0x38>
    2f88:	00042223          	sw	zero,4(s0)
    2f8c:	8281a623          	sw	s0,-2004(gp) # 2000009c <__malloc_free_list>
    2f90:	4422                	lw	s0,8(sp)
    2f92:	40b2                	lw	ra,12(sp)
    2f94:	8526                	mv	a0,s1
    2f96:	4492                	lw	s1,4(sp)
    2f98:	0141                	addi	sp,sp,16
    2f9a:	a671                	j	3326 <__malloc_unlock>
    2f9c:	00f47e63          	bgeu	s0,a5,2fb8 <_free_r+0x54>
    2fa0:	4014                	lw	a3,0(s0)
    2fa2:	00d40733          	add	a4,s0,a3
    2fa6:	00e79663          	bne	a5,a4,2fb2 <_free_r+0x4e>
    2faa:	4398                	lw	a4,0(a5)
    2fac:	43dc                	lw	a5,4(a5)
    2fae:	9736                	add	a4,a4,a3
    2fb0:	c018                	sw	a4,0(s0)
    2fb2:	c05c                	sw	a5,4(s0)
    2fb4:	bfe1                	j	2f8c <_free_r+0x28>
    2fb6:	87ba                	mv	a5,a4
    2fb8:	43d8                	lw	a4,4(a5)
    2fba:	c319                	beqz	a4,2fc0 <_free_r+0x5c>
    2fbc:	fee47de3          	bgeu	s0,a4,2fb6 <_free_r+0x52>
    2fc0:	4394                	lw	a3,0(a5)
    2fc2:	00d78633          	add	a2,a5,a3
    2fc6:	00861f63          	bne	a2,s0,2fe4 <_free_r+0x80>
    2fca:	4010                	lw	a2,0(s0)
    2fcc:	96b2                	add	a3,a3,a2
    2fce:	c394                	sw	a3,0(a5)
    2fd0:	00d78633          	add	a2,a5,a3
    2fd4:	fac71ee3          	bne	a4,a2,2f90 <_free_r+0x2c>
    2fd8:	4310                	lw	a2,0(a4)
    2fda:	4358                	lw	a4,4(a4)
    2fdc:	96b2                	add	a3,a3,a2
    2fde:	c394                	sw	a3,0(a5)
    2fe0:	c3d8                	sw	a4,4(a5)
    2fe2:	b77d                	j	2f90 <_free_r+0x2c>
    2fe4:	00c47563          	bgeu	s0,a2,2fee <_free_r+0x8a>
    2fe8:	47b1                	li	a5,12
    2fea:	c09c                	sw	a5,0(s1)
    2fec:	b755                	j	2f90 <_free_r+0x2c>
    2fee:	4010                	lw	a2,0(s0)
    2ff0:	00c406b3          	add	a3,s0,a2
    2ff4:	00d71663          	bne	a4,a3,3000 <_free_r+0x9c>
    2ff8:	4314                	lw	a3,0(a4)
    2ffa:	4358                	lw	a4,4(a4)
    2ffc:	96b2                	add	a3,a3,a2
    2ffe:	c014                	sw	a3,0(s0)
    3000:	c058                	sw	a4,4(s0)
    3002:	c3c0                	sw	s0,4(a5)
    3004:	b771                	j	2f90 <_free_r+0x2c>
    3006:	8082                	ret

00003008 <_malloc_r>:
_malloc_r():
    3008:	1101                	addi	sp,sp,-32
    300a:	ca26                	sw	s1,20(sp)
    300c:	00358493          	addi	s1,a1,3
    3010:	98f1                	andi	s1,s1,-4
    3012:	ce06                	sw	ra,28(sp)
    3014:	cc22                	sw	s0,24(sp)
    3016:	c84a                	sw	s2,16(sp)
    3018:	c64e                	sw	s3,12(sp)
    301a:	04a1                	addi	s1,s1,8
    301c:	47b1                	li	a5,12
    301e:	04f4f163          	bgeu	s1,a5,3060 <_malloc_r+0x58>
    3022:	44b1                	li	s1,12
    3024:	04b4e063          	bltu	s1,a1,3064 <_malloc_r+0x5c>
    3028:	892a                	mv	s2,a0
    302a:	2ced                	jal	3324 <__malloc_lock>
    302c:	82c18793          	addi	a5,gp,-2004 # 2000009c <__malloc_free_list>
    3030:	4398                	lw	a4,0(a5)
    3032:	843a                	mv	s0,a4
    3034:	e031                	bnez	s0,3078 <_malloc_r+0x70>
    3036:	83018793          	addi	a5,gp,-2000 # 200000a0 <__malloc_sbrk_start>
    303a:	439c                	lw	a5,0(a5)
    303c:	e791                	bnez	a5,3048 <_malloc_r+0x40>
    303e:	4581                	li	a1,0
    3040:	854a                	mv	a0,s2
    3042:	2851                	jal	30d6 <_sbrk_r>
    3044:	82a1a823          	sw	a0,-2000(gp) # 200000a0 <__malloc_sbrk_start>
    3048:	85a6                	mv	a1,s1
    304a:	854a                	mv	a0,s2
    304c:	2069                	jal	30d6 <_sbrk_r>
    304e:	59fd                	li	s3,-1
    3050:	07351763          	bne	a0,s3,30be <_malloc_r+0xb6>
    3054:	47b1                	li	a5,12
    3056:	00f92023          	sw	a5,0(s2)
    305a:	854a                	mv	a0,s2
    305c:	24e9                	jal	3326 <__malloc_unlock>
    305e:	a029                	j	3068 <_malloc_r+0x60>
    3060:	fc04d2e3          	bgez	s1,3024 <_malloc_r+0x1c>
    3064:	47b1                	li	a5,12
    3066:	c11c                	sw	a5,0(a0)
    3068:	4501                	li	a0,0
    306a:	40f2                	lw	ra,28(sp)
    306c:	4462                	lw	s0,24(sp)
    306e:	44d2                	lw	s1,20(sp)
    3070:	4942                	lw	s2,16(sp)
    3072:	49b2                	lw	s3,12(sp)
    3074:	6105                	addi	sp,sp,32
    3076:	8082                	ret
    3078:	401c                	lw	a5,0(s0)
    307a:	8f85                	sub	a5,a5,s1
    307c:	0207ce63          	bltz	a5,30b8 <_malloc_r+0xb0>
    3080:	46ad                	li	a3,11
    3082:	00f6f663          	bgeu	a3,a5,308e <_malloc_r+0x86>
    3086:	c01c                	sw	a5,0(s0)
    3088:	943e                	add	s0,s0,a5
    308a:	c004                	sw	s1,0(s0)
    308c:	a031                	j	3098 <_malloc_r+0x90>
    308e:	405c                	lw	a5,4(s0)
    3090:	02871263          	bne	a4,s0,30b4 <_malloc_r+0xac>
    3094:	82f1a623          	sw	a5,-2004(gp) # 2000009c <__malloc_free_list>
    3098:	854a                	mv	a0,s2
    309a:	2471                	jal	3326 <__malloc_unlock>
    309c:	00b40513          	addi	a0,s0,11
    30a0:	00440793          	addi	a5,s0,4
    30a4:	9961                	andi	a0,a0,-8
    30a6:	40f50733          	sub	a4,a0,a5
    30aa:	d361                	beqz	a4,306a <_malloc_r+0x62>
    30ac:	943a                	add	s0,s0,a4
    30ae:	8f89                	sub	a5,a5,a0
    30b0:	c01c                	sw	a5,0(s0)
    30b2:	bf65                	j	306a <_malloc_r+0x62>
    30b4:	c35c                	sw	a5,4(a4)
    30b6:	b7cd                	j	3098 <_malloc_r+0x90>
    30b8:	8722                	mv	a4,s0
    30ba:	4040                	lw	s0,4(s0)
    30bc:	bfa5                	j	3034 <_malloc_r+0x2c>
    30be:	00350413          	addi	s0,a0,3
    30c2:	9871                	andi	s0,s0,-4
    30c4:	fc8503e3          	beq	a0,s0,308a <_malloc_r+0x82>
    30c8:	40a405b3          	sub	a1,s0,a0
    30cc:	854a                	mv	a0,s2
    30ce:	2021                	jal	30d6 <_sbrk_r>
    30d0:	fb351de3          	bne	a0,s3,308a <_malloc_r+0x82>
    30d4:	b741                	j	3054 <_malloc_r+0x4c>

000030d6 <_sbrk_r>:
_sbrk_r():
    30d6:	1141                	addi	sp,sp,-16
    30d8:	c422                	sw	s0,8(sp)
    30da:	842a                	mv	s0,a0
    30dc:	852e                	mv	a0,a1
    30de:	8401a823          	sw	zero,-1968(gp) # 200000c0 <errno>
    30e2:	c606                	sw	ra,12(sp)
    30e4:	24d1                	jal	33a8 <_sbrk>
    30e6:	57fd                	li	a5,-1
    30e8:	00f51763          	bne	a0,a5,30f6 <_sbrk_r+0x20>
    30ec:	85018793          	addi	a5,gp,-1968 # 200000c0 <errno>
    30f0:	439c                	lw	a5,0(a5)
    30f2:	c391                	beqz	a5,30f6 <_sbrk_r+0x20>
    30f4:	c01c                	sw	a5,0(s0)
    30f6:	40b2                	lw	ra,12(sp)
    30f8:	4422                	lw	s0,8(sp)
    30fa:	0141                	addi	sp,sp,16
    30fc:	8082                	ret

000030fe <_raise_r>:
_raise_r():
    30fe:	47fd                	li	a5,31
    3100:	00b7f663          	bgeu	a5,a1,310c <_raise_r+0xe>
    3104:	47d9                	li	a5,22
    3106:	c11c                	sw	a5,0(a0)
    3108:	557d                	li	a0,-1
    310a:	8082                	ret
    310c:	417c                	lw	a5,68(a0)
    310e:	1101                	addi	sp,sp,-32
    3110:	cc22                	sw	s0,24(sp)
    3112:	ce06                	sw	ra,28(sp)
    3114:	862e                	mv	a2,a1
    3116:	842a                	mv	s0,a0
    3118:	c791                	beqz	a5,3124 <_raise_r+0x26>
    311a:	00259713          	slli	a4,a1,0x2
    311e:	97ba                	add	a5,a5,a4
    3120:	4398                	lw	a4,0(a5)
    3122:	eb19                	bnez	a4,3138 <_raise_r+0x3a>
    3124:	8522                	mv	a0,s0
    3126:	c632                	sw	a2,12(sp)
    3128:	20b5                	jal	3194 <_getpid_r>
    312a:	85aa                	mv	a1,a0
    312c:	8522                	mv	a0,s0
    312e:	4462                	lw	s0,24(sp)
    3130:	4632                	lw	a2,12(sp)
    3132:	40f2                	lw	ra,28(sp)
    3134:	6105                	addi	sp,sp,32
    3136:	a815                	j	316a <_kill_r>
    3138:	4685                	li	a3,1
    313a:	4501                	li	a0,0
    313c:	00d70863          	beq	a4,a3,314c <_raise_r+0x4e>
    3140:	56fd                	li	a3,-1
    3142:	00d71963          	bne	a4,a3,3154 <_raise_r+0x56>
    3146:	47d9                	li	a5,22
    3148:	c01c                	sw	a5,0(s0)
    314a:	4505                	li	a0,1
    314c:	40f2                	lw	ra,28(sp)
    314e:	4462                	lw	s0,24(sp)
    3150:	6105                	addi	sp,sp,32
    3152:	8082                	ret
    3154:	852e                	mv	a0,a1
    3156:	0007a023          	sw	zero,0(a5)
    315a:	9702                	jalr	a4
    315c:	4501                	li	a0,0
    315e:	b7fd                	j	314c <_raise_r+0x4e>

00003160 <raise>:
raise():
    3160:	80818793          	addi	a5,gp,-2040 # 20000078 <_impure_ptr>
    3164:	85aa                	mv	a1,a0
    3166:	4388                	lw	a0,0(a5)
    3168:	bf59                	j	30fe <_raise_r>

0000316a <_kill_r>:
_kill_r():
    316a:	1141                	addi	sp,sp,-16
    316c:	c422                	sw	s0,8(sp)
    316e:	842a                	mv	s0,a0
    3170:	852e                	mv	a0,a1
    3172:	85b2                	mv	a1,a2
    3174:	8401a823          	sw	zero,-1968(gp) # 200000c0 <errno>
    3178:	c606                	sw	ra,12(sp)
    317a:	2429                	jal	3384 <_kill>
    317c:	57fd                	li	a5,-1
    317e:	00f51763          	bne	a0,a5,318c <_kill_r+0x22>
    3182:	85018793          	addi	a5,gp,-1968 # 200000c0 <errno>
    3186:	439c                	lw	a5,0(a5)
    3188:	c391                	beqz	a5,318c <_kill_r+0x22>
    318a:	c01c                	sw	a5,0(s0)
    318c:	40b2                	lw	ra,12(sp)
    318e:	4422                	lw	s0,8(sp)
    3190:	0141                	addi	sp,sp,16
    3192:	8082                	ret

00003194 <_getpid_r>:
_getpid_r():
    3194:	aae1                	j	336c <_getpid>

00003196 <__sread>:
__sread():
    3196:	1141                	addi	sp,sp,-16
    3198:	c422                	sw	s0,8(sp)
    319a:	842e                	mv	s0,a1
    319c:	00e59583          	lh	a1,14(a1)
    31a0:	c606                	sw	ra,12(sp)
    31a2:	2259                	jal	3328 <_read_r>
    31a4:	00054963          	bltz	a0,31b6 <__sread+0x20>
    31a8:	487c                	lw	a5,84(s0)
    31aa:	97aa                	add	a5,a5,a0
    31ac:	c87c                	sw	a5,84(s0)
    31ae:	40b2                	lw	ra,12(sp)
    31b0:	4422                	lw	s0,8(sp)
    31b2:	0141                	addi	sp,sp,16
    31b4:	8082                	ret
    31b6:	00c45783          	lhu	a5,12(s0)
    31ba:	777d                	lui	a4,0xfffff
    31bc:	177d                	addi	a4,a4,-1
    31be:	8ff9                	and	a5,a5,a4
    31c0:	00f41623          	sh	a5,12(s0)
    31c4:	b7ed                	j	31ae <__sread+0x18>

000031c6 <__swrite>:
__swrite():
    31c6:	00c5d783          	lhu	a5,12(a1)
    31ca:	1101                	addi	sp,sp,-32
    31cc:	cc22                	sw	s0,24(sp)
    31ce:	ca26                	sw	s1,20(sp)
    31d0:	c84a                	sw	s2,16(sp)
    31d2:	c64e                	sw	s3,12(sp)
    31d4:	ce06                	sw	ra,28(sp)
    31d6:	1007f793          	andi	a5,a5,256
    31da:	84aa                	mv	s1,a0
    31dc:	842e                	mv	s0,a1
    31de:	8932                	mv	s2,a2
    31e0:	89b6                	mv	s3,a3
    31e2:	c791                	beqz	a5,31ee <__swrite+0x28>
    31e4:	00e59583          	lh	a1,14(a1)
    31e8:	4689                	li	a3,2
    31ea:	4601                	li	a2,0
    31ec:	2231                	jal	32f8 <_lseek_r>
    31ee:	00c45783          	lhu	a5,12(s0)
    31f2:	777d                	lui	a4,0xfffff
    31f4:	177d                	addi	a4,a4,-1
    31f6:	8ff9                	and	a5,a5,a4
    31f8:	00f41623          	sh	a5,12(s0)
    31fc:	00e41583          	lh	a1,14(s0)
    3200:	4462                	lw	s0,24(sp)
    3202:	40f2                	lw	ra,28(sp)
    3204:	86ce                	mv	a3,s3
    3206:	864a                	mv	a2,s2
    3208:	49b2                	lw	s3,12(sp)
    320a:	4942                	lw	s2,16(sp)
    320c:	8526                	mv	a0,s1
    320e:	44d2                	lw	s1,20(sp)
    3210:	6105                	addi	sp,sp,32
    3212:	a83d                	j	3250 <_write_r>

00003214 <__sseek>:
__sseek():
    3214:	1141                	addi	sp,sp,-16
    3216:	c422                	sw	s0,8(sp)
    3218:	842e                	mv	s0,a1
    321a:	00e59583          	lh	a1,14(a1)
    321e:	c606                	sw	ra,12(sp)
    3220:	28e1                	jal	32f8 <_lseek_r>
    3222:	57fd                	li	a5,-1
    3224:	00c45703          	lhu	a4,12(s0)
    3228:	00f51b63          	bne	a0,a5,323e <__sseek+0x2a>
    322c:	77fd                	lui	a5,0xfffff
    322e:	17fd                	addi	a5,a5,-1
    3230:	8ff9                	and	a5,a5,a4
    3232:	00f41623          	sh	a5,12(s0)
    3236:	40b2                	lw	ra,12(sp)
    3238:	4422                	lw	s0,8(sp)
    323a:	0141                	addi	sp,sp,16
    323c:	8082                	ret
    323e:	6785                	lui	a5,0x1
    3240:	8fd9                	or	a5,a5,a4
    3242:	00f41623          	sh	a5,12(s0)
    3246:	c868                	sw	a0,84(s0)
    3248:	b7fd                	j	3236 <__sseek+0x22>

0000324a <__sclose>:
__sclose():
    324a:	00e59583          	lh	a1,14(a1)
    324e:	a805                	j	327e <_close_r>

00003250 <_write_r>:
_write_r():
    3250:	1141                	addi	sp,sp,-16
    3252:	c422                	sw	s0,8(sp)
    3254:	842a                	mv	s0,a0
    3256:	852e                	mv	a0,a1
    3258:	85b2                	mv	a1,a2
    325a:	8636                	mv	a2,a3
    325c:	8401a823          	sw	zero,-1968(gp) # 200000c0 <errno>
    3260:	c606                	sw	ra,12(sp)
    3262:	d09fe0ef          	jal	ra,1f6a <_write>
    3266:	57fd                	li	a5,-1
    3268:	00f51763          	bne	a0,a5,3276 <_write_r+0x26>
    326c:	85018793          	addi	a5,gp,-1968 # 200000c0 <errno>
    3270:	439c                	lw	a5,0(a5)
    3272:	c391                	beqz	a5,3276 <_write_r+0x26>
    3274:	c01c                	sw	a5,0(s0)
    3276:	40b2                	lw	ra,12(sp)
    3278:	4422                	lw	s0,8(sp)
    327a:	0141                	addi	sp,sp,16
    327c:	8082                	ret

0000327e <_close_r>:
_close_r():
    327e:	1141                	addi	sp,sp,-16
    3280:	c422                	sw	s0,8(sp)
    3282:	842a                	mv	s0,a0
    3284:	852e                	mv	a0,a1
    3286:	8401a823          	sw	zero,-1968(gp) # 200000c0 <errno>
    328a:	c606                	sw	ra,12(sp)
    328c:	20e1                	jal	3354 <_close>
    328e:	57fd                	li	a5,-1
    3290:	00f51763          	bne	a0,a5,329e <_close_r+0x20>
    3294:	85018793          	addi	a5,gp,-1968 # 200000c0 <errno>
    3298:	439c                	lw	a5,0(a5)
    329a:	c391                	beqz	a5,329e <_close_r+0x20>
    329c:	c01c                	sw	a5,0(s0)
    329e:	40b2                	lw	ra,12(sp)
    32a0:	4422                	lw	s0,8(sp)
    32a2:	0141                	addi	sp,sp,16
    32a4:	8082                	ret

000032a6 <_fstat_r>:
_fstat_r():
    32a6:	1141                	addi	sp,sp,-16
    32a8:	c422                	sw	s0,8(sp)
    32aa:	842a                	mv	s0,a0
    32ac:	852e                	mv	a0,a1
    32ae:	85b2                	mv	a1,a2
    32b0:	8401a823          	sw	zero,-1968(gp) # 200000c0 <errno>
    32b4:	c606                	sw	ra,12(sp)
    32b6:	206d                	jal	3360 <_fstat>
    32b8:	57fd                	li	a5,-1
    32ba:	00f51763          	bne	a0,a5,32c8 <_fstat_r+0x22>
    32be:	85018793          	addi	a5,gp,-1968 # 200000c0 <errno>
    32c2:	439c                	lw	a5,0(a5)
    32c4:	c391                	beqz	a5,32c8 <_fstat_r+0x22>
    32c6:	c01c                	sw	a5,0(s0)
    32c8:	40b2                	lw	ra,12(sp)
    32ca:	4422                	lw	s0,8(sp)
    32cc:	0141                	addi	sp,sp,16
    32ce:	8082                	ret

000032d0 <_isatty_r>:
_isatty_r():
    32d0:	1141                	addi	sp,sp,-16
    32d2:	c422                	sw	s0,8(sp)
    32d4:	842a                	mv	s0,a0
    32d6:	852e                	mv	a0,a1
    32d8:	8401a823          	sw	zero,-1968(gp) # 200000c0 <errno>
    32dc:	c606                	sw	ra,12(sp)
    32de:	2869                	jal	3378 <_isatty>
    32e0:	57fd                	li	a5,-1
    32e2:	00f51763          	bne	a0,a5,32f0 <_isatty_r+0x20>
    32e6:	85018793          	addi	a5,gp,-1968 # 200000c0 <errno>
    32ea:	439c                	lw	a5,0(a5)
    32ec:	c391                	beqz	a5,32f0 <_isatty_r+0x20>
    32ee:	c01c                	sw	a5,0(s0)
    32f0:	40b2                	lw	ra,12(sp)
    32f2:	4422                	lw	s0,8(sp)
    32f4:	0141                	addi	sp,sp,16
    32f6:	8082                	ret

000032f8 <_lseek_r>:
_lseek_r():
    32f8:	1141                	addi	sp,sp,-16
    32fa:	c422                	sw	s0,8(sp)
    32fc:	842a                	mv	s0,a0
    32fe:	852e                	mv	a0,a1
    3300:	85b2                	mv	a1,a2
    3302:	8636                	mv	a2,a3
    3304:	8401a823          	sw	zero,-1968(gp) # 200000c0 <errno>
    3308:	c606                	sw	ra,12(sp)
    330a:	2059                	jal	3390 <_lseek>
    330c:	57fd                	li	a5,-1
    330e:	00f51763          	bne	a0,a5,331c <_lseek_r+0x24>
    3312:	85018793          	addi	a5,gp,-1968 # 200000c0 <errno>
    3316:	439c                	lw	a5,0(a5)
    3318:	c391                	beqz	a5,331c <_lseek_r+0x24>
    331a:	c01c                	sw	a5,0(s0)
    331c:	40b2                	lw	ra,12(sp)
    331e:	4422                	lw	s0,8(sp)
    3320:	0141                	addi	sp,sp,16
    3322:	8082                	ret

00003324 <__malloc_lock>:
__malloc_lock():
    3324:	8082                	ret

00003326 <__malloc_unlock>:
__malloc_unlock():
    3326:	8082                	ret

00003328 <_read_r>:
_read_r():
    3328:	1141                	addi	sp,sp,-16
    332a:	c422                	sw	s0,8(sp)
    332c:	842a                	mv	s0,a0
    332e:	852e                	mv	a0,a1
    3330:	85b2                	mv	a1,a2
    3332:	8636                	mv	a2,a3
    3334:	8401a823          	sw	zero,-1968(gp) # 200000c0 <errno>
    3338:	c606                	sw	ra,12(sp)
    333a:	208d                	jal	339c <_read>
    333c:	57fd                	li	a5,-1
    333e:	00f51763          	bne	a0,a5,334c <_read_r+0x24>
    3342:	85018793          	addi	a5,gp,-1968 # 200000c0 <errno>
    3346:	439c                	lw	a5,0(a5)
    3348:	c391                	beqz	a5,334c <_read_r+0x24>
    334a:	c01c                	sw	a5,0(s0)
    334c:	40b2                	lw	ra,12(sp)
    334e:	4422                	lw	s0,8(sp)
    3350:	0141                	addi	sp,sp,16
    3352:	8082                	ret

00003354 <_close>:
_close():
    3354:	05800793          	li	a5,88
    3358:	84f1a823          	sw	a5,-1968(gp) # 200000c0 <errno>
    335c:	557d                	li	a0,-1
    335e:	8082                	ret

00003360 <_fstat>:
_fstat():
    3360:	05800793          	li	a5,88
    3364:	84f1a823          	sw	a5,-1968(gp) # 200000c0 <errno>
    3368:	557d                	li	a0,-1
    336a:	8082                	ret

0000336c <_getpid>:
_getpid():
    336c:	05800793          	li	a5,88
    3370:	84f1a823          	sw	a5,-1968(gp) # 200000c0 <errno>
    3374:	557d                	li	a0,-1
    3376:	8082                	ret

00003378 <_isatty>:
_isatty():
    3378:	05800793          	li	a5,88
    337c:	84f1a823          	sw	a5,-1968(gp) # 200000c0 <errno>
    3380:	4501                	li	a0,0
    3382:	8082                	ret

00003384 <_kill>:
_kill():
    3384:	05800793          	li	a5,88
    3388:	84f1a823          	sw	a5,-1968(gp) # 200000c0 <errno>
    338c:	557d                	li	a0,-1
    338e:	8082                	ret

00003390 <_lseek>:
_lseek():
    3390:	05800793          	li	a5,88
    3394:	84f1a823          	sw	a5,-1968(gp) # 200000c0 <errno>
    3398:	557d                	li	a0,-1
    339a:	8082                	ret

0000339c <_read>:
_read():
    339c:	05800793          	li	a5,88
    33a0:	84f1a823          	sw	a5,-1968(gp) # 200000c0 <errno>
    33a4:	557d                	li	a0,-1
    33a6:	8082                	ret

000033a8 <_sbrk>:
_sbrk():
    33a8:	83418793          	addi	a5,gp,-1996 # 200000a4 <heap_end.1518>
    33ac:	439c                	lw	a5,0(a5)
    33ae:	c791                	beqz	a5,33ba <_sbrk+0x12>
    33b0:	953e                	add	a0,a0,a5
    33b2:	82a1aa23          	sw	a0,-1996(gp) # 200000a4 <heap_end.1518>
    33b6:	853e                	mv	a0,a5
    33b8:	8082                	ret
    33ba:	85418793          	addi	a5,gp,-1964 # 200000c4 <_ebss>
    33be:	953e                	add	a0,a0,a5
    33c0:	82a1aa23          	sw	a0,-1996(gp) # 200000a4 <heap_end.1518>
    33c4:	853e                	mv	a0,a5
    33c6:	8082                	ret

000033c8 <_exit>:
_exit():
    33c8:	a001                	j	33c8 <_exit>
    33ca:	0000                	unimp
    33cc:	736d                	lui	t1,0xffffb
    33ce:	0000                	unimp
    33d0:	2e2e                	fld	ft8,200(sp)
    33d2:	62694c2f          	0x62694c2f
    33d6:	6172                	flw	ft2,28(sp)
    33d8:	6972                	flw	fs2,28(sp)
    33da:	7365                	lui	t1,0xffff9
    33dc:	6565732f          	0x6565732f
    33e0:	6572666b          	0x6572666b
    33e4:	5f65                	li	t5,-7
    33e6:	696c                	flw	fa1,84(a0)
    33e8:	7262                	flw	ft4,56(sp)
    33ea:	7261                	lui	tp,0xffff8
    33ec:	6569                	lui	a0,0x1a
    33ee:	667a2f73          	csrrs	t5,0x667,s4
    33f2:	705f 7469 632e      	0x632e7469705f
    33f8:	0000                	unimp
    33fa:	0000                	unimp
    33fc:	7375                	lui	t1,0xffffd
	...

00003400 <GPION>:
    3400:	0800 4001 0c00 4001 1000 4001 1400 4001     ...@...@...@...@

00003410 <__func__.3548>:
    3410:	6974 656d 5f72 6970 5f74 6e69 6574 7272     timer_pit_interr
    3420:	7075 5f74 736d 0000                         upt_ms..

00003428 <TIMERN>:
    3428:	2c00 4001 0000 4000 0400 4000 0800 4000     .,.@...@...@...@

00003438 <UARTN>:
    3438:	3800 4001 4400 4000 4800 4000 4c00 4000     .8.@.D.@.H.@.L.@
    3448:	202c 7566 636e 6974 6e6f 203a 0000 0000     , function: ....
    3458:	7361 6573 7472 6f69 206e 2522 2273 6620     assertion "%s" f
    3468:	6961 656c 3a64 6620 6c69 2065 2522 2273     ailed: file "%s"
    3478:	202c 696c 656e 2520 2564 2573 0a73 0000     , line %d%s%s...
    3488:	2d23 2b30 0020 0000 6c68 004c 6665 4567     #-0+ ...hlL.efgE
    3498:	4746 0000 3130 3332 3534 3736 3938 4241     FG..0123456789AB
    34a8:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
    34b8:	3938 6261 6463 6665 0000 0000               89abcdef....

000034c4 <__sf_fake_stderr>:
	...

000034e4 <__sf_fake_stdin>:
	...

00003504 <__sf_fake_stdout>:
	...
